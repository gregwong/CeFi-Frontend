{
  "contractName": "LogicVersionsRegistry",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "logic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        }
      ],
      "name": "LogicVersionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "lastLogic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lastVersion",
          "type": "uint256"
        }
      ],
      "name": "LogicVersionRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldLogic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newLogic",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldVersion",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newVersion",
          "type": "uint256"
        }
      ],
      "name": "LogicVersionUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "consts",
      "outputs": [
        {
          "internalType": "contract LogicVersionsConsts",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "logicVersions",
      "outputs": [
        {
          "internalType": "address",
          "name": "logic",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "logic",
          "type": "address"
        }
      ],
      "name": "createLogicVersion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "logic",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "logicName",
              "type": "bytes32"
            }
          ],
          "internalType": "struct TellerCommon.LogicVersionRequest[]",
          "name": "newLogicVersions",
          "type": "tuple[]"
        }
      ],
      "name": "createLogicVersions",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "newLogic",
          "type": "address"
        }
      ],
      "name": "updateLogicAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "removeLogicVersion",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "getLogicVersion",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "logic",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct LogicVersionLib.LogicVersion",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "getLogicVersionAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "logicName",
          "type": "bytes32"
        }
      ],
      "name": "hasLogicVersion",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"}],\"name\":\"LogicVersionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"lastLogic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lastVersion\",\"type\":\"uint256\"}],\"name\":\"LogicVersionRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldLogic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newLogic\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldVersion\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newVersion\",\"type\":\"uint256\"}],\"name\":\"LogicVersionUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"consts\",\"outputs\":[{\"internalType\":\"contract LogicVersionsConsts\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"}],\"name\":\"createLogicVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.LogicVersionRequest[]\",\"name\":\"newLogicVersions\",\"type\":\"tuple[]\"}],\"name\":\"createLogicVersions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"getLogicVersion\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct LogicVersionLib.LogicVersion\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"getLogicVersionAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"hasLogicVersion\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"logicVersions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"logic\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"}],\"name\":\"removeLogicVersion\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"logicName\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newLogic\",\"type\":\"address\"}],\"name\":\"updateLogicAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"createLogicVersion(bytes32,address)\":{\"params\":{\"logic\":\"the logic address value for the given logic name.\",\"logicName\":\"logic name to create.\"}},\"createLogicVersions((address,bytes32)[])\":{\"params\":{\"newLogicVersions\":\"lists of the new logic versions to create.\"}},\"getLogicVersion(bytes32)\":{\"params\":{\"logicName\":\"to get.\"},\"return\":\"the current logic version.\"},\"getLogicVersionAddress(bytes32)\":{\"params\":{\"logicName\":\"to get.\"},\"return\":\"the current logic address.\"},\"hasLogicVersion(bytes32)\":{\"params\":{\"logicName\":\"logic name to test.\"},\"return\":\"true if the logic version is already configured. Otherwise it returns false.\"},\"initialize(address)\":{\"params\":{\"settingsAddress\":\"the settings contract address.\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"removeLogicVersion(bytes32)\":{\"params\":{\"logicName\":\"logic name to remove.\"}},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"updateLogicAddress(bytes32,address)\":{\"params\":{\"logicName\":\"logic name to update.\",\"newLogic\":\"the new logic address to set.\"}}}},\"userdoc\":{\"methods\":{\"createLogicVersion(bytes32,address)\":{\"notice\":\"It creates a new logic version given a logic name and address.\"},\"createLogicVersions((address,bytes32)[])\":{\"notice\":\"It creates multiple logic versions.\"},\"getLogicVersion(bytes32)\":{\"notice\":\"It gets the current logic version for a given logic name.\"},\"getLogicVersionAddress(bytes32)\":{\"notice\":\"It gets the current logic address for a given logic name.\"},\"hasLogicVersion(bytes32)\":{\"notice\":\"It tests whether a logic name is already configured.\"},\"initialize(address)\":{\"notice\":\"It initializes this logic versions registry contract instance.\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"removeLogicVersion(bytes32)\":{\"notice\":\"It removes a current logic version given a logic name.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"updateLogicAddress(bytes32,address)\":{\"notice\":\"It update a current logic address given a logic name.\"}},\"notice\":\"It manages all the logic contract versions, mapping each one to a logic name (or key).\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol\":\"LogicVersionsRegistry\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol\":{\"keccak256\":\"0xf228bdb5ed1c862edd60a188ef8aaa939c544850c8f1690f79c2793b97d69482\",\"urls\":[\"bzz-raw://bae4a81aff79a2f00d2d456968eba8b33b838cd55b561850e6f672ae6d756e6b\",\"dweb:/ipfs/QmbYSx7yC8PRa3dFVwk167Ftet6w76yTPq5iLiu6Xbziit\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xe6e8bac5c0ba6e8d1e1416ac4303be41e8290f4a25f69b7e799ef6ef63434de4\",\"urls\":[\"bzz-raw://a2368205a629bb19220cda5c34a1077856a0c477f08409fd1f9759778dec6b96\",\"dweb:/ipfs/QmX55YjR6Rq1ZUwdoUtLjcH7ZtPQsXu9mb4F6xmuWPVq3H\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x9574ec7b6ec8d2072b6276a0873ec2e27fc8262ed61ccbb7a3ffc20ac7dfc323\",\"urls\":[\"bzz-raw://25ba0147fb05f281e7d0b601f116e805d563a516223041ff5660b43a5f448385\",\"dweb:/ipfs/QmcvfSjqEZpd7gfXFvBm39sV8RFtzJA81X59StgMgdc21t\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "sourceMap": "1520:5100:23:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1520:5100:23;;;;;;;",
  "deployedSourceMap": "1520:5100:23:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1520:5100:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;3427:480:23;;;;;;;;;:::i;:::-;;2788:446;;;;;;;;;:::i;2457:182::-;;;;;;;;;:::i;4834:140::-;;;;;;;;;:::i;:::-;;;;;;;;2092:69;;;;;;;;;:::i;:::-;;;;;;;;;;4479:183;;;;;;;;;:::i;:::-;;;;;;;;4047:260;;;;;;;;;:::i;5203:131::-;;;;;;;;;:::i;5497:187::-;;;;;;;;;:::i;1746:33::-;;;:::i;:::-;;;;;;;;1259:263:11;;;:::i;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;3427:480:23:-;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;;;;;;;;;3582:16:23;3675:24;;;:13;:24;;;;;3582:16;;;;3675:41;;3707:8;3675:41;:31;:41;:::i;:::-;3568:148;;;;;;3788:10;-1:-1:-1;;;;;3732:168:23;3765:9;3732:168;3812:8;3834;3856:10;3880;3732:168;;;;;;;;;;;;;;;;;;1029:1:29;;;3427:480:23;;:::o;2788:446::-;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2949:27:23;2941:58;;;;-1:-1:-1;;;2941:58:23;;;;;;;;;3015:13;3010:218;3030:31;;;3010:218;;;3086:131;3123:16;;3140:5;3123:23;;;;;;;;;;;;:33;;;3174:16;;3191:5;3174:23;;;;;;;:29;;;:23;;;;;:29;;;;-1:-1:-1;3174:29:23;;;3086:19;:131::i;:::-;3063:7;;3010:218;;;;2788:446;;:::o;2457:182::-;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2595:37:23;2615:9;2626:5;2595:19;:37::i;:::-;2457:182;;:::o;4834:140::-;4908:7;4934:27;4951:9;4934:16;:27::i;:::-;:33;;4834:140;-1:-1:-1;;4834:140:23:o;2092:69::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2092:69:23;;;;;;;:::o;4479:183::-;4570:35;;:::i;:::-;4628:27;4645:9;4628:16;:27::i;:::-;4621:34;4479:183;-1:-1:-1;;4479:183:23:o;4047:260::-;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;4143:17:23;4185:24;;;:13;:24;;;;;4143:17;;4185:33;;:31;:33::i;:::-;4142:76;;;;4265:10;-1:-1:-1;;;;;4234:66:23;4254:9;4234:66;4277:9;4288:11;4234:66;;;;;;;;;;;;;;;;1029:1:29;;4047:260:23;:::o;5203:131::-;5270:4;5293:27;5310:9;5293:16;:27::i;:::-;:34;;;;5203:131;-1:-1:-1;;5203:131:23:o;5497:187::-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;5580:13:23;:11;:13::i;:::-;5604:29;5617:15;5604:12;:29::i;:::-;5652:25;;;;;:::i;:::-;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;5643:6:23;:34;;-1:-1:-1;;;;;;5643:34:23;-1:-1:-1;;;;;5643:34:23;;;;;;;;;;-1:-1:-1;5497:187:23:o;1746:33::-;;;-1:-1:-1;;;;;1746:33:23;;:::o;1259:263:11:-;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;2261:477:104:-;2369:16;2399:18;2431;2474:19;2488:4;2474:13;:19::i;:::-;2511:10;;-1:-1:-1;;;;;2511:22:104;;;:10;;:22;;2503:53;;;;-1:-1:-1;;;2503:53:104;;;;;;;;;2577:10;;;2610:12;;;;-1:-1:-1;;;;;2577:10:104;;;;-1:-1:-1;2610:12:104;;-1:-1:-1;2645:19:104;;2610:12;;2645:19;:16;:19;:::i;:::-;2675:21;;-1:-1:-1;;;;;;2675:21:104;-1:-1:-1;;;;;2675:21:104;;;;;;;;;;-1:-1:-1;;2706:12:104;;;:25;;;2261:477;:::o;6324:264:23:-;6414:15;6406:55;;;;-1:-1:-1;;;6406:55:23;;;;;;;;;6471:24;;;;:13;:24;;;;;:42;;6507:5;6471:42;:35;:42;:::i;:::-;6572:5;-1:-1:-1;;;;;6529:52:23;6560:10;-1:-1:-1;;;;;6529:52:23;6549:9;6529:52;6579:1;6529:52;;;;;;;;;;;;;;;6324:264;;:::o;5924:181::-;6016:35;;:::i;:::-;-1:-1:-1;6074:24:23;;;;:13;:24;;;;;;;;;6067:31;;;;;;;;;-1:-1:-1;;;;;6067:31:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5924:181::o;2870:315:104:-;2947:17;2966:19;3001;3015:4;3001:13;:19::i;:::-;-1:-1:-1;;3042:10:104;;;3076:12;;;;-1:-1:-1;;;;;;3098:25:104;;;;3042:10;3133:16;;;3159:11;;;;:19;;-1:-1:-1;;3159:19:104;;;-1:-1:-1;;;;;3042:10:104;;2870:315::o;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;;:::o;1714:129:104:-;1796:11;;;;;;:19;;:11;:19;1788:48;;;;-1:-1:-1;;;1788:48:104;;;;;;;;834:176:122;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:122;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:122:o;881:255:104:-;962:22;979:4;962:16;:22::i;:::-;1002:18;:5;-1:-1:-1;;;;;1002:16:104;;:18::i;:::-;994:53;;;;-1:-1:-1;;;994:53:104;;;;;;;;;1057:18;;-1:-1:-1;;;;;;1057:18:104;-1:-1:-1;;;;;1057:18:104;;;;;;;-1:-1:-1;;1085:12:104;;;:16;;;;1111:11;;;;:18;;-1:-1:-1;;1111:18:104;;;;;;881:255::o;1288:108:101:-;-1:-1:-1;;;;;1368:21:101;;;;1288:108::o;686:610:129:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:129;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:129:o;1353:137:104:-;1438:11;;;;;;:20;1430:53;;;;-1:-1:-1;;;1430:53:104;;;;;;;;1520:5100:23;;;;;;;;;-1:-1:-1;1520:5100:23;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;192:388;;;358:3;351:4;343:6;339:17;335:27;325:2;;376:1;373;366:12;325:2;-1:-1;396:20;;436:18;425:30;;422:2;;;468:1;465;458:12;422:2;502:4;494:6;490:17;478:29;;553:3;545:4;537:6;533:17;523:8;519:32;516:41;513:2;;;570:1;567;560:12;513:2;318:262;;;;;;588:130;655:20;;680:33;655:20;680:33;;725:241;;829:2;817:9;808:7;804:23;800:32;797:2;;;845:1;842;835:12;797:2;880:1;897:53;942:7;922:9;897:53;;973:469;;;1148:2;1136:9;1127:7;1123:23;1119:32;1116:2;;;1164:1;1161;1154:12;1116:2;1199:31;;1250:18;1239:30;;1236:2;;;1282:1;1279;1272:12;1236:2;1310:116;1418:7;1409:6;1398:9;1394:22;1310:116;;;1300:126;;;;1178:254;1110:332;;;;;;1449:241;;1553:2;1541:9;1532:7;1528:23;1524:32;1521:2;;;1569:1;1566;1559:12;1521:2;1604:1;1621:53;1666:7;1646:9;1621:53;;1697:366;;;1818:2;1806:9;1797:7;1793:23;1789:32;1786:2;;;1834:1;1831;1824:12;1786:2;1869:1;1886:53;1931:7;1911:9;1886:53;;;1876:63;;1848:97;1976:2;1994:53;2039:7;2030:6;2019:9;2015:22;1994:53;;;1984:63;;1955:98;1780:283;;;;;;2070:142;2161:45;2200:5;2161:45;;;2156:3;2149:58;2143:69;;;2219:103;2292:24;2310:5;2292:24;;2449:94;2516:21;2531:5;2516:21;;2661:184;2773:66;2833:5;2773:66;;3039:142;3130:45;3169:5;3130:45;;3189:364;;3367:85;3449:2;3444:3;3367:85;;;3485:30;3465:51;;3544:2;3535:12;;3353:200;-1:-1;;3353:200;3562:327;;3722:67;3786:2;3781:3;3722:67;;;3822:29;3802:50;;3880:2;3871:12;;3708:181;-1:-1;;3708:181;3898:320;;4058:67;4122:2;4117:3;4058:67;;;-1:-1;;;4138:43;;4209:2;4200:12;;4044:174;-1:-1;;4044:174;4227:327;;4387:67;4451:2;4446:3;4387:67;;;4487:29;4467:50;;4545:2;4536:12;;4373:181;-1:-1;;4373:181;4563:322;;4723:67;4787:2;4782:3;4723:67;;;-1:-1;;;4803:45;;4876:2;4867:12;;4709:176;-1:-1;;4709:176;4894:327;;5054:67;5118:2;5113:3;5054:67;;;5154:29;5134:50;;5212:2;5203:12;;5040:181;-1:-1;;5040:181;5230:360;;5408:85;5490:2;5485:3;5408:85;;;5526:26;5506:47;;5581:2;5572:12;;5394:196;-1:-1;;5394:196;5599:316;;5759:67;5823:2;5818:3;5759:67;;;-1:-1;;;5839:39;;5906:2;5897:12;;5745:170;-1:-1;;5745:170;5924:318;;6084:67;6148:2;6143:3;6084:67;;;-1:-1;;;6164:41;;6233:2;6224:12;;6070:172;-1:-1;;6070:172;6251:324;;6411:67;6475:2;6470:3;6411:67;;;6511:26;6491:47;;6566:2;6557:12;;6397:178;-1:-1;;6397:178;6584:328;;6744:67;6808:2;6803:3;6744:67;;;6844:30;6824:51;;6903:2;6894:12;;6730:182;-1:-1;;6730:182;6921:318;;7081:67;7145:2;7140:3;7081:67;;;-1:-1;;;7161:41;;7230:2;7221:12;;7067:172;-1:-1;;7067:172;7328:642;7550:23;;7483:4;7474:14;;;7579:63;7478:3;7550:23;7579:63;;;7503:145;7724:4;7717:5;7713:16;7707:23;7736:63;7793:4;7788:3;7784:14;7770:12;7736:63;;;7658:147;7880:4;7873:5;7869:16;7863:23;7892:57;7943:4;7938:3;7934:14;7920:12;7892:57;;;7815:140;7456:514;;;;7977:103;8050:24;8068:5;8050:24;;8207:372;;8406:148;8550:3;8406:148;;8586:372;;8785:148;8929:3;8785:148;;8965:213;9083:2;9068:18;;9097:71;9072:9;9141:6;9097:71;;9185:229;9311:2;9296:18;;9325:79;9300:9;9377:6;9325:79;;9421:547;9623:3;9608:19;;9638:71;9612:9;9682:6;9638:71;;;9720:72;9788:2;9777:9;9773:18;9764:6;9720:72;;;9803;9871:2;9860:9;9856:18;9847:6;9803:72;;;9886;9954:2;9943:9;9939:18;9930:6;9886:72;;;9594:374;;;;;;;;9975:324;10121:2;10106:18;;10135:71;10110:9;10179:6;10135:71;;;10217:72;10285:2;10274:9;10270:18;10261:6;10217:72;;10306:423;10474:2;10459:18;;10488:71;10463:9;10532:6;10488:71;;;10570:72;10638:2;10627:9;10623:18;10614:6;10570:72;;;10653:66;10715:2;10704:9;10700:18;10691:6;10653:66;;10736:201;10848:2;10833:18;;10862:65;10837:9;10900:6;10862:65;;10944:271;11091:2;11076:18;;11105:100;11080:9;11178:6;11105:100;;11496:229;11622:2;11607:18;;11636:79;11611:9;11688:6;11636:79;;11732:407;11923:2;11937:47;;;11908:18;;11998:131;11908:18;11998:131;;12146:407;12337:2;12351:47;;;12322:18;;12412:131;12322:18;12412:131;;12560:407;12751:2;12765:47;;;12736:18;;12826:131;12736:18;12826:131;;12974:407;13165:2;13179:47;;;13150:18;;13240:131;13150:18;13240:131;;13388:407;13579:2;13593:47;;;13564:18;;13654:131;13564:18;13654:131;;13802:407;13993:2;14007:47;;;13978:18;;14068:131;13978:18;14068:131;;14216:407;14407:2;14421:47;;;14392:18;;14482:131;14392:18;14482:131;;14630:407;14821:2;14835:47;;;14806:18;;14896:131;14806:18;14896:131;;15044:407;15235:2;15249:47;;;15220:18;;15310:131;15220:18;15310:131;;15458:407;15649:2;15663:47;;;15634:18;;15724:131;15634:18;15724:131;;15872:337;16052:2;16037:18;;16066:133;16041:9;16172:6;16066:133;;16217:163;16320:19;;;16369:4;16360:14;;16313:67;16389:145;16525:3;16503:31;-1:-1;16503:31;16542:91;;16604:24;16622:5;16604:24;;16640:85;16706:13;16699:21;;16682:43;16732:72;16794:5;16777:27;16811:121;-1:-1;;;;;16873:54;;16856:76;17018:129;;17105:37;17136:5;17154:179;;17262:66;17322:5;17262:66;;17808:116;;17895:24;17913:5;17895:24;;18174:117;18243:24;18261:5;18243:24;;;18236:5;18233:35;18223:2;;18282:1;18279;18272:12;18298:117;18367:24;18385:5;18367:24;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./BaseUpgradeable.sol\";\nimport \"./TInitializable.sol\";\n\n// Commons\nimport \"../util/LogicVersionLib.sol\";\nimport \"../util/LogicVersionsConsts.sol\";\nimport \"../util/TellerCommon.sol\";\n\n// Interfaces\nimport \"../interfaces/LogicVersionsRegistryInterface.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice It manages all the logic contract versions, mapping each one to a logic name (or key).\n\n    @author develop@teller.finance\n */\ncontract LogicVersionsRegistry is\n    LogicVersionsRegistryInterface,\n    TInitializable,\n    BaseUpgradeable\n{\n    using LogicVersionLib for LogicVersionLib.LogicVersion;\n\n    /** Constants */\n\n    /* State Variables */\n\n    LogicVersionsConsts public consts;\n\n    /**\n        @notice It represents a mapping to identify a logic name (key) and the current logic address and version.\n\n        i.e.:\n            bytes32(\"EtherCollateralLoans\") => { logic: \"0x123...789\", version: 1 }.\n            bytes32(\"LendingPool\") => { logic: \"0x456...987\", version: 3 }.\n     */\n    mapping(bytes32 => LogicVersionLib.LogicVersion) public logicVersions;\n\n    /** Modifiers */\n\n    /* Constructor */\n\n    /** External Functions */\n\n    /**\n        @notice It creates a new logic version given a logic name and address.\n        @param logicName logic name to create.\n        @param logic the logic address value for the given logic name.\n     */\n    function createLogicVersion(bytes32 logicName, address logic)\n        external\n        onlyPauser()\n        isInitialized()\n    {\n        _createLogicVersion(logicName, logic);\n    }\n\n    /**\n        @notice It creates multiple logic versions.\n        @param newLogicVersions lists of the new logic versions to create.\n     */\n    function createLogicVersions(\n        TellerCommon.LogicVersionRequest[] calldata newLogicVersions\n    ) external onlyPauser() isInitialized() {\n        require(newLogicVersions.length > 0, \"REQUEST_LIST_EMPTY\");\n\n        for (uint256 index; index < newLogicVersions.length; index++) {\n            _createLogicVersion(\n                newLogicVersions[index].logicName,\n                newLogicVersions[index].logic\n            );\n        }\n    }\n\n    /**\n        @notice It update a current logic address given a logic name.\n        @param logicName logic name to update.\n        @param newLogic the new logic address to set.\n     */\n    function updateLogicAddress(bytes32 logicName, address newLogic)\n        external\n        onlyPauser()\n        isInitialized()\n    {\n        (\n            address oldLogic,\n            uint256 oldVersion,\n            uint256 newVersion\n        ) = logicVersions[logicName].update(newLogic);\n\n        emit LogicVersionUpdated(\n            logicName,\n            msg.sender,\n            oldLogic,\n            newLogic,\n            oldVersion,\n            newVersion\n        );\n    }\n\n    /**\n        @notice It removes a current logic version given a logic name.\n        @param logicName logic name to remove.\n     */\n    function removeLogicVersion(bytes32 logicName) external onlyPauser() isInitialized() {\n        (address lastLogic, uint256 lastVersion) = logicVersions[logicName].remove();\n\n        emit LogicVersionRemoved(logicName, msg.sender, lastLogic, lastVersion);\n    }\n\n    /**\n        @notice It gets the current logic version for a given logic name.\n        @param logicName to get.\n        @return the current logic version.\n     */\n    function getLogicVersion(bytes32 logicName)\n        external\n        view\n        returns (LogicVersionLib.LogicVersion memory)\n    {\n        return _getLogicVersion(logicName);\n    }\n\n    /**\n        @notice It gets the current logic address for a given logic name.\n        @param logicName to get.\n        @return the current logic address.\n     */\n    function getLogicVersionAddress(bytes32 logicName) external view returns (address) {\n        return _getLogicVersion(logicName).logic;\n    }\n\n    /**\n        @notice It tests whether a logic name is already configured.\n        @param logicName logic name to test.\n        @return true if the logic version is already configured. Otherwise it returns false.\n     */\n    function hasLogicVersion(bytes32 logicName) external view returns (bool) {\n        return _getLogicVersion(logicName).exists;\n    }\n\n    /**\n        @notice It initializes this logic versions registry contract instance.\n        @param settingsAddress the settings contract address.\n     */\n    function initialize(address settingsAddress) external isNotInitialized() {\n        _initialize();\n\n        _setSettings(settingsAddress);\n        consts = new LogicVersionsConsts();\n    }\n\n    /** Internal functions */\n\n    /**\n        @notice It gets the logic version for a given logic name.\n        @param logicName the logic name to look for.\n        @return the current logic version for the given logic name.\n     */\n    function _getLogicVersion(bytes32 logicName)\n        internal\n        view\n        returns (LogicVersionLib.LogicVersion memory)\n    {\n        return logicVersions[logicName];\n    }\n\n    /**\n        @notice It creates a new logic version given a logic name and address.\n        @param logicName logic name to create.\n        @param logic the logic address value for the given logic name.\n     */\n    function _createLogicVersion(bytes32 logicName, address logic) internal {\n        require(logicName != \"\", \"LOGIC_NAME_MUST_BE_PROVIDED\");\n        logicVersions[logicName].initialize(logic);\n\n        emit LogicVersionCreated(logicName, msg.sender, logic, 0);\n    }\n\n    /** Private functions */\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol",
    "exportedSymbols": {
      "LogicVersionsRegistry": [
        7074
      ]
    },
    "id": 7075,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6828,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "id": 6829,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:23"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
        "file": "./BaseUpgradeable.sol",
        "id": 6830,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 2635,
        "src": "72:31:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol",
        "file": "./TInitializable.sol",
        "id": 6831,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 8854,
        "src": "104:30:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol",
        "file": "../util/LogicVersionLib.sol",
        "id": 6832,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 16780,
        "src": "147:37:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol",
        "file": "../util/LogicVersionsConsts.sol",
        "id": 6833,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 16834,
        "src": "185:41:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol",
        "file": "../util/TellerCommon.sol",
        "id": 6834,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 17589,
        "src": "227:34:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol",
        "file": "../interfaces/LogicVersionsRegistryInterface.sol",
        "id": 6835,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 10567,
        "src": "277:58:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6836,
              "name": "LogicVersionsRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10566,
              "src": "1558:30:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10566",
                "typeString": "contract LogicVersionsRegistryInterface"
              }
            },
            "id": 6837,
            "nodeType": "InheritanceSpecifier",
            "src": "1558:30:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6838,
              "name": "TInitializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8853,
              "src": "1594:14:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TInitializable_$8853",
                "typeString": "contract TInitializable"
              }
            },
            "id": 6839,
            "nodeType": "InheritanceSpecifier",
            "src": "1594:14:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6840,
              "name": "BaseUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2634,
              "src": "1614:15:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseUpgradeable_$2634",
                "typeString": "contract BaseUpgradeable"
              }
            },
            "id": 6841,
            "nodeType": "InheritanceSpecifier",
            "src": "1614:15:23"
          }
        ],
        "contractDependencies": [
          2634,
          8853,
          10566,
          16833
        ],
        "contractKind": "contract",
        "documentation": "@notice It manages all the logic contract versions, mapping each one to a logic name (or key).\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 7074,
        "linearizedBaseContracts": [
          7074,
          2634,
          8853,
          10566
        ],
        "name": "LogicVersionsRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6844,
            "libraryName": {
              "contractScope": null,
              "id": 6842,
              "name": "LogicVersionLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16779,
              "src": "1642:15:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionLib_$16779",
                "typeString": "library LogicVersionLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1636:55:23",
            "typeName": {
              "contractScope": null,
              "id": 6843,
              "name": "LogicVersionLib.LogicVersion",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16613,
              "src": "1662:28:23",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                "typeString": "struct LogicVersionLib.LogicVersion"
              }
            }
          },
          {
            "constant": false,
            "id": 6846,
            "name": "consts",
            "nodeType": "VariableDeclaration",
            "scope": 7074,
            "src": "1746:33:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
              "typeString": "contract LogicVersionsConsts"
            },
            "typeName": {
              "contractScope": null,
              "id": 6845,
              "name": "LogicVersionsConsts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16833,
              "src": "1746:19:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                "typeString": "contract LogicVersionsConsts"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6850,
            "name": "logicVersions",
            "nodeType": "VariableDeclaration",
            "scope": 7074,
            "src": "2092:69:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
              "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
            },
            "typeName": {
              "id": 6849,
              "keyType": {
                "id": 6847,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2100:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2092:48:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
              },
              "valueType": {
                "contractScope": null,
                "id": 6848,
                "name": "LogicVersionLib.LogicVersion",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 16613,
                "src": "2111:28:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                  "typeString": "struct LogicVersionLib.LogicVersion"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6866,
              "nodeType": "Block",
              "src": "2585:54:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6862,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6852,
                        "src": "2615:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6863,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6854,
                        "src": "2626:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6861,
                      "name": "_createLogicVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7073,
                      "src": "2595:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 6864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:37:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6865,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:37:23"
                }
              ]
            },
            "documentation": "@notice It creates a new logic version given a logic name and address.\n@param logicName logic name to create.\n@param logic the logic address value for the given logic name.",
            "id": 6867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6857,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6856,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "2544:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2544:12:23"
              },
              {
                "arguments": [],
                "id": 6859,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6858,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2565:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2565:15:23"
              }
            ],
            "name": "createLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6852,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6867,
                  "src": "2485:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6851,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6854,
                  "name": "logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 6867,
                  "src": "2504:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2504:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2484:34:23"
            },
            "returnParameters": {
              "id": 6860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:0:23"
            },
            "scope": 7074,
            "src": "2457:182:23",
            "stateMutability": "nonpayable",
            "superFunction": 10521,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6908,
              "nodeType": "Block",
              "src": "2931:303:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6878,
                            "name": "newLogicVersions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6870,
                            "src": "2949:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                              "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                            }
                          },
                          "id": 6879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2949:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2975:1:23",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2949:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "524551554553545f4c4953545f454d505459",
                        "id": 6882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2978:20:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4e7e95c66e12dce64680245d6100d680fc6488d607a1a45c2b0793b66a44b5a",
                          "typeString": "literal_string \"REQUEST_LIST_EMPTY\""
                        },
                        "value": "REQUEST_LIST_EMPTY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4e7e95c66e12dce64680245d6100d680fc6488d607a1a45c2b0793b66a44b5a",
                          "typeString": "literal_string \"REQUEST_LIST_EMPTY\""
                        }
                      ],
                      "id": 6877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2941:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6884,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:58:23"
                },
                {
                  "body": {
                    "id": 6906,
                    "nodeType": "Block",
                    "src": "3072:156:23",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 6896,
                                  "name": "newLogicVersions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6870,
                                  "src": "3123:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                                    "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                                  }
                                },
                                "id": 6898,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 6897,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6886,
                                  "src": "3140:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3123:23:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LogicVersionRequest_$17587_calldata",
                                  "typeString": "struct TellerCommon.LogicVersionRequest calldata"
                                }
                              },
                              "id": 6899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "logicName",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17586,
                              "src": "3123:33:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 6900,
                                  "name": "newLogicVersions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6870,
                                  "src": "3174:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                                    "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                                  }
                                },
                                "id": 6902,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 6901,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6886,
                                  "src": "3191:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3174:23:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LogicVersionRequest_$17587_calldata",
                                  "typeString": "struct TellerCommon.LogicVersionRequest calldata"
                                }
                              },
                              "id": 6903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "logic",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17584,
                              "src": "3174:29:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6895,
                            "name": "_createLogicVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7073,
                            "src": "3086:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 6904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3086:131:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6905,
                        "nodeType": "ExpressionStatement",
                        "src": "3086:131:23"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6888,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6886,
                      "src": "3030:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6889,
                        "name": "newLogicVersions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6870,
                        "src": "3038:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                        }
                      },
                      "id": 6890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3038:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3030:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6907,
                  "initializationExpression": {
                    "assignments": [
                      6886
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6886,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 6907,
                        "src": "3015:13:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3015:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6887,
                    "initialValue": null,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3015:13:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3063:7:23",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6892,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "3063:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6894,
                    "nodeType": "ExpressionStatement",
                    "src": "3063:7:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "3010:218:23"
                }
              ]
            },
            "documentation": "@notice It creates multiple logic versions.\n@param newLogicVersions lists of the new logic versions to create.",
            "id": 6909,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6873,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6872,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "2902:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2902:12:23"
              },
              {
                "arguments": [],
                "id": 6875,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6874,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2915:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2915:15:23"
              }
            ],
            "name": "createLogicVersions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6870,
                  "name": "newLogicVersions",
                  "nodeType": "VariableDeclaration",
                  "scope": 6909,
                  "src": "2826:60:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LogicVersionRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6868,
                      "name": "TellerCommon.LogicVersionRequest",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17587,
                      "src": "2826:32:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersionRequest_$17587_storage_ptr",
                        "typeString": "struct TellerCommon.LogicVersionRequest"
                      }
                    },
                    "id": 6869,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2826:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LogicVersionRequest[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2816:76:23"
            },
            "returnParameters": {
              "id": 6876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2931:0:23"
            },
            "scope": 7074,
            "src": "2788:446:23",
            "stateMutability": "nonpayable",
            "superFunction": 10527,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6943,
              "nodeType": "Block",
              "src": "3558:349:23",
              "statements": [
                {
                  "assignments": [
                    6921,
                    6923,
                    6925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6921,
                      "name": "oldLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 6943,
                      "src": "3582:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6920,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3582:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6923,
                      "name": "oldVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 6943,
                      "src": "3612:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6922,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3612:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6925,
                      "name": "newVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 6943,
                      "src": "3644:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3644:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6932,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6930,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6913,
                        "src": "3707:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6926,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6850,
                          "src": "3675:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 6928,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6927,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6911,
                          "src": "3689:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3675:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 6929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16734,
                      "src": "3675:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$16613_storage_ptr_$_t_address_$returns$_t_address_$_t_uint256_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$16613_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address) returns (address,uint256,uint256)"
                      }
                    },
                    "id": 6931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:41:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3568:148:23"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6934,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6911,
                        "src": "3765:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "3788:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3788:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6937,
                        "name": "oldLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6921,
                        "src": "3812:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6938,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6913,
                        "src": "3834:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6939,
                        "name": "oldVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6923,
                        "src": "3856:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6940,
                        "name": "newVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6925,
                        "src": "3880:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6933,
                      "name": "LogicVersionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10509,
                      "src": "3732:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 6941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:168:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6942,
                  "nodeType": "EmitStatement",
                  "src": "3727:173:23"
                }
              ]
            },
            "documentation": "@notice It update a current logic address given a logic name.\n@param logicName logic name to update.\n@param newLogic the new logic address to set.",
            "id": 6944,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6916,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6915,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "3517:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3517:12:23"
              },
              {
                "arguments": [],
                "id": 6918,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6917,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "3538:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3538:15:23"
              }
            ],
            "name": "updateLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6911,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6944,
                  "src": "3455:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6910,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6913,
                  "name": "newLogic",
                  "nodeType": "VariableDeclaration",
                  "scope": 6944,
                  "src": "3474:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3474:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3454:37:23"
            },
            "returnParameters": {
              "id": 6919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3558:0:23"
            },
            "scope": 7074,
            "src": "3427:480:23",
            "stateMutability": "nonpayable",
            "superFunction": 10534,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6971,
              "nodeType": "Block",
              "src": "4132:175:23",
              "statements": [
                {
                  "assignments": [
                    6954,
                    6956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6954,
                      "name": "lastLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 6971,
                      "src": "4143:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6953,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4143:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6956,
                      "name": "lastVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 6971,
                      "src": "4162:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4162:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6962,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6957,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6850,
                          "src": "4185:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 6959,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6958,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6946,
                          "src": "4199:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4185:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 6960,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16778,
                      "src": "4185:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$16613_storage_ptr_$returns$_t_address_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$16613_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer) returns (address,uint256)"
                      }
                    },
                    "id": 6961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4185:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4142:76:23"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6964,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6946,
                        "src": "4254:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "4265:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4265:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6967,
                        "name": "lastLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6954,
                        "src": "4277:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6968,
                        "name": "lastVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6956,
                        "src": "4288:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6963,
                      "name": "LogicVersionRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10495,
                      "src": "4234:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 6969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4234:66:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6970,
                  "nodeType": "EmitStatement",
                  "src": "4229:71:23"
                }
              ]
            },
            "documentation": "@notice It removes a current logic version given a logic name.\n@param logicName logic name to remove.",
            "id": 6972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6949,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6948,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "4103:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4103:12:23"
              },
              {
                "arguments": [],
                "id": 6951,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6950,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "4116:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4116:15:23"
              }
            ],
            "name": "removeLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6946,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6972,
                  "src": "4075:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6945,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4075:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4074:19:23"
            },
            "returnParameters": {
              "id": 6952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4132:0:23"
            },
            "scope": 7074,
            "src": "4047:260:23",
            "stateMutability": "nonpayable",
            "superFunction": 10539,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6983,
              "nodeType": "Block",
              "src": "4611:51:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6980,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6974,
                        "src": "4645:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6979,
                      "name": "_getLogicVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7043,
                      "src": "4628:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$16613_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                      }
                    },
                    "id": 6981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4628:27:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion memory"
                    }
                  },
                  "functionReturnParameters": 6978,
                  "id": 6982,
                  "nodeType": "Return",
                  "src": "4621:34:23"
                }
              ]
            },
            "documentation": "@notice It gets the current logic version for a given logic name.\n@param logicName to get.\n@return the current logic version.",
            "id": 6984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6974,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6984,
                  "src": "4504:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6973,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4504:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4503:19:23"
            },
            "returnParameters": {
              "id": 6978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6977,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6984,
                  "src": "4570:35:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6976,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16613,
                    "src": "4570:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4569:37:23"
            },
            "scope": 7074,
            "src": "4479:183:23",
            "stateMutability": "view",
            "superFunction": 10546,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6996,
              "nodeType": "Block",
              "src": "4917:57:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6992,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6986,
                          "src": "4951:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 6991,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7043,
                        "src": "4934:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$16613_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 6993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4934:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 6994,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "logic",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16608,
                    "src": "4934:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6990,
                  "id": 6995,
                  "nodeType": "Return",
                  "src": "4927:40:23"
                }
              ]
            },
            "documentation": "@notice It gets the current logic address for a given logic name.\n@param logicName to get.\n@return the current logic address.",
            "id": 6997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersionAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6986,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6997,
                  "src": "4866:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6985,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4866:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4865:19:23"
            },
            "returnParameters": {
              "id": 6990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6989,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6997,
                  "src": "4908:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4908:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4907:9:23"
            },
            "scope": 7074,
            "src": "4834:140:23",
            "stateMutability": "view",
            "superFunction": 10553,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7009,
              "nodeType": "Block",
              "src": "5276:58:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7005,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6999,
                          "src": "5310:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 7004,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7043,
                        "src": "5293:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$16613_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 7006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5293:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 7007,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16612,
                    "src": "5293:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7003,
                  "id": 7008,
                  "nodeType": "Return",
                  "src": "5286:41:23"
                }
              ]
            },
            "documentation": "@notice It tests whether a logic name is already configured.\n@param logicName logic name to test.\n@return true if the logic version is already configured. Otherwise it returns false.",
            "id": 7010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6999,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7010,
                  "src": "5228:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6998,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5228:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5227:19:23"
            },
            "returnParameters": {
              "id": 7003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7002,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7010,
                  "src": "5270:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5269:6:23"
            },
            "scope": 7074,
            "src": "5203:131:23",
            "stateMutability": "view",
            "superFunction": 10560,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7030,
              "nodeType": "Block",
              "src": "5570:114:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7017,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8852,
                      "src": "5580:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7019,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:13:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7021,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7012,
                        "src": "5617:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7020,
                      "name": "_setSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2603,
                      "src": "5604:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5604:29:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7023,
                  "nodeType": "ExpressionStatement",
                  "src": "5604:29:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7024,
                      "name": "consts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6846,
                      "src": "5643:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5652:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LogicVersionsConsts_$16833_$",
                          "typeString": "function () returns (contract LogicVersionsConsts)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 7025,
                          "name": "LogicVersionsConsts",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 16833,
                          "src": "5656:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                            "typeString": "contract LogicVersionsConsts"
                          }
                        }
                      },
                      "id": 7027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5652:25:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "src": "5643:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                      "typeString": "contract LogicVersionsConsts"
                    }
                  },
                  "id": 7029,
                  "nodeType": "ExpressionStatement",
                  "src": "5643:34:23"
                }
              ]
            },
            "documentation": "@notice It initializes this logic versions registry contract instance.\n@param settingsAddress the settings contract address.",
            "id": 7031,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7015,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7014,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8818,
                  "src": "5551:16:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5551:18:23"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7012,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7031,
                  "src": "5517:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5517:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5516:25:23"
            },
            "returnParameters": {
              "id": 7016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5570:0:23"
            },
            "scope": 7074,
            "src": "5497:187:23",
            "stateMutability": "nonpayable",
            "superFunction": 10565,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7042,
              "nodeType": "Block",
              "src": "6057:48:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7038,
                      "name": "logicVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6850,
                      "src": "6074:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                        "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                      }
                    },
                    "id": 7040,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7039,
                      "name": "logicName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7033,
                      "src": "6088:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6074:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                      "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                    }
                  },
                  "functionReturnParameters": 7037,
                  "id": 7041,
                  "nodeType": "Return",
                  "src": "6067:31:23"
                }
              ]
            },
            "documentation": "@notice It gets the logic version for a given logic name.\n@param logicName the logic name to look for.\n@return the current logic version for the given logic name.",
            "id": 7043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7033,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7043,
                  "src": "5950:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7032,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5949:19:23"
            },
            "returnParameters": {
              "id": 7037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7036,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7043,
                  "src": "6016:35:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7035,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16613,
                    "src": "6016:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6015:37:23"
            },
            "scope": 7074,
            "src": "5924:181:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7072,
              "nodeType": "Block",
              "src": "6396:192:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7051,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7045,
                          "src": "6414:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 7052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6427:2:23",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "6414:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4d5553545f42455f50524f5649444544",
                        "id": 7054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6431:29:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        },
                        "value": "LOGIC_NAME_MUST_BE_PROVIDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        }
                      ],
                      "id": 7050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "6406:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6406:55:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7056,
                  "nodeType": "ExpressionStatement",
                  "src": "6406:55:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7061,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7047,
                        "src": "6507:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7057,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6850,
                          "src": "6471:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7059,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7058,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7045,
                          "src": "6485:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6471:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7060,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16650,
                      "src": "6471:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$16613_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_LogicVersion_$16613_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address)"
                      }
                    },
                    "id": 7062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6471:42:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7063,
                  "nodeType": "ExpressionStatement",
                  "src": "6471:42:23"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7065,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7045,
                        "src": "6549:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7066,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "6560:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6560:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7068,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7047,
                        "src": "6572:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6579:1:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7064,
                      "name": "LogicVersionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10485,
                      "src": "6529:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 7070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6529:52:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7071,
                  "nodeType": "EmitStatement",
                  "src": "6524:57:23"
                }
              ]
            },
            "documentation": "@notice It creates a new logic version given a logic name and address.\n@param logicName logic name to create.\n@param logic the logic address value for the given logic name.",
            "id": 7073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7045,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "6353:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7044,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6353:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7047,
                  "name": "logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "6372:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6372:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6352:34:23"
            },
            "returnParameters": {
              "id": 7049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6396:0:23"
            },
            "scope": 7074,
            "src": "6324:264:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7075,
        "src": "1520:5100:23"
      }
    ],
    "src": "0:6621:23"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LogicVersionsRegistry.sol",
    "exportedSymbols": {
      "LogicVersionsRegistry": [
        7074
      ]
    },
    "id": 7075,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6828,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:23"
      },
      {
        "id": 6829,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:23"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol",
        "file": "./BaseUpgradeable.sol",
        "id": 6830,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 2635,
        "src": "72:31:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol",
        "file": "./TInitializable.sol",
        "id": 6831,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 8854,
        "src": "104:30:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol",
        "file": "../util/LogicVersionLib.sol",
        "id": 6832,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 16780,
        "src": "147:37:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol",
        "file": "../util/LogicVersionsConsts.sol",
        "id": 6833,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 16834,
        "src": "185:41:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol",
        "file": "../util/TellerCommon.sol",
        "id": 6834,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 17589,
        "src": "227:34:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol",
        "file": "../interfaces/LogicVersionsRegistryInterface.sol",
        "id": 6835,
        "nodeType": "ImportDirective",
        "scope": 7075,
        "sourceUnit": 10567,
        "src": "277:58:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6836,
              "name": "LogicVersionsRegistryInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10566,
              "src": "1558:30:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsRegistryInterface_$10566",
                "typeString": "contract LogicVersionsRegistryInterface"
              }
            },
            "id": 6837,
            "nodeType": "InheritanceSpecifier",
            "src": "1558:30:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6838,
              "name": "TInitializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8853,
              "src": "1594:14:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TInitializable_$8853",
                "typeString": "contract TInitializable"
              }
            },
            "id": 6839,
            "nodeType": "InheritanceSpecifier",
            "src": "1594:14:23"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6840,
              "name": "BaseUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2634,
              "src": "1614:15:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BaseUpgradeable_$2634",
                "typeString": "contract BaseUpgradeable"
              }
            },
            "id": 6841,
            "nodeType": "InheritanceSpecifier",
            "src": "1614:15:23"
          }
        ],
        "contractDependencies": [
          2634,
          8853,
          10566,
          16833
        ],
        "contractKind": "contract",
        "documentation": "@notice It manages all the logic contract versions, mapping each one to a logic name (or key).\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 7074,
        "linearizedBaseContracts": [
          7074,
          2634,
          8853,
          10566
        ],
        "name": "LogicVersionsRegistry",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 6844,
            "libraryName": {
              "contractScope": null,
              "id": 6842,
              "name": "LogicVersionLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16779,
              "src": "1642:15:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionLib_$16779",
                "typeString": "library LogicVersionLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1636:55:23",
            "typeName": {
              "contractScope": null,
              "id": 6843,
              "name": "LogicVersionLib.LogicVersion",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16613,
              "src": "1662:28:23",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                "typeString": "struct LogicVersionLib.LogicVersion"
              }
            }
          },
          {
            "constant": false,
            "id": 6846,
            "name": "consts",
            "nodeType": "VariableDeclaration",
            "scope": 7074,
            "src": "1746:33:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
              "typeString": "contract LogicVersionsConsts"
            },
            "typeName": {
              "contractScope": null,
              "id": 6845,
              "name": "LogicVersionsConsts",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 16833,
              "src": "1746:19:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                "typeString": "contract LogicVersionsConsts"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 6850,
            "name": "logicVersions",
            "nodeType": "VariableDeclaration",
            "scope": 7074,
            "src": "2092:69:23",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
              "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
            },
            "typeName": {
              "id": 6849,
              "keyType": {
                "id": 6847,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2100:7:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2092:48:23",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion)"
              },
              "valueType": {
                "contractScope": null,
                "id": 6848,
                "name": "LogicVersionLib.LogicVersion",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 16613,
                "src": "2111:28:23",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                  "typeString": "struct LogicVersionLib.LogicVersion"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6866,
              "nodeType": "Block",
              "src": "2585:54:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6862,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6852,
                        "src": "2615:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6863,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6854,
                        "src": "2626:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6861,
                      "name": "_createLogicVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7073,
                      "src": "2595:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 6864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:37:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6865,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:37:23"
                }
              ]
            },
            "documentation": "@notice It creates a new logic version given a logic name and address.\n@param logicName logic name to create.\n@param logic the logic address value for the given logic name.",
            "id": 6867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6857,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6856,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "2544:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2544:12:23"
              },
              {
                "arguments": [],
                "id": 6859,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6858,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2565:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2565:15:23"
              }
            ],
            "name": "createLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6855,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6852,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6867,
                  "src": "2485:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6851,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2485:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6854,
                  "name": "logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 6867,
                  "src": "2504:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6853,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2504:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2484:34:23"
            },
            "returnParameters": {
              "id": 6860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2585:0:23"
            },
            "scope": 7074,
            "src": "2457:182:23",
            "stateMutability": "nonpayable",
            "superFunction": 10521,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6908,
              "nodeType": "Block",
              "src": "2931:303:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 6878,
                            "name": "newLogicVersions",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6870,
                            "src": "2949:16:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                              "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                            }
                          },
                          "id": 6879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2949:23:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6880,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2975:1:23",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2949:27:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "524551554553545f4c4953545f454d505459",
                        "id": 6882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2978:20:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e4e7e95c66e12dce64680245d6100d680fc6488d607a1a45c2b0793b66a44b5a",
                          "typeString": "literal_string \"REQUEST_LIST_EMPTY\""
                        },
                        "value": "REQUEST_LIST_EMPTY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e4e7e95c66e12dce64680245d6100d680fc6488d607a1a45c2b0793b66a44b5a",
                          "typeString": "literal_string \"REQUEST_LIST_EMPTY\""
                        }
                      ],
                      "id": 6877,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2941:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2941:58:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6884,
                  "nodeType": "ExpressionStatement",
                  "src": "2941:58:23"
                },
                {
                  "body": {
                    "id": 6906,
                    "nodeType": "Block",
                    "src": "3072:156:23",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 6896,
                                  "name": "newLogicVersions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6870,
                                  "src": "3123:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                                    "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                                  }
                                },
                                "id": 6898,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 6897,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6886,
                                  "src": "3140:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3123:23:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LogicVersionRequest_$17587_calldata",
                                  "typeString": "struct TellerCommon.LogicVersionRequest calldata"
                                }
                              },
                              "id": 6899,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "logicName",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17586,
                              "src": "3123:33:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 6900,
                                  "name": "newLogicVersions",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6870,
                                  "src": "3174:16:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                                    "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                                  }
                                },
                                "id": 6902,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 6901,
                                  "name": "index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6886,
                                  "src": "3191:5:23",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3174:23:23",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_LogicVersionRequest_$17587_calldata",
                                  "typeString": "struct TellerCommon.LogicVersionRequest calldata"
                                }
                              },
                              "id": 6903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "logic",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17584,
                              "src": "3174:29:23",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 6895,
                            "name": "_createLogicVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7073,
                            "src": "3086:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address)"
                            }
                          },
                          "id": 6904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3086:131:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 6905,
                        "nodeType": "ExpressionStatement",
                        "src": "3086:131:23"
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 6891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 6888,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6886,
                      "src": "3030:5:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 6889,
                        "name": "newLogicVersions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6870,
                        "src": "3038:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LogicVersionRequest calldata[] calldata"
                        }
                      },
                      "id": 6890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3038:23:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3030:31:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 6907,
                  "initializationExpression": {
                    "assignments": [
                      6886
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 6886,
                        "name": "index",
                        "nodeType": "VariableDeclaration",
                        "scope": 6907,
                        "src": "3015:13:23",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 6885,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3015:7:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 6887,
                    "initialValue": null,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3015:13:23"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 6893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3063:7:23",
                      "subExpression": {
                        "argumentTypes": null,
                        "id": 6892,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6886,
                        "src": "3063:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 6894,
                    "nodeType": "ExpressionStatement",
                    "src": "3063:7:23"
                  },
                  "nodeType": "ForStatement",
                  "src": "3010:218:23"
                }
              ]
            },
            "documentation": "@notice It creates multiple logic versions.\n@param newLogicVersions lists of the new logic versions to create.",
            "id": 6909,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6873,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6872,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "2902:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2902:12:23"
              },
              {
                "arguments": [],
                "id": 6875,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6874,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2915:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2915:15:23"
              }
            ],
            "name": "createLogicVersions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6870,
                  "name": "newLogicVersions",
                  "nodeType": "VariableDeclaration",
                  "scope": 6909,
                  "src": "2826:60:23",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LogicVersionRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 6868,
                      "name": "TellerCommon.LogicVersionRequest",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17587,
                      "src": "2826:32:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersionRequest_$17587_storage_ptr",
                        "typeString": "struct TellerCommon.LogicVersionRequest"
                      }
                    },
                    "id": 6869,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2826:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LogicVersionRequest_$17587_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LogicVersionRequest[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2816:76:23"
            },
            "returnParameters": {
              "id": 6876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2931:0:23"
            },
            "scope": 7074,
            "src": "2788:446:23",
            "stateMutability": "nonpayable",
            "superFunction": 10527,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6943,
              "nodeType": "Block",
              "src": "3558:349:23",
              "statements": [
                {
                  "assignments": [
                    6921,
                    6923,
                    6925
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6921,
                      "name": "oldLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 6943,
                      "src": "3582:16:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6920,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3582:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6923,
                      "name": "oldVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 6943,
                      "src": "3612:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6922,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3612:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6925,
                      "name": "newVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 6943,
                      "src": "3644:18:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6924,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3644:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6932,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6930,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6913,
                        "src": "3707:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6926,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6850,
                          "src": "3675:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 6928,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6927,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6911,
                          "src": "3689:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3675:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 6929,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "update",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16734,
                      "src": "3675:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$16613_storage_ptr_$_t_address_$returns$_t_address_$_t_uint256_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$16613_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address) returns (address,uint256,uint256)"
                      }
                    },
                    "id": 6931,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:41:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(address,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3568:148:23"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6934,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6911,
                        "src": "3765:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "3788:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3788:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6937,
                        "name": "oldLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6921,
                        "src": "3812:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6938,
                        "name": "newLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6913,
                        "src": "3834:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6939,
                        "name": "oldVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6923,
                        "src": "3856:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6940,
                        "name": "newVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6925,
                        "src": "3880:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6933,
                      "name": "LogicVersionUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10509,
                      "src": "3732:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 6941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3732:168:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6942,
                  "nodeType": "EmitStatement",
                  "src": "3727:173:23"
                }
              ]
            },
            "documentation": "@notice It update a current logic address given a logic name.\n@param logicName logic name to update.\n@param newLogic the new logic address to set.",
            "id": 6944,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6916,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6915,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "3517:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3517:12:23"
              },
              {
                "arguments": [],
                "id": 6918,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6917,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "3538:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3538:15:23"
              }
            ],
            "name": "updateLogicAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6911,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6944,
                  "src": "3455:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6910,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3455:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6913,
                  "name": "newLogic",
                  "nodeType": "VariableDeclaration",
                  "scope": 6944,
                  "src": "3474:16:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3474:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3454:37:23"
            },
            "returnParameters": {
              "id": 6919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3558:0:23"
            },
            "scope": 7074,
            "src": "3427:480:23",
            "stateMutability": "nonpayable",
            "superFunction": 10534,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6971,
              "nodeType": "Block",
              "src": "4132:175:23",
              "statements": [
                {
                  "assignments": [
                    6954,
                    6956
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6954,
                      "name": "lastLogic",
                      "nodeType": "VariableDeclaration",
                      "scope": 6971,
                      "src": "4143:17:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6953,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4143:7:23",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6956,
                      "name": "lastVersion",
                      "nodeType": "VariableDeclaration",
                      "scope": 6971,
                      "src": "4162:19:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 6955,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4162:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 6962,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 6957,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6850,
                          "src": "4185:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 6959,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 6958,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6946,
                          "src": "4199:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4185:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 6960,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16778,
                      "src": "4185:31:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$16613_storage_ptr_$returns$_t_address_$_t_uint256_$bound_to$_t_struct$_LogicVersion_$16613_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer) returns (address,uint256)"
                      }
                    },
                    "id": 6961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4185:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
                      "typeString": "tuple(address,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4142:76:23"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6964,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6946,
                        "src": "4254:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 6965,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "4265:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4265:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6967,
                        "name": "lastLogic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6954,
                        "src": "4277:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6968,
                        "name": "lastVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6956,
                        "src": "4288:11:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6963,
                      "name": "LogicVersionRemoved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10495,
                      "src": "4234:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 6969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4234:66:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6970,
                  "nodeType": "EmitStatement",
                  "src": "4229:71:23"
                }
              ]
            },
            "documentation": "@notice It removes a current logic version given a logic name.\n@param logicName logic name to remove.",
            "id": 6972,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6949,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6948,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2547,
                  "src": "4103:10:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4103:12:23"
              },
              {
                "arguments": [],
                "id": 6951,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6950,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "4116:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4116:15:23"
              }
            ],
            "name": "removeLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6946,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6972,
                  "src": "4075:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6945,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4075:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4074:19:23"
            },
            "returnParameters": {
              "id": 6952,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4132:0:23"
            },
            "scope": 7074,
            "src": "4047:260:23",
            "stateMutability": "nonpayable",
            "superFunction": 10539,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6983,
              "nodeType": "Block",
              "src": "4611:51:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 6980,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6974,
                        "src": "4645:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 6979,
                      "name": "_getLogicVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7043,
                      "src": "4628:16:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$16613_memory_ptr_$",
                        "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                      }
                    },
                    "id": 6981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4628:27:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion memory"
                    }
                  },
                  "functionReturnParameters": 6978,
                  "id": 6982,
                  "nodeType": "Return",
                  "src": "4621:34:23"
                }
              ]
            },
            "documentation": "@notice It gets the current logic version for a given logic name.\n@param logicName to get.\n@return the current logic version.",
            "id": 6984,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6974,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6984,
                  "src": "4504:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6973,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4504:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4503:19:23"
            },
            "returnParameters": {
              "id": 6978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6977,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6984,
                  "src": "4570:35:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 6976,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16613,
                    "src": "4570:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4569:37:23"
            },
            "scope": 7074,
            "src": "4479:183:23",
            "stateMutability": "view",
            "superFunction": 10546,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6996,
              "nodeType": "Block",
              "src": "4917:57:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 6992,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6986,
                          "src": "4951:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 6991,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7043,
                        "src": "4934:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$16613_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 6993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4934:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 6994,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "logic",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16608,
                    "src": "4934:33:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6990,
                  "id": 6995,
                  "nodeType": "Return",
                  "src": "4927:40:23"
                }
              ]
            },
            "documentation": "@notice It gets the current logic address for a given logic name.\n@param logicName to get.\n@return the current logic address.",
            "id": 6997,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getLogicVersionAddress",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6987,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6986,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 6997,
                  "src": "4866:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6985,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4866:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4865:19:23"
            },
            "returnParameters": {
              "id": 6990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6989,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 6997,
                  "src": "4908:7:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4908:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4907:9:23"
            },
            "scope": 7074,
            "src": "4834:140:23",
            "stateMutability": "view",
            "superFunction": 10553,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7009,
              "nodeType": "Block",
              "src": "5276:58:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7005,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6999,
                          "src": "5310:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 7004,
                        "name": "_getLogicVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7043,
                        "src": "5293:16:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_struct$_LogicVersion_$16613_memory_ptr_$",
                          "typeString": "function (bytes32) view returns (struct LogicVersionLib.LogicVersion memory)"
                        }
                      },
                      "id": 7006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5293:27:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                        "typeString": "struct LogicVersionLib.LogicVersion memory"
                      }
                    },
                    "id": 7007,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "exists",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 16612,
                    "src": "5293:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7003,
                  "id": 7008,
                  "nodeType": "Return",
                  "src": "5286:41:23"
                }
              ]
            },
            "documentation": "@notice It tests whether a logic name is already configured.\n@param logicName logic name to test.\n@return true if the logic version is already configured. Otherwise it returns false.",
            "id": 7010,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6999,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7010,
                  "src": "5228:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6998,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5228:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5227:19:23"
            },
            "returnParameters": {
              "id": 7003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7002,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7010,
                  "src": "5270:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7001,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5270:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5269:6:23"
            },
            "scope": 7074,
            "src": "5203:131:23",
            "stateMutability": "view",
            "superFunction": 10560,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7030,
              "nodeType": "Block",
              "src": "5570:114:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 7017,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8852,
                      "src": "5580:11:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 7018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5580:13:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7019,
                  "nodeType": "ExpressionStatement",
                  "src": "5580:13:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7021,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7012,
                        "src": "5617:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7020,
                      "name": "_setSettings",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2603,
                      "src": "5604:12:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5604:29:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7023,
                  "nodeType": "ExpressionStatement",
                  "src": "5604:29:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7024,
                      "name": "consts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6846,
                      "src": "5643:6:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 7026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5652:23:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_LogicVersionsConsts_$16833_$",
                          "typeString": "function () returns (contract LogicVersionsConsts)"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 7025,
                          "name": "LogicVersionsConsts",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 16833,
                          "src": "5656:19:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                            "typeString": "contract LogicVersionsConsts"
                          }
                        }
                      },
                      "id": 7027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5652:25:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                        "typeString": "contract LogicVersionsConsts"
                      }
                    },
                    "src": "5643:34:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LogicVersionsConsts_$16833",
                      "typeString": "contract LogicVersionsConsts"
                    }
                  },
                  "id": 7029,
                  "nodeType": "ExpressionStatement",
                  "src": "5643:34:23"
                }
              ]
            },
            "documentation": "@notice It initializes this logic versions registry contract instance.\n@param settingsAddress the settings contract address.",
            "id": 7031,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7015,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7014,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8818,
                  "src": "5551:16:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5551:18:23"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7012,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7031,
                  "src": "5517:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5517:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5516:25:23"
            },
            "returnParameters": {
              "id": 7016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5570:0:23"
            },
            "scope": 7074,
            "src": "5497:187:23",
            "stateMutability": "nonpayable",
            "superFunction": 10565,
            "visibility": "external"
          },
          {
            "body": {
              "id": 7042,
              "nodeType": "Block",
              "src": "6057:48:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 7038,
                      "name": "logicVersions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6850,
                      "src": "6074:13:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                        "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                      }
                    },
                    "id": 7040,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 7039,
                      "name": "logicName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7033,
                      "src": "6088:9:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6074:24:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                      "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                    }
                  },
                  "functionReturnParameters": 7037,
                  "id": 7041,
                  "nodeType": "Return",
                  "src": "6067:31:23"
                }
              ]
            },
            "documentation": "@notice It gets the logic version for a given logic name.\n@param logicName the logic name to look for.\n@return the current logic version for the given logic name.",
            "id": 7043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7033,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7043,
                  "src": "5950:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7032,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5950:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5949:19:23"
            },
            "returnParameters": {
              "id": 7037,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7036,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 7043,
                  "src": "6016:35:23",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LogicVersion_$16613_memory_ptr",
                    "typeString": "struct LogicVersionLib.LogicVersion"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7035,
                    "name": "LogicVersionLib.LogicVersion",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 16613,
                    "src": "6016:28:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LogicVersion_$16613_storage_ptr",
                      "typeString": "struct LogicVersionLib.LogicVersion"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6015:37:23"
            },
            "scope": 7074,
            "src": "5924:181:23",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7072,
              "nodeType": "Block",
              "src": "6396:192:23",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 7051,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7045,
                          "src": "6414:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 7052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6427:2:23",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "6414:15:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4c4f4749435f4e414d455f4d5553545f42455f50524f5649444544",
                        "id": 7054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6431:29:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        },
                        "value": "LOGIC_NAME_MUST_BE_PROVIDED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6761f4c1b6a5d5dba3972a0852617ffbf0f234b2e4e40710be4ab4192706890f",
                          "typeString": "literal_string \"LOGIC_NAME_MUST_BE_PROVIDED\""
                        }
                      ],
                      "id": 7050,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "6406:7:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6406:55:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7056,
                  "nodeType": "ExpressionStatement",
                  "src": "6406:55:23"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7061,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7047,
                        "src": "6507:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7057,
                          "name": "logicVersions",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6850,
                          "src": "6471:13:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_LogicVersion_$16613_storage_$",
                            "typeString": "mapping(bytes32 => struct LogicVersionLib.LogicVersion storage ref)"
                          }
                        },
                        "id": 7059,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7058,
                          "name": "logicName",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7045,
                          "src": "6485:9:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6471:24:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LogicVersion_$16613_storage",
                          "typeString": "struct LogicVersionLib.LogicVersion storage ref"
                        }
                      },
                      "id": 7060,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16650,
                      "src": "6471:35:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_LogicVersion_$16613_storage_ptr_$_t_address_$returns$__$bound_to$_t_struct$_LogicVersion_$16613_storage_ptr_$",
                        "typeString": "function (struct LogicVersionLib.LogicVersion storage pointer,address)"
                      }
                    },
                    "id": 7062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6471:42:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7063,
                  "nodeType": "ExpressionStatement",
                  "src": "6471:42:23"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7065,
                        "name": "logicName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7045,
                        "src": "6549:9:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7066,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "6560:3:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6560:10:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7068,
                        "name": "logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7047,
                        "src": "6572:5:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6579:1:23",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7064,
                      "name": "LogicVersionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10485,
                      "src": "6529:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,address,address,uint256)"
                      }
                    },
                    "id": 7070,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6529:52:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7071,
                  "nodeType": "EmitStatement",
                  "src": "6524:57:23"
                }
              ]
            },
            "documentation": "@notice It creates a new logic version given a logic name and address.\n@param logicName logic name to create.\n@param logic the logic address value for the given logic name.",
            "id": 7073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createLogicVersion",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7045,
                  "name": "logicName",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "6353:17:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7044,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6353:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7047,
                  "name": "logic",
                  "nodeType": "VariableDeclaration",
                  "scope": 7073,
                  "src": "6372:13:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6372:7:23",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6352:34:23"
            },
            "returnParameters": {
              "id": 7049,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6396:0:23"
            },
            "scope": 7074,
            "src": "6324:264:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 7075,
        "src": "1520:5100:23"
      }
    ],
    "src": "0:6621:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-15T23:09:49.803Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "createLogicVersion(bytes32,address)": {
        "params": {
          "logic": "the logic address value for the given logic name.",
          "logicName": "logic name to create."
        }
      },
      "createLogicVersions((address,bytes32)[])": {
        "params": {
          "newLogicVersions": "lists of the new logic versions to create."
        }
      },
      "getLogicVersion(bytes32)": {
        "params": {
          "logicName": "to get."
        },
        "return": "the current logic version."
      },
      "getLogicVersionAddress(bytes32)": {
        "params": {
          "logicName": "to get."
        },
        "return": "the current logic address."
      },
      "hasLogicVersion(bytes32)": {
        "params": {
          "logicName": "logic name to test."
        },
        "return": "true if the logic version is already configured. Otherwise it returns false."
      },
      "initialize(address)": {
        "params": {
          "settingsAddress": "the settings contract address."
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "removeLogicVersion(bytes32)": {
        "params": {
          "logicName": "logic name to remove."
        }
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "updateLogicAddress(bytes32,address)": {
        "params": {
          "logicName": "logic name to update.",
          "newLogic": "the new logic address to set."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createLogicVersion(bytes32,address)": {
        "notice": "It creates a new logic version given a logic name and address."
      },
      "createLogicVersions((address,bytes32)[])": {
        "notice": "It creates multiple logic versions."
      },
      "getLogicVersion(bytes32)": {
        "notice": "It gets the current logic version for a given logic name."
      },
      "getLogicVersionAddress(bytes32)": {
        "notice": "It gets the current logic address for a given logic name."
      },
      "hasLogicVersion(bytes32)": {
        "notice": "It tests whether a logic name is already configured."
      },
      "initialize(address)": {
        "notice": "It initializes this logic versions registry contract instance."
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "removeLogicVersion(bytes32)": {
        "notice": "It removes a current logic version given a logic name."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "updateLogicAddress(bytes32,address)": {
        "notice": "It update a current logic address given a logic name."
      }
    },
    "notice": "It manages all the logic contract versions, mapping each one to a logic name (or key)."
  }
}