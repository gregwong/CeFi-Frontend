{
  "contractName": "PairAggregatorRegistryMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pairAggregator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "responseDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "collateralDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "inverse",
          "type": "bool"
        }
      ],
      "name": "PairAggregatorRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPairAggregator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPairAggregator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newResponseDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "newCollateralDecimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "newInverse",
          "type": "bool"
        }
      ],
      "name": "PairAggregatorUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "aggregators",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        }
      ],
      "name": "getPairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteToken",
          "type": "address"
        }
      ],
      "name": "hasPairAggregator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "registerPairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "name": "registerPairAggregators",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface[]",
          "name": "newAggregators",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "baseToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "quoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "chainlinkAggregatorAddress",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "inverse",
              "type": "bool"
            },
            {
              "internalType": "uint8",
              "name": "responseDecimals",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "collateralDecimals",
              "type": "uint8"
            }
          ],
          "internalType": "struct TellerCommon.PairAggregatorRegisterRequest",
          "name": "request",
          "type": "tuple"
        }
      ],
      "name": "updatePairAggregator",
      "outputs": [
        {
          "internalType": "contract PairAggregatorInterface",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "baseAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "quoteAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "aggregatorAddress",
          "type": "address"
        }
      ],
      "name": "externalAddAggregatorFor",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pairAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"}],\"name\":\"PairAggregatorRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPairAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPairAggregator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newResponseDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newCollateralDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newInverse\",\"type\":\"bool\"}],\"name\":\"PairAggregatorUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"aggregators\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aggregatorAddress\",\"type\":\"address\"}],\"name\":\"externalAddAggregatorFor\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"getPairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"}],\"name\":\"hasPairAggregator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"registerPairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"registerPairAggregators\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface[]\",\"name\":\"newAggregators\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"baseToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"chainlinkAggregatorAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"inverse\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"responseDecimals\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"collateralDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct TellerCommon.PairAggregatorRegisterRequest\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"updatePairAggregator\",\"outputs\":[{\"internalType\":\"contract PairAggregatorInterface\",\"name\":\"aggregator\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"getPairAggregator(address,address)\":{\"return\":\"the pair aggregator address for the given base and quote addresses.\"},\"hasPairAggregator(address,address)\":{\"return\":\"true if the pair aggregator address for the given base and quote tokens is not 0x0. Otherwise it returns false.\"},\"initialize(address)\":{\"params\":{\"settingsAddress\":\"this settings address.\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"registerPairAggregator((address,address,address,bool,uint8,uint8))\":{\"params\":{\"request\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator created.\"},\"registerPairAggregators((address,address,address,bool,uint8,uint8)[])\":{\"params\":{\"requests\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator addresses.\"},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"updatePairAggregator((address,address,address,bool,uint8,uint8))\":{\"params\":{\"request\":\"the input data to register the new pair aggregator.\"},\"return\":\"the new pair aggregator created.\"}}},\"userdoc\":{\"methods\":{\"getPairAggregator(address,address)\":{\"notice\":\"Gets a pair aggregator for a given base and quote tokens (a market).baseToken the base token address.quoteToken the quote token address.\"},\"hasPairAggregator(address,address)\":{\"notice\":\"Tests whether a pair aggregator exists for a given base and quote tokens (a market) or not.baseToken the base token address.quoteToken the quote token address.\"},\"initialize(address)\":{\"notice\":\"It initializes this registry contract.\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"registerPairAggregator((address,address,address,bool,uint8,uint8))\":{\"notice\":\"It registers a new pair aggregator for a given market.\"},\"registerPairAggregators((address,address,address,bool,uint8,uint8)[])\":{\"notice\":\"It registers new pair aggregators for given markets.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"updatePairAggregator((address,address,address,bool,uint8,uint8))\":{\"notice\":\"It updates a current pair aggregator for a given market.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol\":\"PairAggregatorRegistryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseDynamicProxy.sol\":{\"keccak256\":\"0x2ca742c7aaf1598a5c8fb46065a3621f12f206602ac2c99239cdfce1a597d6fa\",\"urls\":[\"bzz-raw://306b66e976d251f89f4e27fc6ee88ecce640aeddb89c9f9971f7ee3a506e4288\",\"dweb:/ipfs/QmZ4R5o1dmZKvXdy1m5xn95DiwP3NfAMk12vmwDkWEekfR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseProxy.sol\":{\"keccak256\":\"0x11d3058b613d46bef5b3a7bfe6fa9594102be247b32ac534e5d99c629b0fa83e\",\"urls\":[\"bzz-raw://c8cc3b7b971127b779827fc448ce8d7b08c2eaa2e63e4b815f17a6c29d96c999\",\"dweb:/ipfs/QmagGrpfWjBWQ7fFDyER2ic56apw5qoDLYcfwmadE6khAg\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/DynamicProxy.sol\":{\"keccak256\":\"0x5f62e8d7e566cbe3a54104728fd1fdaf711e4c7444f4c28ed2fd2f1b919290f7\",\"urls\":[\"bzz-raw://223201d7bf70f4f2cf8d960017e222c0796694880e01bd7d2f19fbcdd8770c76\",\"dweb:/ipfs/QmUs5wb6CRCsq1iZxZD542f2dco2jp9kZpDQAbfgyoFGqo\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xe6e8bac5c0ba6e8d1e1416ac4303be41e8290f4a25f69b7e799ef6ef63434de4\",\"urls\":[\"bzz-raw://a2368205a629bb19220cda5c34a1077856a0c477f08409fd1f9759778dec6b96\",\"dweb:/ipfs/QmX55YjR6Rq1ZUwdoUtLjcH7ZtPQsXu9mb4F6xmuWPVq3H\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol\":{\"keccak256\":\"0x67da430caea4b7be305cfab5734e3cfe9e30a8079fe37e5610c66ae1eb849850\",\"urls\":[\"bzz-raw://82e47e9bb49cf92f5eb86fb9703741254709089e0d5324ec45767d8ca8c4b051\",\"dweb:/ipfs/QmZJ9mF5kquogZjxScPjD3RFgo97tz2Gsq1a67rAebu2ag\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xf191c8f57095bb998927a468978fd9a36454b445492e1d66e20cabbd44645e13\",\"urls\":[\"bzz-raw://d82c7ccd58f971e37611d246fbf7ad97b33f80bb1c49b85d9f8ff0d7cb823682\",\"dweb:/ipfs/QmYV4V8dCZ6Peopycs8KmehWPyWR2YYCsU3FKDc1NiKmME\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x9574ec7b6ec8d2072b6276a0873ec2e27fc8262ed61ccbb7a3ffc20ac7dfc323\",\"urls\":[\"bzz-raw://25ba0147fb05f281e7d0b601f116e805d563a516223041ff5660b43a5f448385\",\"dweb:/ipfs/QmcvfSjqEZpd7gfXFvBm39sV8RFtzJA81X59StgMgdc21t\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/upgradeability/Proxy.sol\":{\"keccak256\":\"0xd8074ae5fa7ee6384ca8196a896612fb044bbf4ff4b7336d03cd97845000ac21\",\"urls\":[\"bzz-raw://3a111e1dc777d80e6c2ad41c6ff2bfb3ae8f61658fd6580ddf9ba9ab0d25a354\",\"dweb:/ipfs/QmSfwvUqqiownzHeMmUiYkejWs6FXR2KLtHQnSzP6FivTj\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611dee806100206000396000f3fe60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c8063c4959317116200006f578063c49593171462000140578063c4d66de81462000157578063d7775ff1146200016e578063e06174e41462000194578063eef84f00146200019e57620000ac565b8063158ef93e14620000b1578063662a3e5814620000d3578063712985a614620000ea578063887b04b914620001035780638a35ec541462000129575b600080fd5b620000bb620001b5565b604051620000ca9190620015c2565b60405180910390f35b620000bb620000e436600462000fe1565b620001d6565b62000101620000fb36600462001020565b620001ed565b005b6200011a620001143660046200111d565b62000228565b604051620000ca9190620015d2565b6200011a6200013a36600462000fe1565b62000581565b6200011a6200015136600462000fe1565b620005a4565b620001016200016836600462000f9f565b620005cc565b620001856200017f36600462001074565b6200060e565b604051620000ca9190620015af565b6200011a62000762565b6200011a620001af3660046200111d565b62000786565b600080604051620001c69062001486565b6040519081900390205492915050565b6000620001e4838362000831565b90505b92915050565b6001600160a01b0392831660009081526020818152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600062000234620001b5565b6200025c5760405162461bcd60e51b815260040162000253906200163c565b60405180910390fd5b6200026662000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620002939190620014a0565b60006040518083038186803b158015620002ac57600080fd5b505afa158015620002c1573d6000803e3d6000fd5b50620002e99250620002da915050602084018462000f9f565b6001600160a01b03166200085b565b620003085760405162461bcd60e51b81526004016200025390620015f4565b6200031e620002da604084016020850162000f9f565b6200033d5760405162461bcd60e51b8152600401620002539062001606565b62000353620002da606084016040850162000f9f565b620003725760405162461bcd60e51b81526004016200025390620015f4565b6200039d62000385602084018462000f9f565b62000397604085016020860162000f9f565b62000831565b620003bc5760405162461bcd60e51b8152600401620002539062001618565b60008080620003cf602086018662000f9f565b6001600160a01b03166001600160a01b03168152602001908152602001600020600084602001602062000406919081019062000f9f565b6001600160a01b039081168252602082019290925260400160002054169050620004406200043a368590038501856200113e565b62000898565b91508160008062000455602087018762000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160206200048c919081019062000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826020016020620004e5919081019062000f9f565b6001600160a01b0316620004fd602085018562000f9f565b6001600160a01b0316337f40d51ab006b90a1c76ff8d75ccaa5a3a095643d483e142576fc6d9818497c6c084866200053c60a08a0160808b016200115f565b6200054e60c08b0160a08c016200115f565b6200056060808c0160608d01620010ba565b60405162000573959493929190620014b0565b60405180910390a450919050565b60006020818152928152604080822090935290815220546001600160a01b031681565b6001600160a01b03918216600090815260208181526040808320938516835292905220541690565b620005d6620001b5565b15620005f65760405162461bcd60e51b815260040162000253906200164e565b620006018162000ad5565b6200060b62000b51565b50565b60606200061a620001b5565b620006395760405162461bcd60e51b815260040162000253906200163c565b6200064362000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620006709190620014a0565b60006040518083038186803b1580156200068957600080fd5b505afa1580156200069e573d6000803e3d6000fd5b5050508215159050620006c55760405162461bcd60e51b815260040162000253906200162a565b604080518381526020808502820101909152828015620006ef578160200160208202803883390190505b50905060005b828110156200075b576200072d8484838181106200070f57fe5b905060c002018036036200072791908101906200113e565b62000b71565b8282815181106200073a57fe5b6001600160a01b0390921660209283029190910190910152600101620006f5565b5092915050565b6000806000604051620007759062001493565b604051908190039020549250505090565b600062000792620001b5565b620007b15760405162461bcd60e51b815260040162000253906200163c565b620007bb62000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620007e89190620014a0565b60006040518083038186803b1580156200080157600080fd5b505afa15801562000816573d6000803e3d6000fd5b50505050620001e7828036036200072791908101906200113e565b6001600160a01b039182166000908152602081815260408083209385168352929052205416151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200089057508115155b949350505050565b600080620008a562000762565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008de57600080fd5b505afa158015620008f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620009199190810190620010fc565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200095457600080fd5b505af115801562000969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200098f9190810190620010fc565b6001600160a01b031663c4f8f96e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620009c857600080fd5b505afa158015620009dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000a039190810190620010db565b9050600062000a1162000762565b8260405162000a209062000e38565b62000a2d9291906200154c565b604051809103906000f08015801562000a4a573d6000803e3d6000fd5b5090506000819050809350836001600160a01b0316632e6536a88660400151876060015188608001518960a001516040518563ffffffff1660e01b815260040162000a99949392919062001506565b600060405180830381600087803b15801562000ab457600080fd5b505af115801562000ac9573d6000803e3d6000fd5b50505050505050919050565b62000af262000ae362000762565b6001600160a01b031662000e2a565b1562000afe576200060b565b62000b12816001600160a01b03166200085b565b62000b315760405162461bcd60e51b81526004016200025390620015e2565b600060405162000b419062001493565b6040519081900390208290555050565b600060405162000b619062001486565b6040519081900390206001905550565b80516000906001600160a01b031662000b8962000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc257600080fd5b505afa15801562000bd7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000bfd919081019062000fc0565b6001600160a01b0316148062000c245750815162000c24906001600160a01b03166200085b565b62000c435760405162461bcd60e51b81526004016200025390620015f4565b81602001516001600160a01b031662000c5b62000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c9457600080fd5b505afa15801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000ccf919081019062000fc0565b6001600160a01b0316148062000cf8575062000cf882602001516001600160a01b03166200085b565b62000d175760405162461bcd60e51b8152600401620002539062001606565b62000d2f82604001516001600160a01b03166200085b565b62000d4e5760405162461bcd60e51b81526004016200025390620015f4565b62000d628260000151836020015162000831565b1562000d825760405162461bcd60e51b8152600401620002539062001660565b62000d8d8262000898565b82516001600160a01b0390811660009081526020818152604080832082880180518616855292529182902080546001600160a01b031916858516179055518551608087015160a08801516060890151945196975092851695919094169333937f481bfc49ea4d87774cccc9f6e5b10300dfd9d4d35181edfc89bdf95b04029e819362000e1d938993929062001572565b60405180910390a4919050565b6001600160a01b0316151590565b610675806200173783390190565b8035620001e781620016f3565b8051620001e781620016f3565b60008083601f84011262000e7357600080fd5b50813567ffffffffffffffff81111562000e8c57600080fd5b6020830191508360c082028301111562000ea557600080fd5b9250929050565b8035620001e7816200170a565b8051620001e78162001715565b8051620001e78162001720565b600060c0828403121562000ee657600080fd5b50919050565b600060c0828403121562000eff57600080fd5b62000f0b60c062001672565b9050600062000f1b848462000e46565b825250602062000f2e8484830162000e46565b602083015250604062000f448482850162000e46565b604083015250606062000f5a8482850162000eac565b606083015250608062000f708482850162000f92565b60808301525060a062000f868482850162000f92565b60a08301525092915050565b8035620001e7816200172b565b60006020828403121562000fb257600080fd5b600062000890848462000e46565b60006020828403121562000fd357600080fd5b600062000890848462000e53565b6000806040838503121562000ff557600080fd5b600062001003858562000e46565b9250506020620010168582860162000e46565b9150509250929050565b6000806000606084860312156200103657600080fd5b600062001044868662000e46565b9350506020620010578682870162000e46565b92505060406200106a8682870162000e46565b9150509250925092565b600080602083850312156200108857600080fd5b823567ffffffffffffffff811115620010a057600080fd5b620010ae8582860162000e60565b92509250509250929050565b600060208284031215620010cd57600080fd5b600062000890848462000eac565b600060208284031215620010ee57600080fd5b600062000890848462000eb9565b6000602082840312156200110f57600080fd5b600062000890848462000ec6565b600060c082840312156200113057600080fd5b600062000890848462000ed3565b600060c082840312156200115157600080fd5b600062000890848462000eec565b6000602082840312156200117257600080fd5b600062000890848462000f92565b60006200118e83836200122d565b505060200190565b620011a181620016e6565b82525050565b620011a181620016b2565b6000620011bf82620016a0565b620011cb8185620016a4565b9350620011d8836200169a565b8060005b838110156200120c578151620011f3888262001180565b975062001200836200169a565b925050600101620011dc565b509495945050505050565b620011a181620016bf565b620011a181620016c4565b620011a181620016c7565b600062001247601c83620016ad565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b600062001282601b83620016a4565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000620012bd601b83620016a4565b7f424153455f544f4b454e5f4d5553545f42455f434f4e54524143540000000000815260200192915050565b6000620012f8601c83620016a4565b7f51554f54455f544f4b454e5f4d5553545f42455f434f4e545241435400000000815260200192915050565b600062001333601983620016a4565b7f504149525f41474752454741544f525f4e4f545f455849535400000000000000815260200192915050565b60006200136e601883620016ad565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000620013a9601283620016a4565b71524551554553545f4c4953545f454d50545960701b815260200192915050565b6000620013d9601883620016a4565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b600062001414601c83620016a4565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b60006200144f601d83620016a4565b7f504149525f41474752454741544f525f414c52454144595f4558495354000000815260200192915050565b620011a181620016e0565b6000620001e78262001238565b6000620001e7826200135f565b60208101620001e7828462001196565b60a08101620014c08288620011a7565b620014cf6020830187620011a7565b620014de60408301866200147b565b620014ed60608301856200147b565b620014fc608083018462001217565b9695505050505050565b60808101620015168287620011a7565b62001525602083018662001217565b6200153460408301856200147b565b6200154360608301846200147b565b95945050505050565b604081016200155c8285620011a7565b6200156b602083018462001222565b9392505050565b60808101620015828287620011a7565b6200159160208301866200147b565b620015a060408301856200147b565b62001543606083018462001217565b60208082528101620001e48184620011b2565b60208101620001e7828462001217565b60208101620001e782846200122d565b60208082528101620001e78162001273565b60208082528101620001e781620012ae565b60208082528101620001e781620012e9565b60208082528101620001e78162001324565b60208082528101620001e7816200139a565b60208082528101620001e781620013ca565b60208082528101620001e78162001405565b60208082528101620001e78162001440565b60405181810167ffffffffffffffff811182821017156200169257600080fd5b604052919050565b60200190565b5190565b90815260200190565b919050565b6000620001e782620016d4565b151590565b90565b6000620001e782620016b2565b6001600160a01b031690565b60ff1690565b6000620001e782620016c7565b620016fe81620016b2565b81146200060b57600080fd5b620016fe81620016bf565b620016fe81620016c4565b620016fe81620016c7565b620016fe81620016e056fe608060405234801561001057600080fd5b506040516106753803806106758339818101604052604081101561003357600080fd5b50805160209091015161004e826001600160e01b0361006716565b610060816001600160e01b0361014316565b50506103cc565b61009361007b6001600160e01b0361031616565b6001600160a01b031661034c60201b61021b1760201c565b1561009d57610140565b6100b9816001600160a01b031661035a60201b6102291760201c565b61010a576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190208190555b50565b6101546001600160e01b0361039616565b156101a6576040805162461bcd60e51b815260206004820152601660248201527f4c4f4749435f4e414d455f414c52454144595f53455400000000000000000000604482015290519081900360640190fd5b6101b76001600160e01b0361031616565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ef57600080fd5b505afa158015610203573d6000803e3d6000fd5b505050506040513d602081101561021957600080fd5b50516040805163b28f5abb60e01b81526004810184905290516001600160a01b039092169163b28f5abb91602480820192602092909190829003018186803b15801561026457600080fd5b505afa158015610278573d6000803e3d6000fd5b505050506040513d602081101561028e57600080fd5b50516102e1576040805162461bcd60e51b815260206004820152601460248201527f4c4f4749435f4e414d455f4e4f545f4558495354000000000000000000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d65000000000000008152905190819003601901902055565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061038e57508115155b949350505050565b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b61029a806103db6000396000f3fe6080604052600436106100295760003560e01c80635c60da1b14610033578063e06174e414610064575b610031610079565b005b34801561003f57600080fd5b50610048610093565b604080516001600160a01b039092168252519081900360200190f35b34801561007057600080fd5b506100486100a2565b610081610091565b61009161008c6100d8565b6101c1565b565b600061009d6100d8565b905090565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b60006100e26100a2565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d602081101561014457600080fd5b50516001600160a01b03166373f1fcf661015c6101e5565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d60208110156101ba57600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061025d57508115155b94935050505056fea265627a7a723158209abc930bf400a682d5e11c25f1ba256ae89b4ce766e410dcff2c716d1f6c668e64736f6c63430005110032a365627a7a7231582081da6c384f92d99a20c568bf75b7a3c89808f6bc1f2f7db21d266e06907000426c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ac5760003560e01c8063c4959317116200006f578063c49593171462000140578063c4d66de81462000157578063d7775ff1146200016e578063e06174e41462000194578063eef84f00146200019e57620000ac565b8063158ef93e14620000b1578063662a3e5814620000d3578063712985a614620000ea578063887b04b914620001035780638a35ec541462000129575b600080fd5b620000bb620001b5565b604051620000ca9190620015c2565b60405180910390f35b620000bb620000e436600462000fe1565b620001d6565b62000101620000fb36600462001020565b620001ed565b005b6200011a620001143660046200111d565b62000228565b604051620000ca9190620015d2565b6200011a6200013a36600462000fe1565b62000581565b6200011a6200015136600462000fe1565b620005a4565b620001016200016836600462000f9f565b620005cc565b620001856200017f36600462001074565b6200060e565b604051620000ca9190620015af565b6200011a62000762565b6200011a620001af3660046200111d565b62000786565b600080604051620001c69062001486565b6040519081900390205492915050565b6000620001e4838362000831565b90505b92915050565b6001600160a01b0392831660009081526020818152604080832094861683529390529190912080546001600160a01b03191691909216179055565b600062000234620001b5565b6200025c5760405162461bcd60e51b815260040162000253906200163c565b60405180910390fd5b6200026662000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620002939190620014a0565b60006040518083038186803b158015620002ac57600080fd5b505afa158015620002c1573d6000803e3d6000fd5b50620002e99250620002da915050602084018462000f9f565b6001600160a01b03166200085b565b620003085760405162461bcd60e51b81526004016200025390620015f4565b6200031e620002da604084016020850162000f9f565b6200033d5760405162461bcd60e51b8152600401620002539062001606565b62000353620002da606084016040850162000f9f565b620003725760405162461bcd60e51b81526004016200025390620015f4565b6200039d62000385602084018462000f9f565b62000397604085016020860162000f9f565b62000831565b620003bc5760405162461bcd60e51b8152600401620002539062001618565b60008080620003cf602086018662000f9f565b6001600160a01b03166001600160a01b03168152602001908152602001600020600084602001602062000406919081019062000f9f565b6001600160a01b039081168252602082019290925260400160002054169050620004406200043a368590038501856200113e565b62000898565b91508160008062000455602087018762000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060008560200160206200048c919081019062000f9f565b6001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a8154816001600160a01b0302191690836001600160a01b03160217905550826020016020620004e5919081019062000f9f565b6001600160a01b0316620004fd602085018562000f9f565b6001600160a01b0316337f40d51ab006b90a1c76ff8d75ccaa5a3a095643d483e142576fc6d9818497c6c084866200053c60a08a0160808b016200115f565b6200054e60c08b0160a08c016200115f565b6200056060808c0160608d01620010ba565b60405162000573959493929190620014b0565b60405180910390a450919050565b60006020818152928152604080822090935290815220546001600160a01b031681565b6001600160a01b03918216600090815260208181526040808320938516835292905220541690565b620005d6620001b5565b15620005f65760405162461bcd60e51b815260040162000253906200164e565b620006018162000ad5565b6200060b62000b51565b50565b60606200061a620001b5565b620006395760405162461bcd60e51b815260040162000253906200163c565b6200064362000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620006709190620014a0565b60006040518083038186803b1580156200068957600080fd5b505afa1580156200069e573d6000803e3d6000fd5b5050508215159050620006c55760405162461bcd60e51b815260040162000253906200162a565b604080518381526020808502820101909152828015620006ef578160200160208202803883390190505b50905060005b828110156200075b576200072d8484838181106200070f57fe5b905060c002018036036200072791908101906200113e565b62000b71565b8282815181106200073a57fe5b6001600160a01b0390921660209283029190910190910152600101620006f5565b5092915050565b6000806000604051620007759062001493565b604051908190039020549250505090565b600062000792620001b5565b620007b15760405162461bcd60e51b815260040162000253906200163c565b620007bb62000762565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401620007e89190620014a0565b60006040518083038186803b1580156200080157600080fd5b505afa15801562000816573d6000803e3d6000fd5b50505050620001e7828036036200072791908101906200113e565b6001600160a01b039182166000908152602081815260408083209385168352929052205416151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906200089057508115155b949350505050565b600080620008a562000762565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015620008de57600080fd5b505afa158015620008f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620009199190810190620010fc565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200095457600080fd5b505af115801562000969573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506200098f9190810190620010fc565b6001600160a01b031663c4f8f96e6040518163ffffffff1660e01b815260040160206040518083038186803b158015620009c857600080fd5b505afa158015620009dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000a039190810190620010db565b9050600062000a1162000762565b8260405162000a209062000e38565b62000a2d9291906200154c565b604051809103906000f08015801562000a4a573d6000803e3d6000fd5b5090506000819050809350836001600160a01b0316632e6536a88660400151876060015188608001518960a001516040518563ffffffff1660e01b815260040162000a99949392919062001506565b600060405180830381600087803b15801562000ab457600080fd5b505af115801562000ac9573d6000803e3d6000fd5b50505050505050919050565b62000af262000ae362000762565b6001600160a01b031662000e2a565b1562000afe576200060b565b62000b12816001600160a01b03166200085b565b62000b315760405162461bcd60e51b81526004016200025390620015e2565b600060405162000b419062001493565b6040519081900390208290555050565b600060405162000b619062001486565b6040519081900390206001905550565b80516000906001600160a01b031662000b8962000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000bc257600080fd5b505afa15801562000bd7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000bfd919081019062000fc0565b6001600160a01b0316148062000c245750815162000c24906001600160a01b03166200085b565b62000c435760405162461bcd60e51b81526004016200025390620015f4565b81602001516001600160a01b031662000c5b62000762565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b15801562000c9457600080fd5b505afa15801562000ca9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525062000ccf919081019062000fc0565b6001600160a01b0316148062000cf8575062000cf882602001516001600160a01b03166200085b565b62000d175760405162461bcd60e51b8152600401620002539062001606565b62000d2f82604001516001600160a01b03166200085b565b62000d4e5760405162461bcd60e51b81526004016200025390620015f4565b62000d628260000151836020015162000831565b1562000d825760405162461bcd60e51b8152600401620002539062001660565b62000d8d8262000898565b82516001600160a01b0390811660009081526020818152604080832082880180518616855292529182902080546001600160a01b031916858516179055518551608087015160a08801516060890151945196975092851695919094169333937f481bfc49ea4d87774cccc9f6e5b10300dfd9d4d35181edfc89bdf95b04029e819362000e1d938993929062001572565b60405180910390a4919050565b6001600160a01b0316151590565b610675806200173783390190565b8035620001e781620016f3565b8051620001e781620016f3565b60008083601f84011262000e7357600080fd5b50813567ffffffffffffffff81111562000e8c57600080fd5b6020830191508360c082028301111562000ea557600080fd5b9250929050565b8035620001e7816200170a565b8051620001e78162001715565b8051620001e78162001720565b600060c0828403121562000ee657600080fd5b50919050565b600060c0828403121562000eff57600080fd5b62000f0b60c062001672565b9050600062000f1b848462000e46565b825250602062000f2e8484830162000e46565b602083015250604062000f448482850162000e46565b604083015250606062000f5a8482850162000eac565b606083015250608062000f708482850162000f92565b60808301525060a062000f868482850162000f92565b60a08301525092915050565b8035620001e7816200172b565b60006020828403121562000fb257600080fd5b600062000890848462000e46565b60006020828403121562000fd357600080fd5b600062000890848462000e53565b6000806040838503121562000ff557600080fd5b600062001003858562000e46565b9250506020620010168582860162000e46565b9150509250929050565b6000806000606084860312156200103657600080fd5b600062001044868662000e46565b9350506020620010578682870162000e46565b92505060406200106a8682870162000e46565b9150509250925092565b600080602083850312156200108857600080fd5b823567ffffffffffffffff811115620010a057600080fd5b620010ae8582860162000e60565b92509250509250929050565b600060208284031215620010cd57600080fd5b600062000890848462000eac565b600060208284031215620010ee57600080fd5b600062000890848462000eb9565b6000602082840312156200110f57600080fd5b600062000890848462000ec6565b600060c082840312156200113057600080fd5b600062000890848462000ed3565b600060c082840312156200115157600080fd5b600062000890848462000eec565b6000602082840312156200117257600080fd5b600062000890848462000f92565b60006200118e83836200122d565b505060200190565b620011a181620016e6565b82525050565b620011a181620016b2565b6000620011bf82620016a0565b620011cb8185620016a4565b9350620011d8836200169a565b8060005b838110156200120c578151620011f3888262001180565b975062001200836200169a565b925050600101620011dc565b509495945050505050565b620011a181620016bf565b620011a181620016c4565b620011a181620016c7565b600062001247601c83620016ad565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b600062001282601b83620016a4565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000620012bd601b83620016a4565b7f424153455f544f4b454e5f4d5553545f42455f434f4e54524143540000000000815260200192915050565b6000620012f8601c83620016a4565b7f51554f54455f544f4b454e5f4d5553545f42455f434f4e545241435400000000815260200192915050565b600062001333601983620016a4565b7f504149525f41474752454741544f525f4e4f545f455849535400000000000000815260200192915050565b60006200136e601883620016ad565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000620013a9601283620016a4565b71524551554553545f4c4953545f454d50545960701b815260200192915050565b6000620013d9601883620016a4565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b600062001414601c83620016a4565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b60006200144f601d83620016a4565b7f504149525f41474752454741544f525f414c52454144595f4558495354000000815260200192915050565b620011a181620016e0565b6000620001e78262001238565b6000620001e7826200135f565b60208101620001e7828462001196565b60a08101620014c08288620011a7565b620014cf6020830187620011a7565b620014de60408301866200147b565b620014ed60608301856200147b565b620014fc608083018462001217565b9695505050505050565b60808101620015168287620011a7565b62001525602083018662001217565b6200153460408301856200147b565b6200154360608301846200147b565b95945050505050565b604081016200155c8285620011a7565b6200156b602083018462001222565b9392505050565b60808101620015828287620011a7565b6200159160208301866200147b565b620015a060408301856200147b565b62001543606083018462001217565b60208082528101620001e48184620011b2565b60208101620001e7828462001217565b60208101620001e782846200122d565b60208082528101620001e78162001273565b60208082528101620001e781620012ae565b60208082528101620001e781620012e9565b60208082528101620001e78162001324565b60208082528101620001e7816200139a565b60208082528101620001e781620013ca565b60208082528101620001e78162001405565b60208082528101620001e78162001440565b60405181810167ffffffffffffffff811182821017156200169257600080fd5b604052919050565b60200190565b5190565b90815260200190565b919050565b6000620001e782620016d4565b151590565b90565b6000620001e782620016b2565b6001600160a01b031690565b60ff1690565b6000620001e782620016c7565b620016fe81620016b2565b81146200060b57600080fd5b620016fe81620016bf565b620016fe81620016c4565b620016fe81620016c7565b620016fe81620016e056fe608060405234801561001057600080fd5b506040516106753803806106758339818101604052604081101561003357600080fd5b50805160209091015161004e826001600160e01b0361006716565b610060816001600160e01b0361014316565b50506103cc565b61009361007b6001600160e01b0361031616565b6001600160a01b031661034c60201b61021b1760201c565b1561009d57610140565b6100b9816001600160a01b031661035a60201b6102291760201c565b61010a576040805162461bcd60e51b815260206004820152601b60248201527f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190208190555b50565b6101546001600160e01b0361039616565b156101a6576040805162461bcd60e51b815260206004820152601660248201527f4c4f4749435f4e414d455f414c52454144595f53455400000000000000000000604482015290519081900360640190fd5b6101b76001600160e01b0361031616565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ef57600080fd5b505afa158015610203573d6000803e3d6000fd5b505050506040513d602081101561021957600080fd5b50516040805163b28f5abb60e01b81526004810184905290516001600160a01b039092169163b28f5abb91602480820192602092909190829003018186803b15801561026457600080fd5b505afa158015610278573d6000803e3d6000fd5b505050506040513d602081101561028e57600080fd5b50516102e1576040805162461bcd60e51b815260206004820152601460248201527f4c4f4749435f4e414d455f4e4f545f4558495354000000000000000000000000604482015290519081900360640190fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d65000000000000008152905190819003601901902055565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061038e57508115155b949350505050565b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b61029a806103db6000396000f3fe6080604052600436106100295760003560e01c80635c60da1b14610033578063e06174e414610064575b610031610079565b005b34801561003f57600080fd5b50610048610093565b604080516001600160a01b039092168252519081900360200190f35b34801561007057600080fd5b506100486100a2565b610081610091565b61009161008c6100d8565b6101c1565b565b600061009d6100d8565b905090565b604080517f426173655570677261646561626c652e73657474696e67730000000000000000815290519081900360180190205490565b60006100e26100a2565b6001600160a01b031663ea23cb7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561011a57600080fd5b505afa15801561012e573d6000803e3d6000fd5b505050506040513d602081101561014457600080fd5b50516001600160a01b03166373f1fcf661015c6101e5565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561019057600080fd5b505afa1580156101a4573d6000803e3d6000fd5b505050506040513d60208110156101ba57600080fd5b5051905090565b3660008037600080366000845af43d6000803e8080156101e0573d6000f35b3d6000fd5b604080517f426173655570677261646561626c652e6c6f6769634e616d6500000000000000815290519081900360190190205490565b6001600160a01b0316151590565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47081811480159061025d57508115155b94935050505056fea265627a7a723158209abc930bf400a682d5e11c25f1ba256ae89b4ce766e410dcff2c716d1f6c668e64736f6c63430005110032a365627a7a7231582081da6c384f92d99a20c568bf75b7a3c89808f6bc1f2f7db21d266e06907000426c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "135:344:76:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:344:76;;;;;;;",
  "deployedSourceMap": "135:344:76:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;135:344:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;6071:188:93;;;;;;;;;:::i;212:265:76:-;;;;;;;;;:::i;:::-;;3756:1188:93;;;;;;;;;:::i;:::-;;;;;;;;2177:82;;;;;;;;;:::i;5511:200::-;;;;;;;;;:::i;5075:143::-;;;;;;;;;:::i;2531:537::-;;;;;;;;;:::i;:::-;;;;;;;;1259:263:11;;;:::i;3285:252:93:-;;;;;;;;;:::i;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;6071:188:93:-;6184:4;6211:41;6230:9;6241:10;6211:18;:41::i;:::-;6204:48;;6071:188;;;;;:::o;212:265:76:-;-1:-1:-1;;;;;365:24:76;;;:11;:24;;;;;;;;;;;:38;;;;;;;;;;;;:105;;-1:-1:-1;;;;;;365:105:76;;;;;;;;212:265::o;3756:1188:93:-;3908:34;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;3962:30:93;;-1:-1:-1;3962:17:93;;-1:-1:-1;;3962:17:93;;;:7;:17;;;-1:-1:-1;;;;;3962:28:93;;:30::i;:::-;3954:70;;;;-1:-1:-1;;;3954:70:93;;;;;;;;;4042:31;:18;;;;;;;;;:31;4034:72;;;;-1:-1:-1;;;4034:72:93;;;;;;;;;4137:47;:34;;;;;;;;;:47;4116:121;;;;-1:-1:-1;;;4116:121:93;;;;;;;;;4268:57;4287:17;;;;:7;:17;;;4306:18;;;;;;;;;;4268;:57::i;:::-;4247:129;;;;-1:-1:-1;;;4247:129:93;;;;;;;;;4387:25;;;4448:17;;;;:7;:17;;;-1:-1:-1;;;;;4436:30:93;-1:-1:-1;;;;;4436:30:93;;;;;;;;;;;;:50;4467:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4436:50:93;;;;;;;;;;;;;;-1:-1:-1;4436:50:93;;;;-1:-1:-1;4520:38:93;;;;;;;;4550:7;4520:38;;;:29;:38::i;:::-;4507:51;-1:-1:-1;4507:51:93;4569:11;;4581:17;;;;:7;:17;;;-1:-1:-1;;;;;4569:30:93;-1:-1:-1;;;;;4569:30:93;;;;;;;;;;;;:50;4600:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4569:50:93;-1:-1:-1;;;;;4569:50:93;;;;;;;;;;;;;:63;;;;;-1:-1:-1;;;;;4569:63:93;;;;;-1:-1:-1;;;;;4569:63:93;;;;;;4738:7;:18;;;;;;;;;;;;-1:-1:-1;;;;;4648:289:93;4707:17;;;;:7;:17;;;-1:-1:-1;;;;;4648:289:93;4683:10;4648:289;4770:17;4809:10;4834:24;;;;;;;;;;4872:26;;;;;;;;;;4912:15;;;;;;;;;;4648:289;;;;;;;;;;;;;;;;;;;1014:1:11;3756:1188:93;;;:::o;2177:82::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2177:82:93;;:::o;5511:200::-;-1:-1:-1;;;;;5670:22:93;;;5624:23;5670:22;;;;;;;;;;;:34;;;;;;;;;;;;5511:200::o;5075:143::-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;5158:29:93;5171:15;5158:12;:29::i;:::-;5198:13;:11;:13::i;:::-;5075:143;:::o;2531:537::-;2721:47;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;2792:19:93;;;;-1:-1:-1;2784:50:93;;;;-1:-1:-1;;;2784:50:93;;;;;;;;;2862:46;;;;;;;;;;;;;;;;2892:8;2862:46;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;2862:46:93;;2845:63;;2924:13;2919:143;2939:23;;;2919:143;;;3011:40;3035:8;;3044:5;3035:15;;;;;;;;;;;;3011:40;;;;;;;;;;;;:23;:40::i;:::-;2987:14;3002:5;2987:21;;;;;;;;-1:-1:-1;;;;;2987:64:93;;;:21;;;;;;;;;;;:64;2964:7;;2919:143;;;;2531:537;;;;:::o;1259:263:11:-;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;3285:252:93:-;3439:34;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;3498:32:93;3522:7;3498:32;;;;;;;;;;;6650:207;-1:-1:-1;;;;;6799:22:93;;;6764:4;6799:22;;;;;;;;;;;:34;;;;;;;;;;;6791:59;;;6650:207::o;686:610:129:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:129;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:129:o;6863:782:93:-;6993:34;7039:17;7059:10;:8;:10::i;:::-;-1:-1:-1;;;;;7059:40:93;;:42;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7059:42:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7059:42:93;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7059:42:93;;;;;;;;;-1:-1:-1;;;;;7059:62:93;;:64;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7059:64:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7059:64:93;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7059:64:93;;;;;;;;;-1:-1:-1;;;;;7059:114:93;;:116;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7059:116:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7059:116:93;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7059:116:93;;;;;;;;;7039:136;;7185:32;7258:10;:8;:10::i;:::-;7283:9;7220:82;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7220:82:93;7185:117;;7313:29;7353:19;7313:60;;7420:21;7383:59;;7452:10;-1:-1:-1;;;;;7452:21:93;;7487:7;:34;;;7535:7;:15;;;7564:7;:24;;;7602:7;:26;;;7452:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7452:186:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7452:186:93;;;;6863:782;;;;;;:::o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;:::o;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;7862:1216:93:-;8081:17;;7986:34;;-1:-1:-1;;;;;8053:45:93;:10;:8;:10::i;:::-;-1:-1:-1;;;;;8053:22:93;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8053:24:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8053:24:93;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8053:24:93;;;;;;;;;-1:-1:-1;;;;;8053:45:93;;:95;;;-1:-1:-1;8118:17:93;;:30;;-1:-1:-1;;;;;8118:28:93;;:30::i;:::-;8032:169;;;;-1:-1:-1;;;8032:169:93;;;;;;;;;8260:7;:18;;;-1:-1:-1;;;;;8232:46:93;:10;:8;:10::i;:::-;-1:-1:-1;;;;;8232:22:93;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8232:24:93;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8232:24:93;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;8232:24:93;;;;;;;;;-1:-1:-1;;;;;8232:46:93;;:97;;;;8298:31;:7;:18;;;-1:-1:-1;;;;;8298:29:93;;:31::i;:::-;8211:172;;;;-1:-1:-1;;;8211:172:93;;;;;;;;;8414:47;:7;:34;;;-1:-1:-1;;;;;8414:45:93;;:47::i;:::-;8393:121;;;;-1:-1:-1;;;8393:121:93;;;;;;;;;8546:57;8565:7;:17;;;8584:7;:18;;;8546;:57::i;:::-;8545:58;8524:134;;;;-1:-1:-1;;;8524:134:93;;;;;;;;;8682:38;8712:7;8682:29;:38::i;:::-;8743:17;;-1:-1:-1;;;;;8731:30:93;;;:11;:30;;;;;;;;;;;8762:18;;;;;8731:50;;;;;;;;;;:63;;-1:-1:-1;;;;;;8731:63:93;;;;;;;8903:18;8872:17;;8968:24;;;;9006:26;;;;9046:15;;;;8810:261;;8731:63;;-1:-1:-1;8810:261:93;;;;;;;;;8848:10;;8810:261;;;;8731:63;;8968:24;9046:15;8810:261;;;;;;;;;;7862:1216;;;:::o;1288:108:101:-;-1:-1:-1;;;;;1368:21:101;;;;1288:108::o;135:344:76:-;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;343:398;;;519:3;512:4;504:6;500:17;496:27;486:2;;537:1;534;527:12;486:2;-1:-1;557:20;;597:18;586:30;;583:2;;;629:1;626;619:12;583:2;663:4;655:6;651:17;639:29;;714:3;706:4;698:6;694:17;684:8;680:32;677:41;674:2;;;731:1;728;721:12;674:2;479:262;;;;;;749:124;813:20;;838:30;813:20;838:30;;880:134;958:13;;976:33;958:13;976:33;;1021:192;1128:13;;1146:62;1128:13;1146:62;;1499:182;;1633:3;1624:6;1619:3;1615:16;1611:26;1608:2;;;1650:1;1647;1640:12;1608:2;-1:-1;1669:6;1601:80;-1:-1;1601:80;1744:1123;;1881:4;1869:9;1864:3;1860:19;1856:30;1853:2;;;1899:1;1896;1889:12;1853:2;1917:20;1932:4;1917:20;;;1908:29;-1:-1;1992:1;2024:49;2069:3;2049:9;2024:49;;;1999:75;;-1:-1;2141:2;2174:49;2219:3;2195:22;;;2174:49;;;2167:4;2160:5;2156:16;2149:75;2095:140;2307:2;2340:49;2385:3;2376:6;2365:9;2361:22;2340:49;;;2333:4;2326:5;2322:16;2315:75;2245:156;2454:2;2487:46;2529:3;2520:6;2509:9;2505:22;2487:46;;;2480:4;2473:5;2469:16;2462:72;2411:134;2607:3;2641:47;2684:3;2675:6;2664:9;2660:22;2641:47;;;2634:4;2627:5;2623:16;2616:73;2555:145;2764:3;2798:47;2841:3;2832:6;2821:9;2817:22;2798:47;;;2791:4;2784:5;2780:16;2773:73;2710:147;1847:1020;;;;;2874:126;2939:20;;2964:31;2939:20;2964:31;;3007:241;;3111:2;3099:9;3090:7;3086:23;3082:32;3079:2;;;3127:1;3124;3117:12;3079:2;3162:1;3179:53;3224:7;3204:9;3179:53;;3255:263;;3370:2;3358:9;3349:7;3345:23;3341:32;3338:2;;;3386:1;3383;3376:12;3338:2;3421:1;3438:64;3494:7;3474:9;3438:64;;3525:366;;;3646:2;3634:9;3625:7;3621:23;3617:32;3614:2;;;3662:1;3659;3652:12;3614:2;3697:1;3714:53;3759:7;3739:9;3714:53;;;3704:63;;3676:97;3804:2;3822:53;3867:7;3858:6;3847:9;3843:22;3822:53;;;3812:63;;3783:98;3608:283;;;;;;3898:491;;;;4036:2;4024:9;4015:7;4011:23;4007:32;4004:2;;;4052:1;4049;4042:12;4004:2;4087:1;4104:53;4149:7;4129:9;4104:53;;;4094:63;;4066:97;4194:2;4212:53;4257:7;4248:6;4237:9;4233:22;4212:53;;;4202:63;;4173:98;4302:2;4320:53;4365:7;4356:6;4345:9;4341:22;4320:53;;;4310:63;;4281:98;3998:391;;;;;;4396:489;;;4581:2;4569:9;4560:7;4556:23;4552:32;4549:2;;;4597:1;4594;4587:12;4549:2;4632:31;;4683:18;4672:30;;4669:2;;;4715:1;4712;4705:12;4669:2;4743:126;4861:7;4852:6;4841:9;4837:22;4743:126;;;4733:136;;;;4611:264;4543:342;;;;;;4892:235;;4993:2;4981:9;4972:7;4968:23;4964:32;4961:2;;;5009:1;5006;4999:12;4961:2;5044:1;5061:50;5103:7;5083:9;5061:50;;5134:263;;5249:2;5237:9;5228:7;5224:23;5220:32;5217:2;;;5265:1;5262;5255:12;5217:2;5300:1;5317:64;5373:7;5353:9;5317:64;;5404:321;;5548:2;5536:9;5527:7;5523:23;5519:32;5516:2;;;5564:1;5561;5554:12;5516:2;5599:1;5616:93;5701:7;5681:9;5616:93;;6082:342;;6236:3;6224:9;6215:7;6211:23;6207:33;6204:2;;;6253:1;6250;6243:12;6204:2;6288:1;6305:103;6400:7;6380:9;6305:103;;6431:338;;6583:3;6571:9;6562:7;6558:23;6554:33;6551:2;;;6600:1;6597;6590:12;6551:2;6635:1;6652:101;6745:7;6725:9;6652:101;;6776:237;;6878:2;6866:9;6857:7;6853:23;6849:32;6846:2;;;6894:1;6891;6884:12;6846:2;6929:1;6946:51;6989:7;6969:9;6946:51;;7021:239;;7141:79;7216:3;7208:6;7141:79;;;-1:-1;;7249:4;7240:14;;7134:126;7268:142;7359:45;7398:5;7359:45;;;7354:3;7347:58;7341:69;;;7417:113;7500:24;7518:5;7500:24;;7593:855;;7771:87;7852:5;7771:87;;;7871:86;7950:6;7945:3;7871:86;;;7864:93;;7978:89;8061:5;7978:89;;;8087:7;8115:1;8100:326;8125:6;8122:1;8119:13;8100:326;;;8192:6;8186:13;8213:96;8305:3;8290:13;8213:96;;;8206:103;;8326:93;8412:6;8326:93;;;8316:103;-1:-1;;8147:1;8140:9;8100:326;;;-1:-1;8439:3;;7750:698;-1:-1;;;;;7750:698;8456:104;8533:21;8548:5;8533:21;;8567:113;8650:24;8668:5;8650:24;;8687:182;8793:70;8857:5;8793:70;;9263:364;;9441:85;9523:2;9518:3;9441:85;;;9559:30;9539:51;;9618:2;9609:12;;9427:200;-1:-1;;9427:200;9636:327;;9796:67;9860:2;9855:3;9796:67;;;9896:29;9876:50;;9954:2;9945:12;;9782:181;-1:-1;;9782:181;9972:327;;10132:67;10196:2;10191:3;10132:67;;;10232:29;10212:50;;10290:2;10281:12;;10118:181;-1:-1;;10118:181;10308:328;;10468:67;10532:2;10527:3;10468:67;;;10568:30;10548:51;;10627:2;10618:12;;10454:182;-1:-1;;10454:182;10645:325;;10805:67;10869:2;10864:3;10805:67;;;10905:27;10885:48;;10961:2;10952:12;;10791:179;-1:-1;;10791:179;10979:360;;11157:85;11239:2;11234:3;11157:85;;;11275:26;11255:47;;11330:2;11321:12;;11143:196;-1:-1;;11143:196;11348:318;;11508:67;11572:2;11567:3;11508:67;;;-1:-1;;;11588:41;;11657:2;11648:12;;11494:172;-1:-1;;11494:172;11675:324;;11835:67;11899:2;11894:3;11835:67;;;11935:26;11915:47;;11990:2;11981:12;;11821:178;-1:-1;;11821:178;12008:328;;12168:67;12232:2;12227:3;12168:67;;;12268:30;12248:51;;12327:2;12318:12;;12154:182;-1:-1;;12154:182;12345:329;;12505:67;12569:2;12564:3;12505:67;;;12605:31;12585:52;;12665:2;12656:12;;12491:183;-1:-1;;12491:183;12682:107;12761:22;12777:5;12761:22;;12796:372;;12995:148;13139:3;12995:148;;13175:372;;13374:148;13518:3;13374:148;;13554:229;13680:2;13665:18;;13694:79;13669:9;13746:6;13694:79;;13790:631;14006:3;13991:19;;14021:71;13995:9;14065:6;14021:71;;;14103:72;14171:2;14160:9;14156:18;14147:6;14103:72;;;14186:68;14250:2;14239:9;14235:18;14226:6;14186:68;;;14265;14329:2;14318:9;14314:18;14305:6;14265:68;;;14344:67;14406:3;14395:9;14391:19;14382:6;14344:67;;;13977:444;;;;;;;;;14428:519;14616:3;14601:19;;14631:71;14605:9;14675:6;14631:71;;;14713:66;14775:2;14764:9;14760:18;14751:6;14713:66;;;14790:68;14854:2;14843:9;14839:18;14830:6;14790:68;;;14869;14933:2;14922:9;14918:18;14909:6;14869:68;;;14587:360;;;;;;;;14954:324;15100:2;15085:18;;15114:71;15089:9;15158:6;15114:71;;;15196:72;15264:2;15253:9;15249:18;15240:6;15196:72;;;15071:207;;;;;;15285:519;15473:3;15458:19;;15488:71;15462:9;15532:6;15488:71;;;15570:68;15634:2;15623:9;15619:18;15610:6;15570:68;;;15649;15713:2;15702:9;15698:18;15689:6;15649:68;;;15728:66;15790:2;15779:9;15775:18;15766:6;15728:66;;15811:427;16012:2;16026:47;;;15997:18;;16087:141;15997:18;16214:6;16087:141;;16245:201;16357:2;16342:18;;16371:65;16346:9;16409:6;16371:65;;16453:279;16604:2;16589:18;;16618:104;16593:9;16695:6;16618:104;;17013:407;17204:2;17218:47;;;17189:18;;17279:131;17189:18;17279:131;;17427:407;17618:2;17632:47;;;17603:18;;17693:131;17603:18;17693:131;;17841:407;18032:2;18046:47;;;18017:18;;18107:131;18017:18;18107:131;;18255:407;18446:2;18460:47;;;18431:18;;18521:131;18431:18;18521:131;;18669:407;18860:2;18874:47;;;18845:18;;18935:131;18845:18;18935:131;;19083:407;19274:2;19288:47;;;19259:18;;19349:131;19259:18;19349:131;;19497:407;19688:2;19702:47;;;19673:18;;19763:131;19673:18;19763:131;;19911:407;20102:2;20116:47;;;20087:18;;20177:131;20087:18;20177:131;;20325:256;20387:2;20381:9;20413:17;;;20488:18;20473:34;;20509:22;;;20470:62;20467:2;;;20545:1;20542;20535:12;20467:2;20561;20554:22;20365:216;;-1:-1;20365:216;20588:184;20745:4;20736:14;;20693:79;20779:170;20915:12;;20886:63;21105:178;21223:19;;;21272:4;21263:14;;21216:67;21464:145;21600:3;21578:31;-1:-1;21578:31;21617:91;;21679:24;21697:5;21679:24;;21715:85;21781:13;21774:21;;21757:43;21807:72;21869:5;21852:27;21886:120;;21977:24;21995:5;21977:24;;22151:121;-1:-1;;;;;22213:54;;22196:76;22279:81;22350:4;22339:16;;22322:38;22367:129;;22454:37;22485:5;22454:37;;23412:117;23481:24;23499:5;23481:24;;;23474:5;23471:35;23461:2;;23520:1;23517;23510:12;23536:111;23602:21;23617:5;23602:21;;23654:117;23723:24;23741:5;23723:24;;23778:175;23876:53;23923:5;23876:53;;24164:113;24231:22;24247:5;24231:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport \"../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol\";\n\ncontract PairAggregatorRegistryMock is ChainlinkPairAggregatorRegistry {\n    function externalAddAggregatorFor(\n        address baseAddress,\n        address quoteAddress,\n        address aggregatorAddress\n    ) external {\n        aggregators[baseAddress][quoteAddress] = PairAggregatorInterface(\n            aggregatorAddress\n        );\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
    "exportedSymbols": {
      "PairAggregatorRegistryMock": [
        13354
      ]
    },
    "id": 13355,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13329,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:76"
      },
      {
        "id": 13330,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:76"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "file": "../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "id": 13331,
        "nodeType": "ImportDirective",
        "scope": 13355,
        "sourceUnit": 15027,
        "src": "59:74:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13332,
              "name": "ChainlinkPairAggregatorRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15026,
              "src": "174:31:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregatorRegistry_$15026",
                "typeString": "contract ChainlinkPairAggregatorRegistry"
              }
            },
            "id": 13333,
            "nodeType": "InheritanceSpecifier",
            "src": "174:31:76"
          }
        ],
        "contractDependencies": [
          2634,
          8853,
          15026,
          15112
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 13354,
        "linearizedBaseContracts": [
          13354,
          15026,
          15112,
          2634,
          8853
        ],
        "name": "PairAggregatorRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13352,
              "nodeType": "Block",
              "src": "355:122:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13342,
                          "name": "aggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14645,
                          "src": "365:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$10785_$_$",
                            "typeString": "mapping(address => mapping(address => contract PairAggregatorInterface))"
                          }
                        },
                        "id": 13345,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13343,
                          "name": "baseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13335,
                          "src": "377:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$10785_$",
                          "typeString": "mapping(address => contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13344,
                        "name": "quoteAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13337,
                        "src": "390:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "365:38:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$10785",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13348,
                          "name": "aggregatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13339,
                          "src": "443:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13347,
                        "name": "PairAggregatorInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10785,
                        "src": "406:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PairAggregatorInterface_$10785_$",
                          "typeString": "type(contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "406:64:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$10785",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "src": "365:105:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PairAggregatorInterface_$10785",
                      "typeString": "contract PairAggregatorInterface"
                    }
                  },
                  "id": 13351,
                  "nodeType": "ExpressionStatement",
                  "src": "365:105:76"
                }
              ]
            },
            "documentation": null,
            "id": 13353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "externalAddAggregatorFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13335,
                  "name": "baseAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "255:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13337,
                  "name": "quoteAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "284:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13339,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "314:25:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:100:76"
            },
            "returnParameters": {
              "id": 13341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:76"
            },
            "scope": 13354,
            "src": "212:265:76",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13355,
        "src": "135:344:76"
      }
    ],
    "src": "0:480:76"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/providers/chainlink/PairAggregatorRegistryMock.sol",
    "exportedSymbols": {
      "PairAggregatorRegistryMock": [
        13354
      ]
    },
    "id": 13355,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13329,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:76"
      },
      {
        "id": 13330,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:76"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "file": "../../../providers/chainlink/ChainlinkPairAggregatorRegistry.sol",
        "id": 13331,
        "nodeType": "ImportDirective",
        "scope": 13355,
        "sourceUnit": 15027,
        "src": "59:74:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13332,
              "name": "ChainlinkPairAggregatorRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15026,
              "src": "174:31:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ChainlinkPairAggregatorRegistry_$15026",
                "typeString": "contract ChainlinkPairAggregatorRegistry"
              }
            },
            "id": 13333,
            "nodeType": "InheritanceSpecifier",
            "src": "174:31:76"
          }
        ],
        "contractDependencies": [
          2634,
          8853,
          15026,
          15112
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 13354,
        "linearizedBaseContracts": [
          13354,
          15026,
          15112,
          2634,
          8853
        ],
        "name": "PairAggregatorRegistryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13352,
              "nodeType": "Block",
              "src": "355:122:76",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 13350,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 13342,
                          "name": "aggregators",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14645,
                          "src": "365:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$10785_$_$",
                            "typeString": "mapping(address => mapping(address => contract PairAggregatorInterface))"
                          }
                        },
                        "id": 13345,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 13343,
                          "name": "baseAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13335,
                          "src": "377:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_PairAggregatorInterface_$10785_$",
                          "typeString": "mapping(address => contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13346,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 13344,
                        "name": "quoteAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13337,
                        "src": "390:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "365:38:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$10785",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 13348,
                          "name": "aggregatorAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13339,
                          "src": "443:17:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13347,
                        "name": "PairAggregatorInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10785,
                        "src": "406:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PairAggregatorInterface_$10785_$",
                          "typeString": "type(contract PairAggregatorInterface)"
                        }
                      },
                      "id": 13349,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "406:64:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairAggregatorInterface_$10785",
                        "typeString": "contract PairAggregatorInterface"
                      }
                    },
                    "src": "365:105:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PairAggregatorInterface_$10785",
                      "typeString": "contract PairAggregatorInterface"
                    }
                  },
                  "id": 13351,
                  "nodeType": "ExpressionStatement",
                  "src": "365:105:76"
                }
              ]
            },
            "documentation": null,
            "id": 13353,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "externalAddAggregatorFor",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13335,
                  "name": "baseAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "255:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "255:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13337,
                  "name": "quoteAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "284:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13336,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "284:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13339,
                  "name": "aggregatorAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 13353,
                  "src": "314:25:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13338,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:100:76"
            },
            "returnParameters": {
              "id": 13341,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:0:76"
            },
            "scope": 13354,
            "src": "212:265:76",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13355,
        "src": "135:344:76"
      }
    ],
    "src": "0:480:76"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-15T23:09:49.959Z",
  "devdoc": {
    "methods": {
      "getPairAggregator(address,address)": {
        "return": "the pair aggregator address for the given base and quote addresses."
      },
      "hasPairAggregator(address,address)": {
        "return": "true if the pair aggregator address for the given base and quote tokens is not 0x0. Otherwise it returns false."
      },
      "initialize(address)": {
        "params": {
          "settingsAddress": "this settings address."
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "registerPairAggregator((address,address,address,bool,uint8,uint8))": {
        "params": {
          "request": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator created."
      },
      "registerPairAggregators((address,address,address,bool,uint8,uint8)[])": {
        "params": {
          "requests": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator addresses."
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "updatePairAggregator((address,address,address,bool,uint8,uint8))": {
        "params": {
          "request": "the input data to register the new pair aggregator."
        },
        "return": "the new pair aggregator created."
      }
    }
  },
  "userdoc": {
    "methods": {
      "getPairAggregator(address,address)": {
        "notice": "Gets a pair aggregator for a given base and quote tokens (a market).baseToken the base token address.quoteToken the quote token address."
      },
      "hasPairAggregator(address,address)": {
        "notice": "Tests whether a pair aggregator exists for a given base and quote tokens (a market) or not.baseToken the base token address.quoteToken the quote token address."
      },
      "initialize(address)": {
        "notice": "It initializes this registry contract."
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "registerPairAggregator((address,address,address,bool,uint8,uint8))": {
        "notice": "It registers a new pair aggregator for a given market."
      },
      "registerPairAggregators((address,address,address,bool,uint8,uint8)[])": {
        "notice": "It registers new pair aggregators for given markets."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "updatePairAggregator((address,address,address,bool,uint8,uint8))": {
        "notice": "It updates a current pair aggregator for a given market."
      }
    }
  }
}