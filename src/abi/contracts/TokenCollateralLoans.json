{
  "contractName": "TokenCollateralLoans",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalOwed",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "LoanTakenOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxLoanAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        }
      ],
      "name": "LoanTermsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "canLiquidateLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoans",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInLendingTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInCollateralTokens",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moreCollateralRequired",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanCollateralInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getTotalOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanIDCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTermsConsensus",
      "outputs": [
        {
          "internalType": "contract LoanTermsConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBorrow",
          "type": "uint256"
        }
      ],
      "name": "takeOutLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanRequest",
          "name": "request",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "responseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "signerNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct TellerCommon.Signature",
              "name": "signature",
              "type": "tuple"
            }
          ],
          "internalType": "struct TellerCommon.LoanResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "createLoanWithTerms",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "priceOracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanTermsConsensusAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIn\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalOwed\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"LoanTakenOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"}],\"name\":\"LoanTermsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"canLiquidateLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"signerNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct TellerCommon.LoanResponse[]\",\"name\":\"responses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"createLoanWithTerms\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoans\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInLendingTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInCollateralTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moreCollateralRequired\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanCollateralInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getTotalOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanTermsConsensusAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanIDCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTermsConsensus\",\"outputs\":[{\"internalType\":\"contract LoanTermsConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"}],\"name\":\"takeOutLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"cToken()\":{\"return\":\"Address of the cToken\"},\"canLiquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to check\"},\"return\":\"bool weather the loan can be liquidated\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"params\":{\"collateralAmount\":\"Amount of collateral required for the loan\",\"request\":\"Struct of the protocol loan request\",\"responses\":\"List of structs of the protocol loan responses\"}},\"depositCollateral(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to deposit as collateral.\",\"borrower\":\"The address of the loan borrower.\",\"loanID\":\"The ID of the loan the collateral is for\"}},\"getBorrowerLoans(address)\":{\"params\":{\"borrower\":\"The borrower's address\"}},\"getCollateralInfo(uint256)\":{\"params\":{\"loanID\":\"of the loan to get info for\"},\"return\":\"memory TellerCommon.LoanCollateralInfo Collateral information of the loan\"},\"getTotalOwed(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be queried\"},\"return\":\"uint256 The total amount owed remaining\"},\"initialize(address,address,address,address,address)\":{\"params\":{\"collateralTokenAddress\":\"Contract address for the collateral token.\",\"lendingPoolAddress\":\"Contract address of the lending pool\",\"loanTermsConsensusAddress\":\"Contract adddress for loan term consensus\",\"priceOracleAddress\":\"Contract address of the price oracle\",\"settingsAddress\":\"Contract address for the configuration of the platform\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"lendingToken()\":{\"return\":\"Address of the lending token\"},\"liquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be liquidated\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to pay back to the loan\",\"loanID\":\"The ID of the loan the payment is for\"}},\"setPriceOracle(address)\":{\"details\":\"It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.\",\"params\":{\"newPriceOracle\":\"the new price oracle address.\"}},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"tToken()\":{\"return\":\"Address of the tToken\"},\"takeOutLoan(uint256,uint256)\":{\"details\":\"collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points.\"},\"withdrawCollateral(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral token or ether the caller is hoping to withdraw.\",\"loanID\":\"The ID of the loan the collateral is for\"}}}},\"userdoc\":{\"methods\":{\"cToken()\":{\"notice\":\"Returns the cToken in the lending pool\"},\"canLiquidateLoan(uint256)\":{\"notice\":\"A loan can be liquidated if it is: under collateralized or expired\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"notice\":\"Creates a loan with the loan request and terms\"},\"depositCollateral(address,uint256,uint256)\":{\"notice\":\"Deposit collateral tokens into a loan.\"},\"getBorrowerLoans(address)\":{\"notice\":\"Get a list of all loans for a borrower\"},\"getCollateralInfo(uint256)\":{\"notice\":\"Get collateral information of a specific loan\"},\"getTotalOwed(uint256)\":{\"notice\":\"Returns the total owed amount remaining for a specified loan\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the current contract instance setting the required parameters, if allowed\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"lendingToken()\":{\"notice\":\"Returns the lending token in the lending pool\"},\"liquidateLoan(uint256)\":{\"notice\":\"Liquidate a loan if it is expired or under collateralized\"},\"repay(uint256,uint256)\":{\"notice\":\"Make a payment to a loan\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the current price oracle instance.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"tToken()\":{\"notice\":\"Returns the tToken in the lending pool\"},\"takeOutLoan(uint256,uint256)\":{\"notice\":\"Take out a loan\"},\"withdrawCollateral(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a loan, unless this isn't allowed\"}},\"notice\":\"This contract is used as a basis for the creation of loans (not wei) across the platformIt implements the LoansBase contract from Teller\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol\":\"TokenCollateralLoans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/ATMGovernanceInterface.sol\":{\"keccak256\":\"0x941d294aa385de623880428e08bf2e8ed4ef4e0f64b64297711748bbcf1e3e62\",\"urls\":[\"bzz-raw://e25e5830eb12b06fc560d5fc77112201fe6cce29a397ce32a982fffe1f0ea88d\",\"dweb:/ipfs/QmUoHemMNYziKTm9b7FwxQvZrtDYpLDw1HyUFchpwdbdw1\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Base.sol\":{\"keccak256\":\"0x23e85149613cbc80bec3de065d969b361d19c61177f426199d10667769f97a49\",\"urls\":[\"bzz-raw://1fbac7f12b453df42a3bd1632962e5c8e0738f9dd65fbc070ab35099ef1ad89b\",\"dweb:/ipfs/QmW8NR5CdGkDfiE9QouSCUznPQde3gNZhjRNnLCCPbJX1Z\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol\":{\"keccak256\":\"0x677d9fb130652827f2edc7203b1587b3250b5a50885a00e8f66177b718c58cf5\",\"urls\":[\"bzz-raw://ee3ffe7d965cbe295c725d975f16b99e4b9e63321da9621199aa488d3690f6e3\",\"dweb:/ipfs/QmanwDEqyiVGLymYPrwGNWXF19zE7gmgepFE8mHvifzkAA\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol\":{\"keccak256\":\"0x9101fd7b3e9a06c39a70513c9d4eaec804c40924ec3ee276d9a6377058b609fe\",\"urls\":[\"bzz-raw://d74a480eb7888f45fd4d23253d28878793eba6237ecb73f6e79f0e9b00459e92\",\"dweb:/ipfs/QmYRdSpemBwFfdEwbS8dSsqBEF211EPhXHCKVQp5rqJLVV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowInterface.sol\":{\"keccak256\":\"0x65c08f6f62a51becac639418b7ebe9781decdc89e1f0bc21acfa609418dfa8cb\",\"urls\":[\"bzz-raw://dabc828f30fae14e7d70643480cb1202ec2c85cf654517f18440a0f5b8062101\",\"dweb:/ipfs/QmP3LXe9upby2uN3KunXhBeKm1Mj9xqf31sqDFEMYnwXYt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0xcfa109416508b53f1e67f11040e0187ed8089d361cd1fdaec7f671058fc00168\",\"urls\":[\"bzz-raw://c9f0fcc3736ed10d81abae971b8702b08f14377dbc4c098c4f788ec8328ac666\",\"dweb:/ipfs/QmV3Dr9zyL5957GpWePJEBn5YewmRQTdr7T8vhxXXHPUFq\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoanTermsConsensusInterface.sol\":{\"keccak256\":\"0x93381688f1f920d3c445cd373603eb0aedea609c1827d4341a504ffc9f05e53a\",\"urls\":[\"bzz-raw://bb98e5e3728055be581c59ca924e7e194f81332dd8cdaf527c07ffd35d93b64c\",\"dweb:/ipfs/QmSccwLhRNdgF5x6f1fwF77pHyWJrCDAsaCqKCECpa4FsD\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0xfaaa0507db64689112f9435a97793cbff9b8a281309c55560f16fa3bf52f5a20\",\"urls\":[\"bzz-raw://4cd433e2560f8e577fbe6ba5e4946d7d95d49cd7f6d926ea7fa33f77e2289093\",\"dweb:/ipfs/QmdJkFSvx4KpTquDo6xFQzEWz3EenX6D8iGEY51T87tzGW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xe6e8bac5c0ba6e8d1e1416ac4303be41e8290f4a25f69b7e799ef6ef63434de4\",\"urls\":[\"bzz-raw://a2368205a629bb19220cda5c34a1077856a0c477f08409fd1f9759778dec6b96\",\"dweb:/ipfs/QmX55YjR6Rq1ZUwdoUtLjcH7ZtPQsXu9mb4F6xmuWPVq3H\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/ERC20DetailedLib.sol\":{\"keccak256\":\"0x9d40e0f2512901e6f3dcb2d95756724e4a71d418e755730a9828435c2b5ce204\",\"urls\":[\"bzz-raw://31d1541bf87c9356b4b43decc8b55479a00ebacd1beb0377b0a04200eed278c7\",\"dweb:/ipfs/QmcRJk2JfYzp9HFpTeW1BKWQALF7cpYW3Bj3G7QyosVmRV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x9574ec7b6ec8d2072b6276a0873ec2e27fc8262ed61ccbb7a3ffc20ac7dfc323\",\"urls\":[\"bzz-raw://25ba0147fb05f281e7d0b601f116e805d563a516223041ff5660b43a5f448385\",\"dweb:/ipfs/QmcvfSjqEZpd7gfXFvBm39sV8RFtzJA81X59StgMgdc21t\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061523c806100206000396000f3fe6080604052600436106101815760003560e01c80638129fc1c116100d1578063c35d64ea1161008a578063e06174e411610064578063e06174e4146103ff578063e1ec3c6814610414578063e3ed19021461044c578063eee8b7ff1461046c57610181565b8063c35d64ea146103aa578063ccdd9f5d146103bf578063d8aed145146103df57610181565b80638129fc1c14610316578063934b5d131461032b578063a59a997314610358578063a5c5c7b21461036d578063aaaca55814610380578063b2016bd41461039557610181565b80634ac8eb5f1161013e57806358895e3d1161011857806358895e3d1461029f5780636948f32b146102c157806369e527da146102e1578063767a7b05146102f657610181565b80634ac8eb5f14610255578063513484541461026a578063530e784f1461027f57610181565b806302bc2cdb146101865780631459457a146101a8578063158ef93e146101c85780631a74856b146101f35780632630c12f146102065780633b92930014610228575b600080fd5b34801561019257600080fd5b506101a66101a136600461401f565b610499565b005b3480156101b457600080fd5b506101a66101c3366004613e21565b610b7b565b3480156101d457600080fd5b506101dd610c20565b6040516101ea9190614cec565b60405180910390f35b6101a6610201366004613ed0565b610c3f565b34801561021257600080fd5b5061021b610e2a565b6040516101ea9190614c46565b34801561023457600080fd5b50610248610243366004614001565b610e39565b6040516101ea9190614cfa565b34801561026157600080fd5b50610248610e69565b34801561027657600080fd5b50610248610e6f565b34801561028b57600080fd5b506101a661029a366004613de5565b610e75565b3480156102ab57600080fd5b506102b4610fd3565b6040516101ea9190614d08565b3480156102cd57600080fd5b506101dd6102dc366004614001565b610fe2565b3480156102ed57600080fd5b5061021b61113b565b34801561030257600080fd5b506101a661031136600461401f565b6111bd565b34801561032257600080fd5b506101a66113d6565b34801561033757600080fd5b5061034b610346366004614001565b61145e565b6040516101ea9190614f47565b34801561036457600080fd5b506102b461146f565b6101a661037b366004613f77565b61147e565b34801561038c57600080fd5b5061021b611a72565b3480156103a157600080fd5b5061021b611ab7565b3480156103b657600080fd5b5061021b611ac6565b3480156103cb57600080fd5b506101a66103da366004614001565b611b0b565b3480156103eb57600080fd5b506101a66103fa36600461401f565b611ebb565b34801561040b57600080fd5b506102b46122c1565b34801561042057600080fd5b5061043461042f366004614001565b6122e3565b6040516101ea9c9b9a99989796959493929190614fbb565b34801561045857600080fd5b50610248610467366004613e96565b61239b565b34801561047857600080fd5b5061048c610487366004613de5565b6123c9565b6040516101ea9190614cdb565b8160016000828152606d60205260409020600e0154600160a01b900460ff1660038111156104c357fe5b146104e95760405162461bcd60e51b81526004016104e090614ef7565b60405180910390fd5b6104f1610c20565b61050d5760405162461bcd60e51b81526004016104e090614ee7565b610515612435565b156105325760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316610547816124af565b156105645760405162461bcd60e51b81526004016104e090614d47565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105a95760405162461bcd60e51b81526004016104e090614e97565b6000868152606d60205260409020600501548511156105da5760405162461bcd60e51b81526004016104e090614d77565b6000868152606d602052604090206007015442111561060b5760405162461bcd60e51b81526004016104e090614e37565b6107856106166122c1565b6001600160a01b031663269012a061062c6122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061069c9190810190613f59565b6001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b1580156106d457600080fd5b505afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070c9190810190613f3b565b6040518263ffffffff1660e01b81526004016107289190614cfa565b60206040518083038186803b15801561074057600080fd5b505afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107789190810190613f3b565b429063ffffffff61253416565b6000878152606d60205260409020600a015411156107b55760405162461bcd60e51b81526004016104e090614e17565b6000868152606d60205260409020600d8101869055600b8101869055600681015460039091015461081a916301e133809161080e9161271091839190610802908c9063ffffffff61257f16565b9063ffffffff61257f16565b9063ffffffff6125b916565b6000878152606d60205260409020600c0155610834613b93565b61083d876125fb565b90508060600151156108615760405162461bcd60e51b81526004016104e090614df7565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556108928761264c565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e926108ea928b921690600401614f77565b600060405180830381600087803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc6879061095e9030908b90600401614cc0565b600060405180830381600087803b15801561097857600080fd5b505af115801561098c573d6000803e3d6000fd5b50505050610998612745565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f457600080fd5b505afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a2c9190810190613e03565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6557600080fd5b505afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a9d9190810190613e03565b896040518463ffffffff1660e01b8152600401610abc93929190614ca5565b600060405180830381600087803b158015610ad657600080fd5b505af1158015610aea573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610b49908b90614cfa565b60405180910390a450506033548114610b745760405162461bcd60e51b81526004016104e090614f17565b5050505050565b610b83610c20565b15610ba05760405162461bcd60e51b81526004016104e090614f27565b60408051808201909152601a81527f50524f564944455f434f4c4c5f544f4b454e5f414444524553530000000000006020820152610bee906001600160a01b0383169063ffffffff6127bf16565b610bfa858585856127ec565b606780546001600160a01b0319166001600160a01b039290921691909117905550505050565b600080604051610c2f90614c30565b6040519081900390205492915050565b3415610c5d5760405162461bcd60e51b81526004016104e090614d67565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610c8757fe5b1480610cb9575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610cb757fe5b145b610cd55760405162461bcd60e51b81526004016104e090614d97565b610cdd610c20565b610cf95760405162461bcd60e51b81526004016104e090614ee7565b610d01612435565b15610d1e5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316610d33816124af565b15610d505760405162461bcd60e51b81526004016104e090614d47565b6000848152606d6020908152604091829020600101548251808401909352601983527f424f52524f5745525f4c4f414e5f49445f4d49534d415443480000000000000091830191909152610db7916001600160a01b0388811692169063ffffffff61293d16565b60008311610dd75760405162461bcd60e51b81526004016104e090614e77565b610de18484612966565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610e1b9190614cfa565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610e619163ffffffff61297e16565b90505b919050565b60665481565b60685481565b610e7d610c20565b610e995760405162461bcd60e51b81526004016104e090614ee7565b610ea16122c1565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610ecc9190614c54565b60006040518083038186803b158015610ee457600080fd5b505afa158015610ef8573d6000803e3d6000fd5b50505050610f0e816001600160a01b03166129a3565b610f2a5760405162461bcd60e51b81526004016104e090614e87565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610f80908290849063ffffffff6129df16565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610fec612435565b806110075750606a54611007906001600160a01b03166124af565b80611039575060026000838152606d60205260409020600e0154600160a01b900460ff16600381111561103657fe5b14155b1561104657506000610e64565b6000828152606d602052604081206008810154600690910154909142611072848463ffffffff61297e16565b10905080156110875760019350505050610e64565b6000858152606d60205260409020600e01546001600160a01b0316801561112457806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110e157600080fd5b505afa1580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111199190810190613f1d565b945050505050610e64565b61112d866125fb565b606001519695505050505050565b606a54604080516334f293ed60e11b815290516000926001600160a01b0316916369e527da916004808301926020929190829003018186803b15801561118057600080fd5b505afa158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b89190810190613e03565b905090565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156111e757fe5b1480611219575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561121757fe5b145b6112355760405162461bcd60e51b81526004016104e090614d97565b61123d610c20565b6112595760405162461bcd60e51b81526004016104e090614ee7565b611261612435565b1561127e5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316611293816124af565b156112b05760405162461bcd60e51b81526004016104e090614d47565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146112f45760405162461bcd60e51b81526004016104e090614ea7565b600085116113145760405162461bcd60e51b81526004016104e090614dd7565b600061131f856129e9565b9050600061132c82612a20565b6000878152606d602052604081206009015491925090611352908363ffffffff61253416565b90508781111561135f5750865b801561137057611370878233612b65565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41836040516113aa9190614cfa565b60405180910390a35050506033548114610b745760405162461bcd60e51b81526004016104e090614f17565b600054610100900460ff16806113ef57506113ef612bb9565b806113fd575060005460ff16155b6114195760405162461bcd60e51b81526004016104e090614e47565b600054610100900460ff16158015611444576000805460ff1961ff0019909116610100171660011790555b6001603355801561145b576000805461ff00191690555b50565b611466613b93565b610e61826125fb565b606a546001600160a01b031681565b341561149c5760405162461bcd60e51b81526004016104e090614d67565b6114a4610c20565b6114c05760405162461bcd60e51b81526004016104e090614ee7565b6114c8612435565b156114e55760405162461bcd60e51b81526004016104e090614de7565b6114f26020850185613de5565b336001600160a01b0382161461151a5760405162461bcd60e51b81526004016104e090614e97565b61152936869003860186613fe3565b60006115336122c1565b6001600160a01b031663269012a06115496122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561158157600080fd5b505afa158015611595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115b99190810190613f59565b6001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115f157600080fd5b505afa158015611605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116299190810190613f3b565b6040518263ffffffff1660e01b81526004016116459190614cfa565b60206040518083038186803b15801561165d57600080fd5b505afa158015611671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116959190810190613f3b565b90508160a001518110156116bb5760405162461bcd60e51b81526004016104e090614d27565b60006116c56122c1565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561172157600080fd5b505afa158015611735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117599190810190613e03565b85608001516040518363ffffffff1660e01b815260040161177b929190614cc0565b60206040518083038186803b15801561179357600080fd5b505afa1580156117a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117cb9190810190613f1d565b905080156117eb5760405162461bcd60e51b81526004016104e090614d57565b6117f88360800151612bbf565b6118145760405162461bcd60e51b81526004016104e090614ec7565b600061181e612f2f565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d499061185c908f908f908f90600401614f55565b606060405180830381600087803b15801561187657600080fd5b505af115801561188a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118ae919081019061403e565b919450925090506118d0846118c8368f90038f018f613fe3565b858585612f49565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b9084908111156119cd57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790558815611a0957611a09848a612966565b606c6000611a1a60208f018f613de5565b6001600160a01b031681526020808201929092526040016000908120805460018101825590825291902001849055611a6484611a5b368f90038f018f613fe3565b8585858e613198565b505050505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561118057600080fd5b6067546001600160a01b031681565b606a54604080516361aeb27560e11b815290516000926001600160a01b03169163c35d64ea916004808301926020929190829003018186803b15801561118057600080fd5b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611b3557fe5b14611b525760405162461bcd60e51b81526004016104e090614dc7565b611b5a610c20565b611b765760405162461bcd60e51b81526004016104e090614ee7565b611b7e612435565b15611b9b5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316611bb0816124af565b15611bcd5760405162461bcd60e51b81526004016104e090614d47565b6033805460010190819055611be184610fe2565b611bfd5760405162461bcd60e51b81526004016104e090614db7565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611c3b82613263565b9050611c48868333612b65565b6000611c526122c1565b6001600160a01b031663269012a0611c686122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ca057600080fd5b505afa158015611cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cd89190810190613f59565b6001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d1057600080fd5b505afa158015611d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d489190810190613f3b565b6040518263ffffffff1660e01b8152600401611d649190614cfa565b60206040518083038186803b158015611d7c57600080fd5b505afa158015611d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611db49190810190613f3b565b90506000611dce61271061080e858563ffffffff61257f16565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611e019084903390600401614f85565b600060405180830381600087803b158015611e1b57600080fd5b505af1158015611e2f573d6000803e3d6000fd5b5050506000898152606d6020526040908190206001015490516001600160a01b03909116915089907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611e8890339089908790614c62565b60405180910390a3505050506033548114611eb55760405162461bcd60e51b81526004016104e090614f17565b50505050565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611ee557fe5b14611f025760405162461bcd60e51b81526004016104e090614dc7565b611f0a610c20565b611f265760405162461bcd60e51b81526004016104e090614ee7565b611f2e612435565b15611f4b5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316611f60816124af565b15611f7d5760405162461bcd60e51b81526004016104e090614d47565b603380546001019081905584611fa55760405162461bcd60e51b81526004016104e090614d37565b846000611fb186610e39565b905081811015611fbf578091505b611fcf818363ffffffff61253416565b9050611fdb8683613357565b8061207f576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b179055600981015460019091015461202490889083906001600160a01b0316612b65565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190612075908590614cfa565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb70815906120b19085903390600401614f85565b600060405180830381600087803b1580156120cb57600080fd5b505af11580156120df573d6000803e3d6000fd5b505050506120eb612745565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561214757600080fd5b505afa15801561215b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061217f9190810190613e03565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156121b857600080fd5b505afa1580156121cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f09190810190613e03565b856040518463ffffffff1660e01b815260040161220f93929190614ca5565b600060405180830381600087803b15801561222957600080fd5b505af115801561223d573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf9061229690869033908790614fa0565b60405180910390a350506033548114610b745760405162461bcd60e51b81526004016104e090614f17565b60008060006040516122d290614c3b565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106123b457fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561242957602002820191906000526020600020905b815481526020019060010190808311612415575b50505050509050919050565b600061243f6122c1565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561247757600080fd5b505afa15801561248b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b89190810190613f1d565b60006124b96122c1565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016124e49190614c46565b60206040518083038186803b1580156124fc57600080fd5b505afa158015612510573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e619190810190613f1d565b600061257683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613412565b90505b92915050565b60008261258e57506000612579565b8282028284828161259b57fe5b04146125765760405162461bcd60e51b81526004016104e090614e07565b600061257683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613443565b612603613b93565b6000828152606d602052604081206009015490806126208561347a565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006126566122c1565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561268e57600080fd5b505afa1580156126a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126c69190810190613f59565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b81526004016126f3929190614cc0565b602060405180830381600087803b15801561270d57600080fd5b505af1158015612721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e619190810190613e03565b600061274f6122c1565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b15801561278757600080fd5b505afa15801561279b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b89190810190613f59565b6127c88261349e565b81906127e75760405162461bcd60e51b81526004016104e09190614d16565b505050565b6127f4610c20565b156128115760405162461bcd60e51b81526004016104e090614f27565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b6020820152612858906001600160a01b0386169063ffffffff6127bf16565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f414444524553530000000060208201526128a6906001600160a01b0385169063ffffffff6127bf16565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f41444452455353000000000060208201526128f4906001600160a01b0384169063ffffffff6127bf16565b6128fd816134ac565b50606980546001600160a01b039485166001600160a01b031991821617909155606a805493851693821693909317909255606b8054919093169116179055565b612947838361355e565b8190611eb55760405162461bcd60e51b81526004016104e09190614d16565b612970828261356f565b61297a33826135c8565b5050565b6000828201838110156125765760405162461bcd60e51b81526004016104e090614d87565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906129d757508115155b949350505050565b61294783836135e5565b6000806129f583610e39565b6000848152606d60205260409020600401549091506129d761271061080e848463ffffffff61257f16565b600080612aba606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a7457600080fd5b505afa158015612a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612aac9190810190613e03565b6001600160a01b03166135f7565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b158015612b0c57600080fd5b505afa158015612b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b449190810190613f3b565b90506000612b5c8361080e878563ffffffff61257f16565b95945050505050565b606654612b78908363ffffffff61253416565b6066556000838152606d6020526040902060090154612b9d908363ffffffff61253416565b6000848152606d60205260409020600901556127e78183613678565b303b1590565b600080612bca6122c1565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612c0257600080fd5b505afa158015612c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c3a9190810190613f59565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612c9657600080fd5b505afa158015612caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612cce9190810190613e03565b6067546040516001600160e01b031960e085901b168152612cfc92916001600160a01b031690600401614c8a565b60206040518083038186803b158015612d1457600080fd5b505afa158015612d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d4c9190810190613e03565b90506001600160a01b038116612d745760405162461bcd60e51b81526004016104e090614e57565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612db2906b14dd5c1c1b1e551bd119589d60a21b90600401614cfa565b60206040518083038186803b158015612dca57600080fd5b505afa158015612dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e029190810190613f3b565b90506000612e0e612745565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612e6a57600080fd5b505afa158015612e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ea29190810190613e03565b6067546040516001600160e01b031960e085901b168152612ed292916001600160a01b0316908a90600401614ca5565b60206040518083038186803b158015612eea57600080fd5b505afa158015612efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f229190810190613f3b565b9190911115949350505050565b606854612f4381600163ffffffff61297e16565b60685590565b612f51613bbd565b6000612f5b6122c1565b6001600160a01b031663269012a0612f716122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612fa957600080fd5b505afa158015612fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612fe19190810190613f59565b6001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b15801561301957600080fd5b505afa15801561302d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130519190810190613f3b565b6040518263ffffffff1660e01b815260040161306d9190614cfa565b60206040518083038186803b15801561308557600080fd5b505afa158015613099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130bd9190810190613f3b565b905060006130d1428363ffffffff61297e16565b90506040518061018001604052808981526020016040518060c001604052808a600001516001600160a01b031681526020018a602001516001600160a01b031681526020018981526020018881526020018781526020018a60a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016001600381111561318257fe5b8152600060209091015298975050505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f815260200190815260200160002060070154604051613206959493929190615073565b60405180910390a4801561325b5784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c836040516132529190614cfa565b60405180910390a35b505050505050565b6000806132b7606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a7457600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561330957600080fd5b505afa15801561331d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133419190810190613f3b565b90506129d78161080e868563ffffffff61257f16565b6000828152606d60205260409020600b01548111156133da576000828152606d60205260409020600b0154819061339590829063ffffffff61253416565b6000848152606d60205260408120600b810191909155600c01549091506133c2908263ffffffff61253416565b6000848152606d60205260409020600c01555061297a565b6000828152606d60205260409020600b01546133fc908263ffffffff61253416565b6000838152606d60205260409020600b01555050565b600081848411156134365760405162461bcd60e51b81526004016104e09190614d16565b50508183035b9392505050565b600081836134645760405162461bcd60e51b81526004016104e09190614d16565b50600083858161347057fe5b0495945050505050565b6000806000613488846129e9565b90508061349482612a20565b9250925050915091565b6001600160a01b0316151590565b6134b4610c20565b156134d15760405162461bcd60e51b81526004016104e090614f27565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f564944454400000000000000602082015261351f906001600160a01b0383169063ffffffff6127bf16565b613531816001600160a01b03166129a3565b61354d5760405162461bcd60e51b81526004016104e090614da7565b613555613695565b61145b816136b3565b6001600160a01b0390811691161490565b606654613582908263ffffffff61297e16565b6066556000828152606d60205260409020600901546135a7908263ffffffff61297e16565b6000928352606d602052604090922060098101929092555042600a90910155565b60675461297a906001600160a01b0316838363ffffffff61372216565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561363357600080fd5b505afa158015613647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061366b9190810190614081565b60ff16600a0a9392505050565b60675461297a906001600160a01b0316838363ffffffff6139a116565b60006040516136a390614c30565b6040519081900390206001905550565b6136cc6136be6122c1565b6001600160a01b031661349e565b156136d65761145b565b6136e8816001600160a01b03166129a3565b6137045760405162461bcd60e51b81526004016104e090614da7565b600060405161371290614c3b565b6040519081900390208290555050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906137539086903090600401614c8a565b60206040518083038186803b15801561376b57600080fd5b505afa15801561377f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137a39190810190613f3b565b9050818110156137c55760405162461bcd60e51b81526004016104e090614f07565b6040516370a0823160e01b81526000906001600160a01b038616906370a08231906137f4903090600401614c46565b60206040518083038186803b15801561380c57600080fd5b505afa158015613820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138449190810190613f3b565b90506000856001600160a01b03166323b872dd8630876040518463ffffffff1660e01b815260040161387893929190614ca5565b602060405180830381600087803b15801561389257600080fd5b505af11580156138a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138ca9190810190613f1d565b9050806138e95760405162461bcd60e51b81526004016104e090614e27565b6040516370a0823160e01b81526000906001600160a01b038816906370a0823190613918903090600401614c46565b60206040518083038186803b15801561393057600080fd5b505afa158015613944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506139689190810190613f3b565b90508461397b828563ffffffff61253416565b146139985760405162461bcd60e51b81526004016104e090614e67565b50505050505050565b6040516370a0823160e01b81526000906001600160a01b038516906370a08231906139d0903090600401614c46565b60206040518083038186803b1580156139e857600080fd5b505afa1580156139fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a209190810190613f3b565b905081811015613a425760405162461bcd60e51b81526004016104e090614eb7565b60405163a9059cbb60e01b81526000906001600160a01b0386169063a9059cbb90613a739087908790600401614cc0565b602060405180830381600087803b158015613a8d57600080fd5b505af1158015613aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ac59190810190613f1d565b905080613ae45760405162461bcd60e51b81526004016104e090614ed7565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190613b13903090600401614c46565b60206040518083038186803b158015613b2b57600080fd5b505afa158015613b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b639190810190613f3b565b905083613b76848363ffffffff61253416565b1461325b5760405162461bcd60e51b81526004016104e090614f37565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b60405180610180016040528060008152602001613bd8613c38565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115613c2b57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8035612579816151c1565b8051612579816151c1565b60008083601f840112613ca857600080fd5b50813567ffffffffffffffff811115613cc057600080fd5b60208301915083610140820283011115613cd957600080fd5b9250929050565b8051612579816151d5565b8035612579816151de565b8051612579816151de565b8051612579816151e7565b600060e08284031215613d1e57600080fd5b50919050565b600060e08284031215613d3657600080fd5b613d4060e06150bf565b90506000613d4e8484613c80565b8252506020613d5f84848301613c80565b6020830152506040613d7384828501613c80565b6040830152506060613d8784828501613ceb565b6060830152506080613d9b84828501613ceb565b60808301525060a0613daf84828501613ceb565b60a08301525060c0613dc384828501613ceb565b60c08301525092915050565b8035612579816151f0565b8051612579816151f0565b600060208284031215613df757600080fd5b60006129d78484613c80565b600060208284031215613e1557600080fd5b60006129d78484613c8b565b600080600080600060a08688031215613e3957600080fd5b6000613e458888613c80565b9550506020613e5688828901613c80565b9450506040613e6788828901613c80565b9350506060613e7888828901613c80565b9250506080613e8988828901613c80565b9150509295509295909350565b60008060408385031215613ea957600080fd5b6000613eb58585613c80565b9250506020613ec685828601613ceb565b9150509250929050565b600080600060608486031215613ee557600080fd5b6000613ef18686613c80565b9350506020613f0286828701613ceb565b9250506040613f1386828701613ceb565b9150509250925092565b600060208284031215613f2f57600080fd5b60006129d78484613ce0565b600060208284031215613f4d57600080fd5b60006129d78484613cf6565b600060208284031215613f6b57600080fd5b60006129d78484613d01565b6000806000806101208587031215613f8e57600080fd5b6000613f9a8787613d0c565b94505060e085013567ffffffffffffffff811115613fb757600080fd5b613fc387828801613c96565b9350935050610100613fd787828801613ceb565b91505092959194509250565b600060e08284031215613ff557600080fd5b60006129d78484613d24565b60006020828403121561401357600080fd5b60006129d78484613ceb565b6000806040838503121561403257600080fd5b6000613eb58585613ceb565b60008060006060848603121561405357600080fd5b600061405f8686613cf6565b935050602061407086828701613cf6565b9250506040613f1386828701613cf6565b60006020828403121561409357600080fd5b60006129d78484613dda565b60006140ab8383614a93565b50506101400190565b60006140c0838361418f565b505060200190565b6140d18161516b565b82525050565b6140d181615134565b60006140ec83856150fa565b93506140f7826150e6565b8060005b8581101561412d5761410d8284615121565b614117888261409f565b9750614122836150f3565b9250506001016140fb565b509495945050505050565b6000614143826150ef565b61414d81856150fa565b9350614158836150e9565b8060005b8381101561412d57815161417088826140b4565b975061417b836150e9565b92505060010161415c565b6140d18161513f565b6140d1816150e6565b6140d181615144565b6140d181615176565b60006141b5826150ef565b6141bf81856150fa565b93506141cf818560208601615181565b6141d8816151ad565b9093019392505050565b60006141ef601d836150fa565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000614228601c83610e64565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b60006142616015836150fa565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b60006142926016836150fa565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b60006142c46019836150fa565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b60006142fd601e836150fa565b7f544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f0000815260200192915050565b60006143366011836150fa565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000614363601b836150fa565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061439c6016836150fa565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b60006143ce601b836150fa565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b60006144076017836150fa565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000614440600f836150fa565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b600061446b6014836150fa565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b600061449b6012836150fa565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b60006144c96018836150fa565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b60006145026021836150fa565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614545601d836150fa565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b600061457e601b836150fa565b7f544f4b454e535f5452414e534645525f46524f4d5f4641494c45440000000000815260200192915050565b60006145b76012836150fa565b711313d05397d511549354d7d156141254915160721b815260200192915050565b60006145e5602e836150fa565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b60006146356018836150fa565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b600061466e601f836150fa565b7f494e565f42414c414e43455f41465445525f5452414e534645525f46524f4d00815260200192915050565b60006146a76013836150fa565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b60006146d6601e836150fa565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061470f6017836150fa565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b60006147486016836150fa565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b600061477a6019836150fa565b7f4e4f545f454e4f5547485f544f4b454e535f42414c414e434500000000000000815260200192915050565b60006147b3601883610e64565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006147ec601a836150fa565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b60006148256016836150fa565b751513d2d15394d7d514905394d1915497d1905253115160521b815260200192915050565b60006148576018836150fa565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614890600c836150fa565b6b1313d05397d393d517d4d15560a21b815260200192915050565b60006148b8601b836150fa565b7f4e4f545f454e4f5547485f544f4b454e535f414c4c4f57414e43450000000000815260200192915050565b60006148f1601f836150fa565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b600061492a601c836150fa565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000614963601a836150fa565b7f494e565f42414c414e43455f41465445525f5452414e53464552000000000000815260200192915050565b805160808301906149a0848261418f565b5060208201516149b3602085018261418f565b5060408201516149c6604085018261418f565b506060820151611eb56060850182614186565b60e082016149e78280615103565b6149f184826140d7565b506149ff6020830183615103565b614a0c60208501826140d7565b50614a1a6040830183615103565b614a2760408501826140d7565b50614a356060830183615112565b614a42606085018261418f565b50614a506080830183615112565b614a5d608085018261418f565b50614a6b60a0830183615112565b614a7860a085018261418f565b50614a8660c0830183615112565b611eb560c085018261418f565b6101408201614aa28280615103565b614aac84826140d7565b50614aba6020830183615103565b614ac760208501826140d7565b50614ad56040830183615112565b614ae2604085018261418f565b50614af06060830183615112565b614afd606085018261418f565b50614b0b6080830183615112565b614b18608085018261418f565b50614b2660a0830183615112565b614b3360a085018261418f565b50614b4160c0830183615121565b611eb560c0850182614bbe565b805160c0830190614b5f84826140d7565b506020820151614b7260208501826140d7565b506040820151614b85604085018261418f565b506060820151614b98606085018261418f565b506080820151614bab608085018261418f565b5060a0820151611eb560a085018261418f565b60808201614bcc8280615112565b614bd6848261418f565b50614be46020830183615125565b614bf16020850182614c27565b50614bff6040830183615112565b614c0c604085018261418f565b50614c1a6060830183615112565b611eb5606085018261418f565b6140d181615165565b60006125798261421b565b6000612579826147a6565b6020810161257982846140d7565b6020810161257982846140c8565b60608101614c7082866140c8565b614c7d602083018561418f565b6129d7604083018461418f565b60408101614c9882856140d7565b61343c60208301846140d7565b60608101614cb382866140d7565b614c7d60208301856140d7565b60408101614cce82856140d7565b61343c602083018461418f565b602080825281016125768184614138565b602081016125798284614186565b60208101612579828461418f565b602081016125798284614198565b6020808252810161257681846141aa565b60208082528101610e61816141e2565b60208082528101610e6181614254565b60208082528101610e6181614285565b60208082528101610e61816142b7565b60208082528101610e61816142f0565b60208082528101610e6181614329565b60208082528101610e6181614356565b60208082528101610e618161438f565b60208082528101610e61816143c1565b60208082528101610e61816143fa565b60208082528101610e6181614433565b60208082528101610e618161445e565b60208082528101610e618161448e565b60208082528101610e61816144bc565b60208082528101610e61816144f5565b60208082528101610e6181614538565b60208082528101610e6181614571565b60208082528101610e61816145aa565b60208082528101610e61816145d8565b60208082528101610e6181614628565b60208082528101610e6181614661565b60208082528101610e618161469a565b60208082528101610e61816146c9565b60208082528101610e6181614702565b60208082528101610e618161473b565b60208082528101610e618161476d565b60208082528101610e61816147df565b60208082528101610e6181614818565b60208082528101610e618161484a565b60208082528101610e6181614883565b60208082528101610e61816148ab565b60208082528101610e61816148e4565b60208082528101610e618161491d565b60208082528101610e6181614956565b60808101612579828461498f565b6101008101614f6482866149d9565b81810360e0830152612b5c8184866140e0565b60408101614c98828561418f565b60408101614f93828561418f565b61343c60208301846140c8565b60608101614fae828661418f565b614c7d60208301856140c8565b6102208101614fca828f61418f565b614fd7602083018e614b4e565b614fe460e083018d61418f565b614ff261010083018c61418f565b61500061012083018b61418f565b61500e61014083018a61418f565b61501c61016083018961418f565b61502a61018083018861418f565b6150386101a083018761418f565b6150466101c08301866140d7565b6150546101e08301856141a1565b615062610200830184614186565b9d9c50505050505050505050505050565b60a08101615081828861418f565b61508e602083018761418f565b61509b604083018661418f565b6150a8606083018561418f565b6150b5608083018461418f565b9695505050505050565b60405181810167ffffffffffffffff811182821017156150de57600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b60006125766020840184613c80565b60006125766020840184613ceb565b5090565b60006125766020840184613dcf565b6000610e6182615159565b151590565b6000610e6182615134565b80610e64816151b7565b6001600160a01b031690565b60ff1690565b6000610e6182615144565b6000610e618261514f565b60005b8381101561519c578181015183820152602001615184565b83811115611eb55750506000910152565b601f01601f191690565b6004811061145b57fe5b6151ca81615134565b811461145b57600080fd5b6151ca8161513f565b6151ca816150e6565b6151ca81615144565b6151ca8161516556fea365627a7a72315820b6a58236eaf9854778a098d04335e9f047fbca8fb9d3be926cd9a6c8c213a8976c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c80638129fc1c116100d1578063c35d64ea1161008a578063e06174e411610064578063e06174e4146103ff578063e1ec3c6814610414578063e3ed19021461044c578063eee8b7ff1461046c57610181565b8063c35d64ea146103aa578063ccdd9f5d146103bf578063d8aed145146103df57610181565b80638129fc1c14610316578063934b5d131461032b578063a59a997314610358578063a5c5c7b21461036d578063aaaca55814610380578063b2016bd41461039557610181565b80634ac8eb5f1161013e57806358895e3d1161011857806358895e3d1461029f5780636948f32b146102c157806369e527da146102e1578063767a7b05146102f657610181565b80634ac8eb5f14610255578063513484541461026a578063530e784f1461027f57610181565b806302bc2cdb146101865780631459457a146101a8578063158ef93e146101c85780631a74856b146101f35780632630c12f146102065780633b92930014610228575b600080fd5b34801561019257600080fd5b506101a66101a136600461401f565b610499565b005b3480156101b457600080fd5b506101a66101c3366004613e21565b610b7b565b3480156101d457600080fd5b506101dd610c20565b6040516101ea9190614cec565b60405180910390f35b6101a6610201366004613ed0565b610c3f565b34801561021257600080fd5b5061021b610e2a565b6040516101ea9190614c46565b34801561023457600080fd5b50610248610243366004614001565b610e39565b6040516101ea9190614cfa565b34801561026157600080fd5b50610248610e69565b34801561027657600080fd5b50610248610e6f565b34801561028b57600080fd5b506101a661029a366004613de5565b610e75565b3480156102ab57600080fd5b506102b4610fd3565b6040516101ea9190614d08565b3480156102cd57600080fd5b506101dd6102dc366004614001565b610fe2565b3480156102ed57600080fd5b5061021b61113b565b34801561030257600080fd5b506101a661031136600461401f565b6111bd565b34801561032257600080fd5b506101a66113d6565b34801561033757600080fd5b5061034b610346366004614001565b61145e565b6040516101ea9190614f47565b34801561036457600080fd5b506102b461146f565b6101a661037b366004613f77565b61147e565b34801561038c57600080fd5b5061021b611a72565b3480156103a157600080fd5b5061021b611ab7565b3480156103b657600080fd5b5061021b611ac6565b3480156103cb57600080fd5b506101a66103da366004614001565b611b0b565b3480156103eb57600080fd5b506101a66103fa36600461401f565b611ebb565b34801561040b57600080fd5b506102b46122c1565b34801561042057600080fd5b5061043461042f366004614001565b6122e3565b6040516101ea9c9b9a99989796959493929190614fbb565b34801561045857600080fd5b50610248610467366004613e96565b61239b565b34801561047857600080fd5b5061048c610487366004613de5565b6123c9565b6040516101ea9190614cdb565b8160016000828152606d60205260409020600e0154600160a01b900460ff1660038111156104c357fe5b146104e95760405162461bcd60e51b81526004016104e090614ef7565b60405180910390fd5b6104f1610c20565b61050d5760405162461bcd60e51b81526004016104e090614ee7565b610515612435565b156105325760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316610547816124af565b156105645760405162461bcd60e51b81526004016104e090614d47565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105a95760405162461bcd60e51b81526004016104e090614e97565b6000868152606d60205260409020600501548511156105da5760405162461bcd60e51b81526004016104e090614d77565b6000868152606d602052604090206007015442111561060b5760405162461bcd60e51b81526004016104e090614e37565b6107856106166122c1565b6001600160a01b031663269012a061062c6122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061069c9190810190613f59565b6001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b1580156106d457600080fd5b505afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070c9190810190613f3b565b6040518263ffffffff1660e01b81526004016107289190614cfa565b60206040518083038186803b15801561074057600080fd5b505afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107789190810190613f3b565b429063ffffffff61253416565b6000878152606d60205260409020600a015411156107b55760405162461bcd60e51b81526004016104e090614e17565b6000868152606d60205260409020600d8101869055600b8101869055600681015460039091015461081a916301e133809161080e9161271091839190610802908c9063ffffffff61257f16565b9063ffffffff61257f16565b9063ffffffff6125b916565b6000878152606d60205260409020600c0155610834613b93565b61083d876125fb565b90508060600151156108615760405162461bcd60e51b81526004016104e090614df7565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556108928761264c565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e926108ea928b921690600401614f77565b600060405180830381600087803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc6879061095e9030908b90600401614cc0565b600060405180830381600087803b15801561097857600080fd5b505af115801561098c573d6000803e3d6000fd5b50505050610998612745565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f457600080fd5b505afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a2c9190810190613e03565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6557600080fd5b505afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a9d9190810190613e03565b896040518463ffffffff1660e01b8152600401610abc93929190614ca5565b600060405180830381600087803b158015610ad657600080fd5b505af1158015610aea573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610b49908b90614cfa565b60405180910390a450506033548114610b745760405162461bcd60e51b81526004016104e090614f17565b5050505050565b610b83610c20565b15610ba05760405162461bcd60e51b81526004016104e090614f27565b60408051808201909152601a81527f50524f564944455f434f4c4c5f544f4b454e5f414444524553530000000000006020820152610bee906001600160a01b0383169063ffffffff6127bf16565b610bfa858585856127ec565b606780546001600160a01b0319166001600160a01b039290921691909117905550505050565b600080604051610c2f90614c30565b6040519081900390205492915050565b3415610c5d5760405162461bcd60e51b81526004016104e090614d67565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610c8757fe5b1480610cb9575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610cb757fe5b145b610cd55760405162461bcd60e51b81526004016104e090614d97565b610cdd610c20565b610cf95760405162461bcd60e51b81526004016104e090614ee7565b610d01612435565b15610d1e5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316610d33816124af565b15610d505760405162461bcd60e51b81526004016104e090614d47565b6000848152606d6020908152604091829020600101548251808401909352601983527f424f52524f5745525f4c4f414e5f49445f4d49534d415443480000000000000091830191909152610db7916001600160a01b0388811692169063ffffffff61293d16565b60008311610dd75760405162461bcd60e51b81526004016104e090614e77565b610de18484612966565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610e1b9190614cfa565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610e619163ffffffff61297e16565b90505b919050565b60665481565b60685481565b610e7d610c20565b610e995760405162461bcd60e51b81526004016104e090614ee7565b610ea16122c1565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610ecc9190614c54565b60006040518083038186803b158015610ee457600080fd5b505afa158015610ef8573d6000803e3d6000fd5b50505050610f0e816001600160a01b03166129a3565b610f2a5760405162461bcd60e51b81526004016104e090614e87565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610f80908290849063ffffffff6129df16565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610fec612435565b806110075750606a54611007906001600160a01b03166124af565b80611039575060026000838152606d60205260409020600e0154600160a01b900460ff16600381111561103657fe5b14155b1561104657506000610e64565b6000828152606d602052604081206008810154600690910154909142611072848463ffffffff61297e16565b10905080156110875760019350505050610e64565b6000858152606d60205260409020600e01546001600160a01b0316801561112457806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110e157600080fd5b505afa1580156110f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111199190810190613f1d565b945050505050610e64565b61112d866125fb565b606001519695505050505050565b606a54604080516334f293ed60e11b815290516000926001600160a01b0316916369e527da916004808301926020929190829003018186803b15801561118057600080fd5b505afa158015611194573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b89190810190613e03565b905090565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156111e757fe5b1480611219575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561121757fe5b145b6112355760405162461bcd60e51b81526004016104e090614d97565b61123d610c20565b6112595760405162461bcd60e51b81526004016104e090614ee7565b611261612435565b1561127e5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316611293816124af565b156112b05760405162461bcd60e51b81526004016104e090614d47565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146112f45760405162461bcd60e51b81526004016104e090614ea7565b600085116113145760405162461bcd60e51b81526004016104e090614dd7565b600061131f856129e9565b9050600061132c82612a20565b6000878152606d602052604081206009015491925090611352908363ffffffff61253416565b90508781111561135f5750865b801561137057611370878233612b65565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41836040516113aa9190614cfa565b60405180910390a35050506033548114610b745760405162461bcd60e51b81526004016104e090614f17565b600054610100900460ff16806113ef57506113ef612bb9565b806113fd575060005460ff16155b6114195760405162461bcd60e51b81526004016104e090614e47565b600054610100900460ff16158015611444576000805460ff1961ff0019909116610100171660011790555b6001603355801561145b576000805461ff00191690555b50565b611466613b93565b610e61826125fb565b606a546001600160a01b031681565b341561149c5760405162461bcd60e51b81526004016104e090614d67565b6114a4610c20565b6114c05760405162461bcd60e51b81526004016104e090614ee7565b6114c8612435565b156114e55760405162461bcd60e51b81526004016104e090614de7565b6114f26020850185613de5565b336001600160a01b0382161461151a5760405162461bcd60e51b81526004016104e090614e97565b61152936869003860186613fe3565b60006115336122c1565b6001600160a01b031663269012a06115496122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561158157600080fd5b505afa158015611595573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115b99190810190613f59565b6001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115f157600080fd5b505afa158015611605573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116299190810190613f3b565b6040518263ffffffff1660e01b81526004016116459190614cfa565b60206040518083038186803b15801561165d57600080fd5b505afa158015611671573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116959190810190613f3b565b90508160a001518110156116bb5760405162461bcd60e51b81526004016104e090614d27565b60006116c56122c1565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561172157600080fd5b505afa158015611735573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117599190810190613e03565b85608001516040518363ffffffff1660e01b815260040161177b929190614cc0565b60206040518083038186803b15801561179357600080fd5b505afa1580156117a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117cb9190810190613f1d565b905080156117eb5760405162461bcd60e51b81526004016104e090614d57565b6117f88360800151612bbf565b6118145760405162461bcd60e51b81526004016104e090614ec7565b600061181e612f2f565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d499061185c908f908f908f90600401614f55565b606060405180830381600087803b15801561187657600080fd5b505af115801561188a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118ae919081019061403e565b919450925090506118d0846118c8368f90038f018f613fe3565b858585612f49565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b9084908111156119cd57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790558815611a0957611a09848a612966565b606c6000611a1a60208f018f613de5565b6001600160a01b031681526020808201929092526040016000908120805460018101825590825291902001849055611a6484611a5b368f90038f018f613fe3565b8585858e613198565b505050505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561118057600080fd5b6067546001600160a01b031681565b606a54604080516361aeb27560e11b815290516000926001600160a01b03169163c35d64ea916004808301926020929190829003018186803b15801561118057600080fd5b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611b3557fe5b14611b525760405162461bcd60e51b81526004016104e090614dc7565b611b5a610c20565b611b765760405162461bcd60e51b81526004016104e090614ee7565b611b7e612435565b15611b9b5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316611bb0816124af565b15611bcd5760405162461bcd60e51b81526004016104e090614d47565b6033805460010190819055611be184610fe2565b611bfd5760405162461bcd60e51b81526004016104e090614db7565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611c3b82613263565b9050611c48868333612b65565b6000611c526122c1565b6001600160a01b031663269012a0611c686122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ca057600080fd5b505afa158015611cb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cd89190810190613f59565b6001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d1057600080fd5b505afa158015611d24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d489190810190613f3b565b6040518263ffffffff1660e01b8152600401611d649190614cfa565b60206040518083038186803b158015611d7c57600080fd5b505afa158015611d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611db49190810190613f3b565b90506000611dce61271061080e858563ffffffff61257f16565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611e019084903390600401614f85565b600060405180830381600087803b158015611e1b57600080fd5b505af1158015611e2f573d6000803e3d6000fd5b5050506000898152606d6020526040908190206001015490516001600160a01b03909116915089907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611e8890339089908790614c62565b60405180910390a3505050506033548114611eb55760405162461bcd60e51b81526004016104e090614f17565b50505050565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611ee557fe5b14611f025760405162461bcd60e51b81526004016104e090614dc7565b611f0a610c20565b611f265760405162461bcd60e51b81526004016104e090614ee7565b611f2e612435565b15611f4b5760405162461bcd60e51b81526004016104e090614de7565b606a546001600160a01b0316611f60816124af565b15611f7d5760405162461bcd60e51b81526004016104e090614d47565b603380546001019081905584611fa55760405162461bcd60e51b81526004016104e090614d37565b846000611fb186610e39565b905081811015611fbf578091505b611fcf818363ffffffff61253416565b9050611fdb8683613357565b8061207f576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b179055600981015460019091015461202490889083906001600160a01b0316612b65565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd4190612075908590614cfa565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb70815906120b19085903390600401614f85565b600060405180830381600087803b1580156120cb57600080fd5b505af11580156120df573d6000803e3d6000fd5b505050506120eb612745565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561214757600080fd5b505afa15801561215b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061217f9190810190613e03565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156121b857600080fd5b505afa1580156121cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f09190810190613e03565b856040518463ffffffff1660e01b815260040161220f93929190614ca5565b600060405180830381600087803b15801561222957600080fd5b505af115801561223d573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf9061229690869033908790614fa0565b60405180910390a350506033548114610b745760405162461bcd60e51b81526004016104e090614f17565b60008060006040516122d290614c3b565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106123b457fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561242957602002820191906000526020600020905b815481526020019060010190808311612415575b50505050509050919050565b600061243f6122c1565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561247757600080fd5b505afa15801561248b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b89190810190613f1d565b60006124b96122c1565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016124e49190614c46565b60206040518083038186803b1580156124fc57600080fd5b505afa158015612510573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e619190810190613f1d565b600061257683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613412565b90505b92915050565b60008261258e57506000612579565b8282028284828161259b57fe5b04146125765760405162461bcd60e51b81526004016104e090614e07565b600061257683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613443565b612603613b93565b6000828152606d602052604081206009015490806126208561347a565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006126566122c1565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561268e57600080fd5b505afa1580156126a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126c69190810190613f59565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b81526004016126f3929190614cc0565b602060405180830381600087803b15801561270d57600080fd5b505af1158015612721573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e619190810190613e03565b600061274f6122c1565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b15801561278757600080fd5b505afa15801561279b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b89190810190613f59565b6127c88261349e565b81906127e75760405162461bcd60e51b81526004016104e09190614d16565b505050565b6127f4610c20565b156128115760405162461bcd60e51b81526004016104e090614f27565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b6020820152612858906001600160a01b0386169063ffffffff6127bf16565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f414444524553530000000060208201526128a6906001600160a01b0385169063ffffffff6127bf16565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f41444452455353000000000060208201526128f4906001600160a01b0384169063ffffffff6127bf16565b6128fd816134ac565b50606980546001600160a01b039485166001600160a01b031991821617909155606a805493851693821693909317909255606b8054919093169116179055565b612947838361355e565b8190611eb55760405162461bcd60e51b81526004016104e09190614d16565b612970828261356f565b61297a33826135c8565b5050565b6000828201838110156125765760405162461bcd60e51b81526004016104e090614d87565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906129d757508115155b949350505050565b61294783836135e5565b6000806129f583610e39565b6000848152606d60205260409020600401549091506129d761271061080e848463ffffffff61257f16565b600080612aba606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a7457600080fd5b505afa158015612a88573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612aac9190810190613e03565b6001600160a01b03166135f7565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b158015612b0c57600080fd5b505afa158015612b20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b449190810190613f3b565b90506000612b5c8361080e878563ffffffff61257f16565b95945050505050565b606654612b78908363ffffffff61253416565b6066556000838152606d6020526040902060090154612b9d908363ffffffff61253416565b6000848152606d60205260409020600901556127e78183613678565b303b1590565b600080612bca6122c1565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612c0257600080fd5b505afa158015612c16573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c3a9190810190613f59565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612c9657600080fd5b505afa158015612caa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612cce9190810190613e03565b6067546040516001600160e01b031960e085901b168152612cfc92916001600160a01b031690600401614c8a565b60206040518083038186803b158015612d1457600080fd5b505afa158015612d28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d4c9190810190613e03565b90506001600160a01b038116612d745760405162461bcd60e51b81526004016104e090614e57565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612db2906b14dd5c1c1b1e551bd119589d60a21b90600401614cfa565b60206040518083038186803b158015612dca57600080fd5b505afa158015612dde573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e029190810190613f3b565b90506000612e0e612745565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612e6a57600080fd5b505afa158015612e7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ea29190810190613e03565b6067546040516001600160e01b031960e085901b168152612ed292916001600160a01b0316908a90600401614ca5565b60206040518083038186803b158015612eea57600080fd5b505afa158015612efe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f229190810190613f3b565b9190911115949350505050565b606854612f4381600163ffffffff61297e16565b60685590565b612f51613bbd565b6000612f5b6122c1565b6001600160a01b031663269012a0612f716122c1565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612fa957600080fd5b505afa158015612fbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612fe19190810190613f59565b6001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b15801561301957600080fd5b505afa15801561302d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130519190810190613f3b565b6040518263ffffffff1660e01b815260040161306d9190614cfa565b60206040518083038186803b15801561308557600080fd5b505afa158015613099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130bd9190810190613f3b565b905060006130d1428363ffffffff61297e16565b90506040518061018001604052808981526020016040518060c001604052808a600001516001600160a01b031681526020018a602001516001600160a01b031681526020018981526020018881526020018781526020018a60a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016001600381111561318257fe5b8152600060209091015298975050505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f815260200190815260200160002060070154604051613206959493929190615073565b60405180910390a4801561325b5784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c836040516132529190614cfa565b60405180910390a35b505050505050565b6000806132b7606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a7457600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561330957600080fd5b505afa15801561331d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133419190810190613f3b565b90506129d78161080e868563ffffffff61257f16565b6000828152606d60205260409020600b01548111156133da576000828152606d60205260409020600b0154819061339590829063ffffffff61253416565b6000848152606d60205260408120600b810191909155600c01549091506133c2908263ffffffff61253416565b6000848152606d60205260409020600c01555061297a565b6000828152606d60205260409020600b01546133fc908263ffffffff61253416565b6000838152606d60205260409020600b01555050565b600081848411156134365760405162461bcd60e51b81526004016104e09190614d16565b50508183035b9392505050565b600081836134645760405162461bcd60e51b81526004016104e09190614d16565b50600083858161347057fe5b0495945050505050565b6000806000613488846129e9565b90508061349482612a20565b9250925050915091565b6001600160a01b0316151590565b6134b4610c20565b156134d15760405162461bcd60e51b81526004016104e090614f27565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f564944454400000000000000602082015261351f906001600160a01b0383169063ffffffff6127bf16565b613531816001600160a01b03166129a3565b61354d5760405162461bcd60e51b81526004016104e090614da7565b613555613695565b61145b816136b3565b6001600160a01b0390811691161490565b606654613582908263ffffffff61297e16565b6066556000828152606d60205260409020600901546135a7908263ffffffff61297e16565b6000928352606d602052604090922060098101929092555042600a90910155565b60675461297a906001600160a01b0316838363ffffffff61372216565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561363357600080fd5b505afa158015613647573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061366b9190810190614081565b60ff16600a0a9392505050565b60675461297a906001600160a01b0316838363ffffffff6139a116565b60006040516136a390614c30565b6040519081900390206001905550565b6136cc6136be6122c1565b6001600160a01b031661349e565b156136d65761145b565b6136e8816001600160a01b03166129a3565b6137045760405162461bcd60e51b81526004016104e090614da7565b600060405161371290614c3b565b6040519081900390208290555050565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e906137539086903090600401614c8a565b60206040518083038186803b15801561376b57600080fd5b505afa15801561377f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506137a39190810190613f3b565b9050818110156137c55760405162461bcd60e51b81526004016104e090614f07565b6040516370a0823160e01b81526000906001600160a01b038616906370a08231906137f4903090600401614c46565b60206040518083038186803b15801561380c57600080fd5b505afa158015613820573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138449190810190613f3b565b90506000856001600160a01b03166323b872dd8630876040518463ffffffff1660e01b815260040161387893929190614ca5565b602060405180830381600087803b15801561389257600080fd5b505af11580156138a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506138ca9190810190613f1d565b9050806138e95760405162461bcd60e51b81526004016104e090614e27565b6040516370a0823160e01b81526000906001600160a01b038816906370a0823190613918903090600401614c46565b60206040518083038186803b15801561393057600080fd5b505afa158015613944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506139689190810190613f3b565b90508461397b828563ffffffff61253416565b146139985760405162461bcd60e51b81526004016104e090614e67565b50505050505050565b6040516370a0823160e01b81526000906001600160a01b038516906370a08231906139d0903090600401614c46565b60206040518083038186803b1580156139e857600080fd5b505afa1580156139fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613a209190810190613f3b565b905081811015613a425760405162461bcd60e51b81526004016104e090614eb7565b60405163a9059cbb60e01b81526000906001600160a01b0386169063a9059cbb90613a739087908790600401614cc0565b602060405180830381600087803b158015613a8d57600080fd5b505af1158015613aa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ac59190810190613f1d565b905080613ae45760405162461bcd60e51b81526004016104e090614ed7565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190613b13903090600401614c46565b60206040518083038186803b158015613b2b57600080fd5b505afa158015613b3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b639190810190613f3b565b905083613b76848363ffffffff61253416565b1461325b5760405162461bcd60e51b81526004016104e090614f37565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b60405180610180016040528060008152602001613bd8613c38565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115613c2b57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b8035612579816151c1565b8051612579816151c1565b60008083601f840112613ca857600080fd5b50813567ffffffffffffffff811115613cc057600080fd5b60208301915083610140820283011115613cd957600080fd5b9250929050565b8051612579816151d5565b8035612579816151de565b8051612579816151de565b8051612579816151e7565b600060e08284031215613d1e57600080fd5b50919050565b600060e08284031215613d3657600080fd5b613d4060e06150bf565b90506000613d4e8484613c80565b8252506020613d5f84848301613c80565b6020830152506040613d7384828501613c80565b6040830152506060613d8784828501613ceb565b6060830152506080613d9b84828501613ceb565b60808301525060a0613daf84828501613ceb565b60a08301525060c0613dc384828501613ceb565b60c08301525092915050565b8035612579816151f0565b8051612579816151f0565b600060208284031215613df757600080fd5b60006129d78484613c80565b600060208284031215613e1557600080fd5b60006129d78484613c8b565b600080600080600060a08688031215613e3957600080fd5b6000613e458888613c80565b9550506020613e5688828901613c80565b9450506040613e6788828901613c80565b9350506060613e7888828901613c80565b9250506080613e8988828901613c80565b9150509295509295909350565b60008060408385031215613ea957600080fd5b6000613eb58585613c80565b9250506020613ec685828601613ceb565b9150509250929050565b600080600060608486031215613ee557600080fd5b6000613ef18686613c80565b9350506020613f0286828701613ceb565b9250506040613f1386828701613ceb565b9150509250925092565b600060208284031215613f2f57600080fd5b60006129d78484613ce0565b600060208284031215613f4d57600080fd5b60006129d78484613cf6565b600060208284031215613f6b57600080fd5b60006129d78484613d01565b6000806000806101208587031215613f8e57600080fd5b6000613f9a8787613d0c565b94505060e085013567ffffffffffffffff811115613fb757600080fd5b613fc387828801613c96565b9350935050610100613fd787828801613ceb565b91505092959194509250565b600060e08284031215613ff557600080fd5b60006129d78484613d24565b60006020828403121561401357600080fd5b60006129d78484613ceb565b6000806040838503121561403257600080fd5b6000613eb58585613ceb565b60008060006060848603121561405357600080fd5b600061405f8686613cf6565b935050602061407086828701613cf6565b9250506040613f1386828701613cf6565b60006020828403121561409357600080fd5b60006129d78484613dda565b60006140ab8383614a93565b50506101400190565b60006140c0838361418f565b505060200190565b6140d18161516b565b82525050565b6140d181615134565b60006140ec83856150fa565b93506140f7826150e6565b8060005b8581101561412d5761410d8284615121565b614117888261409f565b9750614122836150f3565b9250506001016140fb565b509495945050505050565b6000614143826150ef565b61414d81856150fa565b9350614158836150e9565b8060005b8381101561412d57815161417088826140b4565b975061417b836150e9565b92505060010161415c565b6140d18161513f565b6140d1816150e6565b6140d181615144565b6140d181615176565b60006141b5826150ef565b6141bf81856150fa565b93506141cf818560208601615181565b6141d8816151ad565b9093019392505050565b60006141ef601d836150fa565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000614228601c83610e64565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b60006142616015836150fa565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b60006142926016836150fa565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b60006142c46019836150fa565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b60006142fd601e836150fa565b7f544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f0000815260200192915050565b60006143366011836150fa565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000614363601b836150fa565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b600061439c6016836150fa565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b60006143ce601b836150fa565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b60006144076017836150fa565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000614440600f836150fa565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b600061446b6014836150fa565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b600061449b6012836150fa565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b60006144c96018836150fa565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b60006145026021836150fa565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614545601d836150fa565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b600061457e601b836150fa565b7f544f4b454e535f5452414e534645525f46524f4d5f4641494c45440000000000815260200192915050565b60006145b76012836150fa565b711313d05397d511549354d7d156141254915160721b815260200192915050565b60006145e5602e836150fa565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b60006146356018836150fa565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b600061466e601f836150fa565b7f494e565f42414c414e43455f41465445525f5452414e534645525f46524f4d00815260200192915050565b60006146a76013836150fa565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b60006146d6601e836150fa565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061470f6017836150fa565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b60006147486016836150fa565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b600061477a6019836150fa565b7f4e4f545f454e4f5547485f544f4b454e535f42414c414e434500000000000000815260200192915050565b60006147b3601883610e64565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006147ec601a836150fa565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b60006148256016836150fa565b751513d2d15394d7d514905394d1915497d1905253115160521b815260200192915050565b60006148576018836150fa565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614890600c836150fa565b6b1313d05397d393d517d4d15560a21b815260200192915050565b60006148b8601b836150fa565b7f4e4f545f454e4f5547485f544f4b454e535f414c4c4f57414e43450000000000815260200192915050565b60006148f1601f836150fa565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b600061492a601c836150fa565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000614963601a836150fa565b7f494e565f42414c414e43455f41465445525f5452414e53464552000000000000815260200192915050565b805160808301906149a0848261418f565b5060208201516149b3602085018261418f565b5060408201516149c6604085018261418f565b506060820151611eb56060850182614186565b60e082016149e78280615103565b6149f184826140d7565b506149ff6020830183615103565b614a0c60208501826140d7565b50614a1a6040830183615103565b614a2760408501826140d7565b50614a356060830183615112565b614a42606085018261418f565b50614a506080830183615112565b614a5d608085018261418f565b50614a6b60a0830183615112565b614a7860a085018261418f565b50614a8660c0830183615112565b611eb560c085018261418f565b6101408201614aa28280615103565b614aac84826140d7565b50614aba6020830183615103565b614ac760208501826140d7565b50614ad56040830183615112565b614ae2604085018261418f565b50614af06060830183615112565b614afd606085018261418f565b50614b0b6080830183615112565b614b18608085018261418f565b50614b2660a0830183615112565b614b3360a085018261418f565b50614b4160c0830183615121565b611eb560c0850182614bbe565b805160c0830190614b5f84826140d7565b506020820151614b7260208501826140d7565b506040820151614b85604085018261418f565b506060820151614b98606085018261418f565b506080820151614bab608085018261418f565b5060a0820151611eb560a085018261418f565b60808201614bcc8280615112565b614bd6848261418f565b50614be46020830183615125565b614bf16020850182614c27565b50614bff6040830183615112565b614c0c604085018261418f565b50614c1a6060830183615112565b611eb5606085018261418f565b6140d181615165565b60006125798261421b565b6000612579826147a6565b6020810161257982846140d7565b6020810161257982846140c8565b60608101614c7082866140c8565b614c7d602083018561418f565b6129d7604083018461418f565b60408101614c9882856140d7565b61343c60208301846140d7565b60608101614cb382866140d7565b614c7d60208301856140d7565b60408101614cce82856140d7565b61343c602083018461418f565b602080825281016125768184614138565b602081016125798284614186565b60208101612579828461418f565b602081016125798284614198565b6020808252810161257681846141aa565b60208082528101610e61816141e2565b60208082528101610e6181614254565b60208082528101610e6181614285565b60208082528101610e61816142b7565b60208082528101610e61816142f0565b60208082528101610e6181614329565b60208082528101610e6181614356565b60208082528101610e618161438f565b60208082528101610e61816143c1565b60208082528101610e61816143fa565b60208082528101610e6181614433565b60208082528101610e618161445e565b60208082528101610e618161448e565b60208082528101610e61816144bc565b60208082528101610e61816144f5565b60208082528101610e6181614538565b60208082528101610e6181614571565b60208082528101610e61816145aa565b60208082528101610e61816145d8565b60208082528101610e6181614628565b60208082528101610e6181614661565b60208082528101610e618161469a565b60208082528101610e61816146c9565b60208082528101610e6181614702565b60208082528101610e618161473b565b60208082528101610e618161476d565b60208082528101610e61816147df565b60208082528101610e6181614818565b60208082528101610e618161484a565b60208082528101610e6181614883565b60208082528101610e61816148ab565b60208082528101610e61816148e4565b60208082528101610e618161491d565b60208082528101610e6181614956565b60808101612579828461498f565b6101008101614f6482866149d9565b81810360e0830152612b5c8184866140e0565b60408101614c98828561418f565b60408101614f93828561418f565b61343c60208301846140c8565b60608101614fae828661418f565b614c7d60208301856140c8565b6102208101614fca828f61418f565b614fd7602083018e614b4e565b614fe460e083018d61418f565b614ff261010083018c61418f565b61500061012083018b61418f565b61500e61014083018a61418f565b61501c61016083018961418f565b61502a61018083018861418f565b6150386101a083018761418f565b6150466101c08301866140d7565b6150546101e08301856141a1565b615062610200830184614186565b9d9c50505050505050505050505050565b60a08101615081828861418f565b61508e602083018761418f565b61509b604083018661418f565b6150a8606083018561418f565b6150b5608083018461418f565b9695505050505050565b60405181810167ffffffffffffffff811182821017156150de57600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b60006125766020840184613c80565b60006125766020840184613ceb565b5090565b60006125766020840184613dcf565b6000610e6182615159565b151590565b6000610e6182615134565b80610e64816151b7565b6001600160a01b031690565b60ff1690565b6000610e6182615144565b6000610e618261514f565b60005b8381101561519c578181015183820152602001615184565b83811115611eb55750506000910152565b601f01601f191690565b6004811061145b57fe5b6151ca81615134565b811461145b57600080fd5b6151ca8161513f565b6151ca816150e6565b6151ca81615144565b6151ca8161516556fea365627a7a72315820b6a58236eaf9854778a098d04335e9f047fbca8fb9d3be926cd9a6c8c213a8976c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1345:5732:32:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1345:5732:32;;;;;;;",
  "deployedSourceMap": "1345:5732:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8415:2098:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8415:2098:22;;;;;;;;:::i;:::-;;4710:542:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4710:542:32;;;;;;;;:::i;1241:169:29:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;1999:676:32;;;;;;;;;:::i;2960:26:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2960:26:22;;;:::i;:::-;;;;;;;;14744:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14744:151:22;;;;;;;;:::i;:::-;;;;;;;;2783:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2783:30:22;;;:::i;2925:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2925:28:22;;;:::i;15597:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15597:518:22;;;;;;;;:::i;3039:53::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3039:53:22;;;:::i;:::-;;;;;;;;13773:761;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13773:761:22;;;;;;;;:::i;6568:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6568:94:22;;;:::i;6915:1153::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6915:1153:22;;;;;;;;:::i;769:214:131:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:131;;;:::i;15119:184:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15119:184:22;;;;;;;;:::i;:::-;;;;;;;;2993:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2993:39:22;;;:::i;2966:1228:32:-;;;;;;;;;:::i;6138:106:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6138:106:22;;;:::i;2820:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2820:30:22;;;:::i;6359:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6359:94:22;;;:::i;12362:1200::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12362:1200:22;;;;;;;;:::i;10700:1510::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10700:1510:22;;;;;;;;:::i;1259:263:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:263:11;;;:::i;3156:50:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3156:50:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3099;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3099:50:22;;;;;;;;:::i;5877:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5877:132:22;;;;;;;;:::i;:::-;;;;;;;;8415:2098;8512:6;4194:32;4170:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4170:20:22;;;;:56;;;;;;;;;4162:81;;;;-1:-1:-1;;;4162:81:22;;;;;;;;;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;8609:11:22;;-1:-1:-1;;;;;8609:11:22;2718:33:7;8609:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;;;:13;8665::22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;8665:32:22;3484:10;:22;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;8734:13;;;;:5;:13;;;;;:37;;;:53;-1:-1:-1;8734:53:22;8713:117;;;;-1:-1:-1;;;8713:117:22;;;;;;;;;8849:13;;;;:5;:13;;;;;:25;;;8878:3;-1:-1:-1;8849:32:22;8841:63;;;;-1:-1:-1;;;8841:63:22;;;;;;;;;8986:174;9015:10;:8;:10::i;:::-;-1:-1:-1;;;;;9015:34:22;;9075:10;:8;:10::i;:::-;-1:-1:-1;;;;;9075:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9075:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9075:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9075:19:22;;;;;;;;;-1:-1:-1;;;;;9075:43:22;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9075:45:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9075:45:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9075:45:22;;;;;;;;;9015:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9015:127:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9015:127:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9015:127:22;;;;;;;;;8986:3;;:174;:7;:174;:::i;:::-;8936:13;;;;:5;:13;;;;;:30;;;:224;;8915:300;;;;-1:-1:-1;;;8915:300:22;;;;;;;;;9226:13;;;;:5;:13;;;;;:28;;;:43;;;9279:27;;;:42;;;9445:32;;;;9390:36;;;;;9360:188;;2431:8;;9360:149;;2695:5;;9360:149;;9445:32;9360:67;;9257:12;;9360:67;:29;:67;:::i;:::-;:84;:118;:84;:118;:::i;:::-;:135;:149;:135;:149;:::i;:188::-;9331:13;;;;:5;:13;;;;;:26;;:217;9631:53;;:::i;:::-;9687:48;9719:6;9687:18;:48::i;:::-;9631:104;;9755:14;:37;;;9754:38;9746:75;;;;-1:-1:-1;;;9746:75:22;;;;;;;;;9832:13;;;;:5;:13;;;;;9862:3;9832:27;;;:33;9875:20;;:53;;-1:-1:-1;;;;9875:53:22;-1:-1:-1;;;9875:53:22;;;9961:21;9832:13;9961;:21::i;:::-;9938:13;;;;:5;:13;;;;;;;:20;;:44;;-1:-1:-1;;;;;;9938:44:22;-1:-1:-1;;;;;9938:44:22;;;;;;;;10054:11;;:58;;-1:-1:-1;;;10054:58:22;;:11;;;;:22;;:58;;10077:12;;10091:20;;10054:58;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10054:58:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10139:13:22;;;;:5;:13;;;;;;;:20;;;10123:71;;-1:-1:-1;;;10123:71:22;;-1:-1:-1;;;;;10139:20:22;;;;-1:-1:-1;10123:48:22;;:71;;10180:4;;10145:6;;10123:71;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10123:71:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10123:71:22;;;;10205:10;:8;:10::i;:::-;-1:-1:-1;;;;;10205:25:22;;10244:11;;;;;;;;;-1:-1:-1;;;;;10244:11:22;-1:-1:-1;;;;;10244:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10244:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10244:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10244:26:22;;;;;;;;;10284:4;-1:-1:-1;;;;;10284:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10284:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10284:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10284:22:22;;;;;;;;;10320:12;10205:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10205:137:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10450:13:22;;;;:5;:13;;;;;;;:20;;;;;10404:23;;;:32;10358:148;;-1:-1:-1;;;;;10450:20:22;;;;-1:-1:-1;10404:32:22;;;10456:6;;10358:148;;;;10484:12;;10358:148;;;;;;;;;;3544:1;1466::131;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;;2788:1:7;2391;8415:2098:22;;;:::o;4710:542:32:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;4962:68:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4962:38:32;;;:68;:38;:68;:::i;:::-;5041:153;5066:18;5098;5130:25;5169:15;5041:11;:153::i;:::-;5205:15;:40;;-1:-1:-1;;;;;;5205:40:32;-1:-1:-1;;;;;5205:40:32;;;;;;;;;;-1:-1:-1;;;;4710:542:32:o;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;1999:676:32:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:32;;;;;;;;;2184:6;4581:32:22;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;2281:11:32;;-1:-1:-1;;;;;2281:11:32;2718:33:7;2281:11:32;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;2346:13:32;;;;:5;:13;;;;;;;;;:23;;:32;2309:120;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2309:23:32;;;;2346:32;;2309:120;:23;:120;:::i;:::-;2456:1;2447:6;:10;2439:42;;;;-1:-1:-1;;;2439:42:32;;;;;;;;;2575:32;2592:6;2600;2575:16;:32::i;:::-;2651:8;-1:-1:-1;;;;;2623:45:32;2643:6;2623:45;2661:6;2623:45;;;;;;;;;;;;;;;2391:1:7;1707::32;1999:676;;;:::o;2960:26:22:-;;;-1:-1:-1;;;;;2960:26:22;;:::o;14744:151::-;14803:7;14860:13;;;:5;:13;;;;;:27;;;;14829:26;;;;;:59;;;:30;:59;:::i;:::-;14822:66;;14744:151;;;;:::o;2783:30::-;;;;:::o;2925:28::-;;;;:::o;15597:518::-;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;15785:27:22;:14;-1:-1:-1;;;;;15785:25:22;;:27::i;:::-;15777:70;;;;-1:-1:-1;;;15777:70:22;;;;;;;;;15890:11;;15912:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15890:11:22;;;;15912:79;;15890:11;;15945:14;;15912:79;:32;:79;:::i;:::-;16002:11;:28;;-1:-1:-1;;;;;;16002:28:22;-1:-1:-1;;;;;16002:28:22;;;;;;;;;16046:62;;16002:28;;16046:62;;;16065:10;;16046:62;;-1:-1:-1;;16046:62:22;1014:1:11;15597:518:22;:::o;3039:53::-;;;-1:-1:-1;;;;;3039:53:22;;:::o;13773:761::-;13836:4;13869:11;:9;:11::i;:::-;:62;;;-1:-1:-1;13918:11:22;;13896:35;;-1:-1:-1;;;;;13918:11:22;13896:13;:35::i;:::-;13869:132;;;-1:-1:-1;13971:30:22;13947:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;13947:20:22;;;;:54;;;;;;;;;;13869:132;13852:197;;;-1:-1:-1;14033:5:22;14026:12;;13852:197;14059:17;14079:13;;;:5;:13;;;;;:27;;;;14135:32;;;;;14079:27;;14220:3;14194:23;14079:27;14135:32;14194:23;:13;:23;:::i;:::-;:29;14177:46;;14237:9;14233:51;;;14269:4;14262:11;;;;;;;14233:51;14294:21;14318:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;14318:20:22;14352:29;;14348:113;;14420:13;-1:-1:-1;;;;;14404:44:22;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14404:46:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14404:46:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14404:46:22;;;;;;;;;14397:53;;;;;;;;14348:113;14478:26;14497:6;14478:18;:26::i;:::-;:49;;;;13773:761;-1:-1:-1;;;;;;13773:761:22:o;6568:94::-;6635:11;;:20;;;-1:-1:-1;;;6635:20:22;;;;6609:7;;-1:-1:-1;;;;;6635:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;6635:20:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6635:20:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6635:20:22;;;;;;;;;6628:27;;6568:94;:::o;6915:1153::-;7016:6;4581:32;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;7113:11:22;;-1:-1:-1;;;;;7113:11:22;2718:33:7;7113:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;;;-1:-1:-1;7186:13:22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;7186:32:22;7172:10;:46;7164:81;;;;-1:-1:-1;;;7164:81:22;;;;;;;;;7272:1;7263:6;:10;7255:43;;;;-1:-1:-1;;;7255:43:22;;;;;;;;;7396:29;7428:36;7457:6;7428:28;:36::i;:::-;7396:68;;7474:27;7504:41;7523:21;7504:18;:41::i;:::-;7635:24;7662:13;;;:5;:13;;;;;:24;;;7474:71;;-1:-1:-1;7635:24:22;7662:49;;7474:71;7662:49;:28;:49;:::i;:::-;7635:76;;7744:6;7725:16;:25;7721:81;;;-1:-1:-1;7785:6:22;7721:81;7816:20;;7812:177;;7923:55;7941:6;7949:16;7967:10;7923:17;:55::i;:::-;8032:10;-1:-1:-1;;;;;8004:57:22;8024:6;8004:57;8044:16;8004:57;;;;;;;;;;;;;;;1466:1:131;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;769:214;1024:12:132;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:132;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:132;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:132;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:131;959:13;:17;1264:55:132;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:132;;;1264:55;769:214:131;:::o;15119:184:22:-;15209:38;;:::i;:::-;15270:26;15289:6;15270:18;:26::i;2993:39::-;;;-1:-1:-1;;;;;2993:39:22;;:::o;2966:1228:32:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:32;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;3263:16:32;;;;:7;:16;;;3484:10:22;-1:-1:-1;;;;;3484:22:22;;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;5074:679;;;;;;;3310:7:32;5074:679:22;;;5159:23;5185:10;:8;:10::i;:::-;-1:-1:-1;;;;;5185:34:22;;5233:10;:8;:10::i;:::-;-1:-1:-1;;;;;5233:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:19:22;;;;;;;;;-1:-1:-1;;;;;5233:49:22;;:51;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:51:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:51:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:51:22;;;;;;;;;5185:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5185:109:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5185:109:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5185:109:22;;;;;;;;;5159:135;;5331:11;:20;;;5312:15;:39;;5304:81;;;;-1:-1:-1;;;5304:81:22;;;;;;;;;5396:25;5424:10;:8;:10::i;:::-;-1:-1:-1;;;;;5424:31:22;;5469:11;;;;;;;;;-1:-1:-1;;;;;5469:11:22;-1:-1:-1;;;;;5469:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5469:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5469:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5469:26:22;;;;;;;;;5509:11;:18;;;5424:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5424:113:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5424:113:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5424:113:22;;;;;;;;;5396:141;;5556:20;5555:21;5547:59;;;;-1:-1:-1;;;5547:59:22;;;;;;;;;5638:45;5664:11;:18;;;5638:25;:45::i;:::-;5617:118;;;;-1:-1:-1;;;5617:118:22;;;;;;;;;3333:14:32;3350:23;:21;:23::i;:::-;3503:18;;:53;;-1:-1:-1;;;3503:53:32;;3333:40;;-1:-1:-1;3398:20:32;;;;;;-1:-1:-1;;;;;3503:18:32;;;;:33;;:53;;3537:7;;3546:9;;;;3503:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3503:53:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3503:53:32;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3503:53:32;;;;;;;;;3384:172;;-1:-1:-1;3384:172:32;-1:-1:-1;3384:172:32;-1:-1:-1;3583:143:32;3607:6;3583:143;;;;;;;3627:7;3583:143;;;3648:12;3674:15;3703:13;3583:10;:143::i;:::-;3567:13;;;;:5;:13;;;;;;;;;:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3567:159:32;;;-1:-1:-1;;;;;3567:159:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:159;;;-1:-1:-1;;;;3567:159:32;;;;-1:-1:-1;;;3567:159:32;;;;;;;;;;;;;;-1:-1:-1;3567:159:32;;;;;;;;;;;;;;;-1:-1:-1;;;3567:159:32;-1:-1:-1;;;;3567:159:32;;;;;;;;;3741:20;;3737:165;;3849:42;3866:6;3874:16;3849;:42::i;:::-;3912:13;:31;3926:16;;;;:7;:16;;;-1:-1:-1;;;;;3912:31:32;;;;;;;;;;;;;-1:-1:-1;3912:31:32;;;27:10:-1;;39:1;23:18;;45:23;;3912:44:32;;;;;;;;;;3967:220;3949:6;3967:220;;;;;;;4058:7;3967:220;;;4079:12;4105:15;4134:13;4161:16;3967:57;:220::i;:::-;5745:1:22;;;;3544;;;2391::7;2966:1228:32;;;;:::o;6138:106:22:-;6211:11;;:26;;;-1:-1:-1;;;6211:26:22;;;;6185:7;;-1:-1:-1;;;;;6211:11:22;;:24;;:26;;;;;;;;;;;;;;:11;:26;;;5:2:-1;;;;30:1;27;20:12;2820:30:22;;;-1:-1:-1;;;;;2820:30:22;;:::o;6359:94::-;6426:11;;:20;;;-1:-1:-1;;;6426:20:22;;;;6400:7;;-1:-1:-1;;;;;6426:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;12362:1200:22;12437:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;12534:11:22;;-1:-1:-1;;;;;12534:11:22;2718:33:7;12534:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;12593:24:22;12610:6;12593:16;:24::i;:::-;12585:60;;;;-1:-1:-1;;;12585:60:22;;;;;;;;;12656:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;12656:53:22;-1:-1:-1;;;12656:53:22;-1:-1:-1;;;;12719:31:22;-1:-1:-1;;;12719:31:22;;;12782:24;;;;12845:30;12782:24;12845:18;:30::i;:::-;12816:59;;12942:49;12960:6;12968:10;12980;12942:17;:49::i;:::-;13002:25;13030:10;:8;:10::i;:::-;-1:-1:-1;;;;;13030:34:22;;13078:10;:8;:10::i;:::-;-1:-1:-1;;;;;13078:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13078:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13078:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13078:19:22;;;;;;;;;-1:-1:-1;;;;;13078:47:22;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13078:49:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13078:49:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13078:49:22;;;;;;;;;13030:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13030:107:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13030:107:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13030:107:22;;;;;;;;;13002:135;-1:-1:-1;13147:20:22;13170:81;2695:5;13170:41;:18;13002:135;13170:41;:22;:41;:::i;:81::-;13319:11;;:56;;-1:-1:-1;;;13319:56:22;;13147:104;;-1:-1:-1;;;;;;13319:11:22;;:30;;:56;;13147:104;;13364:10;;13319:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13319:56:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;13439:13:22;;;;:5;:13;;;;;;;:23;;:32;13391:164;;-1:-1:-1;;;;;13439:32:22;;;;-1:-1:-1;13445:6:22;;13391:164;;;;13485:10;;13509;;13533:12;;13391:164;;;;;;;;;;1466:1:131;;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;;2788:1:7;2391;12362:1200:22;;:::o;10700:1510::-;10783:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;10880:11:22;;-1:-1:-1;;;;;10880:11:22;2718:33:7;10880:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;10939:10:22;10931:44;;;;-1:-1:-1;;;10931:44:22;;;;;;;;;11049:6;11033:13;11085:20;11098:6;11085:12;:20::i;:::-;11065:40;;11131:5;11119:9;:17;11115:65;;;11160:9;11152:17;;11115:65;11248:20;:9;11262:5;11248:20;:13;:20;:::i;:::-;11236:32;;11278:23;11287:6;11295:5;11278:8;:23::i;:::-;11389:14;11385:416;;11419:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;11419:53:22;-1:-1:-1;;;11419:53:22;;;11514:24;;;;-1:-1:-1;11596:23:22;;;:32;11552:77;;11419:13;;11514:24;;-1:-1:-1;;;;;11596:32:22;11552:17;:77::i;:::-;11710:13;;;;:5;:13;;;;;;;:23;;:32;11649:141;;-1:-1:-1;;;;;11710:32:22;;;;11716:6;;11649:141;;;;11760:16;;11649:141;;;;;;;;;;11385:416;;11855:11;;:36;;-1:-1:-1;;;11855:36:22;;-1:-1:-1;;;;;11855:11:22;;;;:17;;:36;;11873:5;;11880:10;;11855:36;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11855:36:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11855:36:22;;;;11902:10;:8;:10::i;:::-;-1:-1:-1;;;;;11902:28:22;;11944:11;;;;;;;;;-1:-1:-1;;;;;11944:11:22;-1:-1:-1;;;;;11944:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11944:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11944:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11944:26:22;;;;;;;;;11984:4;-1:-1:-1;;;;;11984:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11984:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11984:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11984:22:22;;;;;;;;;12020:5;11902:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11902:133:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;12095:13:22;;;;:5;:13;;;;;;;:23;;:32;12051:152;;-1:-1:-1;;;;;12095:32:22;;;;-1:-1:-1;12101:6:22;;12051:152;;;;12141:5;;12160:10;;12184:9;;12051:152;;;;;;;;;;1466:1:131;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;1259:263:11;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;3156:50:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3156:50:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3156:50:22;;;;;-1:-1:-1;;;3156:50:22;;;;:::o;3099:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5877:132::-;-1:-1:-1;;;;;5979:23:22;;;;;;:13;:23;;;;;;;;;5972:30;;;;;;;;;;;;;;;;;5944:16;;5972:30;;;5979:23;5972:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:132;;;:::o;4524:95:7:-;4568:4;4591:10;:8;:10::i;:::-;-1:-1:-1;;;;;4591:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4591:21:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4591:21:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4591:21:7;;;;;;;;4237:138;4304:4;4327:10;:8;:10::i;:::-;-1:-1:-1;;;;;4327:28:7;;4356:11;4327:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4327:41:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4327:41:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4327:41:7;;;;;;;;1274:134:122;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:122;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:122;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;16768:624:22:-;16859:38;;:::i;:::-;16913:18;16934:13;;;:5;:13;;;;;:24;;;;16913:18;17024:54;16940:6;17024:24;:54::i;:::-;17107:278;;;;;;;;;;;;;;;;;;;;;;;17339:31;;;;17107:278;;;;-1:-1:-1;17107:278:22;;16768:624;-1:-1:-1;;;16768:624:22:o;26537:152::-;26594:7;26620:10;:8;:10::i;:::-;-1:-1:-1;;;;;26620:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26620:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26620:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26620:26:22;;;;;;;;;-1:-1:-1;;;;;26620:39:22;;26668:4;26675:6;26620:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26620:62:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26620:62:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26620:62:22;;;;;;;;4625:115:7;4668:21;4708:10;:8;:10::i;:::-;-1:-1:-1;;;;;4708:23:7;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4708:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4708:25:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4708:25:7;;;;;;;;1583:127:101;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:101;;;;;;;;;;;1583:127;;:::o;18557:669:22:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;18770:60:22;;;;;;;;;;;;-1:-1:-1;;;18770:60:22;;;;;;-1:-1:-1;;;;;18770:34:22;;;:60;:34;:60;:::i;:::-;18840:66;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18840:34:22;;;:66;:34;:66;:::i;:::-;18916:72;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18916:41:22;;;:72;:41;:72;:::i;:::-;18999:28;19011:15;18999:11;:28::i;:::-;-1:-1:-1;19038:11:22;:32;;-1:-1:-1;;;;;19038:32:22;;;-1:-1:-1;;;;;;19038:32:22;;;;;;;19080:11;:54;;;;;;;;;;;;;;;19144:18;:75;;;;;;;;;;;18557:669::o;2303:177:101:-;2441:22;2451:4;2457:5;2441:9;:22::i;:::-;2465:7;2433:40;;;;;-1:-1:-1;;;2433:40:101;;;;;;;;;6000:295:32;6136:38;6159:6;6167;6136:22;:38::i;:::-;6240:48;6269:10;6281:6;6240:28;:48::i;:::-;6000:295;;:::o;834:176:122:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:122;;;;;;;;686:610:129;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:129;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:129:o;2749:183:101:-;2890:25;2903:4;2909:5;2890:12;:25::i;20582:313:22:-;20683:7;20706:18;20727:20;20740:6;20727:12;:20::i;:::-;20757:23;20783:13;;;:5;:13;;;;;:39;;;20706:41;;-1:-1:-1;20839:49:22;2695:5;20839:31;20706:41;20783:39;20839:31;:14;:31;:::i;21873:637::-;21945:7;22134:26;22163:71;22177:11;;;;;;;;;-1:-1:-1;;;;;22177:11:22;-1:-1:-1;;;;;22177:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22177:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22177:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22177:26:22;;;;;;;;;-1:-1:-1;;;;;22163:69:22;;:71::i;:::-;22134:100;;22244:31;22323:11;;;;;;;;;-1:-1:-1;;;;;22323:11:22;-1:-1:-1;;;;;22299:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22299:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22299:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22299:54:22;;;;;;;;;22244:119;-1:-1:-1;22373:16:22;22392:86;22450:18;22392:40;:11;22244:119;22392:40;:15;:40;:::i;:86::-;22373:105;21873:637;-1:-1:-1;;;;;21873:637:22:o;5484:314:32:-;5637:15;;:27;;5657:6;5637:27;:19;:27;:::i;:::-;5619:15;:45;5701:13;;;;:5;:13;;;;;:24;;;:36;;5730:6;5701:36;:28;:36;:::i;:::-;5674:13;;;;:5;:13;;;;;:24;;:63;5748:43;5773:9;5784:6;5748:24;:43::i;1409:498:132:-;1820:4;1864:17;1895:7;1409:498;:::o;25566:759:22:-;25671:4;25691:27;25721:10;:8;:10::i;:::-;-1:-1:-1;;;;;25721:22:22;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25721:24:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25721:24:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25721:24:22;;;;;;;;;-1:-1:-1;;;;;25721:40:22;;25775:11;;;;;;;;;-1:-1:-1;;;;;25775:11:22;-1:-1:-1;;;;;25775:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25775:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25775:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25775:26:22;;;;;;;;;25815:15;;25721:119;;-1:-1:-1;;;;;;25721:119:22;;;;;;;;;;-1:-1:-1;;;;;25815:15:22;;25721:119;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25721:119:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25721:119:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25721:119:22;;;;;;;;;25691:149;-1:-1:-1;;;;;;25858:35:22;;25850:72;;;;-1:-1:-1;;;25850:72:22;;;;;;;;;25966:102;;-1:-1:-1;;;25966:102:22;;25932:31;;-1:-1:-1;;;;;25966:74:22;;;;;:102;;-1:-1:-1;;;26041:26:22;25966:102;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25966:102:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25966:102:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25966:102:22;;;;;;;;;25932:136;;26078:33;26114:10;:8;:10::i;:::-;-1:-1:-1;;;;;26114:29:22;;26157:11;;;;;;;;;-1:-1:-1;;;;;26157:11:22;-1:-1:-1;;;;;26157:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26157:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26157:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26157:26:22;;;;;;;;;26197:15;;26114:135;;-1:-1:-1;;;;;;26114:135:22;;;;;;;;;;-1:-1:-1;;;;;26197:15:22;;26226:13;;26114:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26114:135:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26114:135:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26114:135:22;;;;;;;;;26266:52;;;;;;25566:759;-1:-1:-1;;;;25566:759:22:o;22663:158::-;22755:13;;22794:20;22755:13;22812:1;22794:20;:17;:20;:::i;:::-;22778:13;:36;22663:158;:::o;23322:1282::-;23538:24;;:::i;:::-;23574:23;23600:10;:8;:10::i;:::-;-1:-1:-1;;;;;23600:34:22;;23648:10;:8;:10::i;:::-;-1:-1:-1;;;;;23648:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23648:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23648:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23648:19:22;;;;;;;;;-1:-1:-1;;;;;23648:45:22;;:47;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23648:47:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23648:47:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23648:47:22;;;;;;;;;23600:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23600:105:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23600:105:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23600:105:22;;;;;;;;;23574:131;-1:-1:-1;23715:19:22;23737:24;:3;23574:131;23737:24;:7;:24;:::i;:::-;23715:46;;23790:807;;;;;;;;23830:6;23790:807;;;;23865:340;;;;;;;;23920:7;:16;;;-1:-1:-1;;;;;23865:340:22;;;;;23969:7;:17;;;-1:-1:-1;;;;;23865:340:22;;;;;24022:12;23865:340;;;;24073:15;23865:340;;;;24125:13;23865:340;;;;24170:7;:16;;;23865:340;;;23790:807;;;;24236:11;23790:807;;;;24280:1;23790:807;;;;24311:1;23790:807;;;;24348:1;23790:807;;;;24382:1;23790:807;;;;24415:1;23790:807;;;;24450:1;23790:807;;;;24485:3;-1:-1:-1;;;;;23790:807:22;;;;;24515:32;23790:807;;;;;;;;;;24577:5;23790:807;;;;;23771:826;23322:1282;-1:-1:-1;;;;;;;;23322:1282:22:o;24610:684::-;24983:7;:17;;;-1:-1:-1;;;;;24907:254:22;24953:7;:16;;;-1:-1:-1;;;;;24907:254:22;24933:6;24907:254;25014:12;25040:15;25069:13;25096:7;:16;;;25126:5;:13;25132:6;25126:13;;;;;;;;;;;:25;;;24907:254;;;;;;;;;;;;;;;;;;;25175:19;;25171:117;;25243:7;:16;;;-1:-1:-1;;;;;25215:62:22;25235:6;25215:62;25261:15;25215:62;;;;;;;;;;;;;;;25171:117;24610:684;;;;;;:::o;21131:485::-;21201:7;21301:26;21330:71;21344:11;;;;;;;;;-1:-1:-1;;;;;21344:11:22;-1:-1:-1;;;;;21344:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;21330:71:22;21301:100;;21411:31;21490:11;;;;;;;;;-1:-1:-1;;;;;21490:11:22;-1:-1:-1;;;;;21466:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21466:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21466:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21466:54:22;;;;;;;;;21411:119;-1:-1:-1;21547:62:22;21411:119;21547:33;:9;21561:18;21547:33;:13;:33;:::i;19906:461::-;19986:13;;;;:5;:13;;;;;:27;;;19978:35;;19974:387;;;20029:17;20094:13;;;:5;:13;;;;;:27;;;20049:5;;20080:42;;20049:5;;20080:42;:13;:42;:::i;:::-;20166:1;20136:13;;;:5;:13;;;;;:27;;;:31;;;;20210:26;;;20068:54;;-1:-1:-1;20210:41:22;;20068:54;20210:41;:30;:41;:::i;:::-;20181:13;;;;:5;:13;;;;;:26;;:70;-1:-1:-1;19974:387:22;;;20312:13;;;;:5;:13;;;;;:27;;;:38;;20344:5;20312:38;:31;:38;:::i;:::-;20282:13;;;;:5;:13;;;;;:27;;:68;19906:461;;:::o;1732:187:122:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:122;;;;;;;;;;-1:-1:-1;;1888:5:122;;;1732:187;;;;;;:::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:122;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:122:o;17674:460:22:-;17771:29;17802:32;17902:29;17934:36;17963:6;17934:28;:36::i;:::-;17902:68;;18062:21;18085:41;18104:21;18085:18;:41::i;:::-;18054:73;;;;;17674:460;;;:::o;1288:108:101:-;-1:-1:-1;;;;;1368:21:101;;;;1288:108::o;3702:292:7:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;3786:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3786:31:7;;;:60;:31;:60;:::i;:::-;3864:28;:15;-1:-1:-1;;;;;3864:26:7;;:28::i;:::-;3856:68;;;;-1:-1:-1;;;3856:68:7;;;;;;;;;3935:13;:11;:13::i;:::-;3958:29;3971:15;3958:12;:29::i;681:114:101:-;-1:-1:-1;;;;;775:13:101;;;;;;;681:114::o;19428:248:22:-;19523:15;;:27;;19543:6;19523:27;:19;:27;:::i;:::-;19505:15;:45;19587:13;;;;:5;:13;;;;;:24;;;:36;;19616:6;19587:36;:28;:36;:::i;:::-;19560:13;;;;:5;:13;;;;;;:24;;;:63;;;;-1:-1:-1;19666:3:22;19633:30;;;;:36;19428:248::o;6919:156:32:-;7020:15;;7006:62;;-1:-1:-1;;;;;7020:15:32;7055:4;7061:6;7006:62;:48;:62;:::i;1018:117:101:-;-1:-1:-1;;;;;1115:13:101;;;;;;;;1018:117::o;710:155:103:-;777:7;796:14;813:4;-1:-1:-1;;;;;813:13:103;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:15:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:15:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;813:15:103;;;;;;;;;845:13;;514:2;845:13;;710:155;-1:-1:-1;;;710:155:103:o;6524:158:32:-;6626:15;;6612:63;;-1:-1:-1;;;;;6626:15:32;6657:9;6668:6;6612:63;:44;:63;:::i;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;:::o;2161:679:103:-;2314:35;;-1:-1:-1;;;2314:35:103;;2287:24;;-1:-1:-1;;;;;2314:14:103;;;;;:35;;2329:4;;2343;;2314:35;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2314:35:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2314:35:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2314:35:103;;;;;;;;;2287:62;;2387:6;2367:16;:26;;2359:66;;;;-1:-1:-1;;;2359:66:103;;;;;;;;;2461:29;;-1:-1:-1;;;2461:29:103;;2436:22;;-1:-1:-1;;;;;2461:14:103;;;;;:29;;2484:4;;2461:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2461:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2461:29:103;;;;;;;;;2436:54;;2500:23;2526:4;-1:-1:-1;;;;;2526:17:103;;2544:4;2558;2565:6;2526:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2526:46:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2526:46:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2526:46:103;;;;;;;;;2500:72;;2590:18;2582:58;;;;-1:-1:-1;;;2582:58:103;;;;;;;;;2674:29;;-1:-1:-1;;;2674:29:103;;2651:20;;-1:-1:-1;;;;;2674:14:103;;;;;:29;;2697:4;;2674:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2674:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2674:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2674:29:103;;;;;;;;;2651:52;-1:-1:-1;2770:6:103;2734:32;2651:52;2751:14;2734:32;:16;:32;:::i;:::-;:42;2713:120;;;;-1:-1:-1;;;2713:120:103;;;;;;;;;2161:679;;;;;;;:::o;1202:539::-;1354:29;;-1:-1:-1;;;1354:29:103;;1329:22;;-1:-1:-1;;;;;1354:14:103;;;;;:29;;1377:4;;1354:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1354:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1354:29:103;;;;;;;;;1329:54;;1419:6;1401:14;:24;;1393:62;;;;-1:-1:-1;;;1393:62:103;;;;;;;;;1488:32;;-1:-1:-1;;;1488:32:103;;1466:19;;-1:-1:-1;;;;;1488:13:103;;;;;:32;;1502:9;;1513:6;;1488:32;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1488:32:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1488:32:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1488:32:103;;;;;;;;;1466:54;;1538:14;1530:49;;;;-1:-1:-1;;;1530:49:103;;;;;;;;;1613:29;;-1:-1:-1;;;1613:29:103;;1590:20;;-1:-1:-1;;;;;1613:14:103;;;;;:29;;1636:4;;1613:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1613:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1613:29:103;;;;;;;;;1590:52;-1:-1:-1;1697:6:103;1661:32;:14;1590:52;1661:32;:18;:32;:::i;:::-;:42;1653:81;;;;-1:-1:-1;;;1653:81:103;;;;;;;;1345:5732:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1345:5732:32;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1345:5732:32;;;;;;-1:-1:-1;;;;;1345:5732:32;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;479:383;;;638:3;631:4;623:6;619:17;615:27;605:2;;656:1;653;646:12;605:2;-1:-1;676:20;;716:18;705:30;;702:2;;;748:1;745;738:12;702:2;782:4;774:6;770:17;758:29;;835:3;825:6;817;813:19;803:8;799:34;796:43;793:2;;;852:1;849;842:12;793:2;598:264;;;;;;870:128;945:13;;963:30;945:13;963:30;;1005:130;1072:20;;1097:33;1072:20;1097:33;;1142:134;1220:13;;1238:33;1220:13;1238:33;;1283:196;1392:13;;1410:64;1392:13;1410:64;;2242:164;;2358:3;2349:6;2344:3;2340:16;2336:26;2333:2;;;2375:1;2372;2365:12;2333:2;-1:-1;2394:6;2326:80;-1:-1;2326:80;2451:1245;;2570:4;2558:9;2553:3;2549:19;2545:30;2542:2;;;2588:1;2585;2578:12;2542:2;2606:20;2621:4;2606:20;;;2597:29;-1:-1;2680:1;2712:57;2765:3;2745:9;2712:57;;;2687:83;;-1:-1;2836:2;2869:49;2914:3;2890:22;;;2869:49;;;2862:4;2855:5;2851:16;2844:75;2791:139;2992:2;3025:49;3070:3;3061:6;3050:9;3046:22;3025:49;;;3018:4;3011:5;3007:16;3000:75;2940:146;3144:2;3177:49;3222:3;3213:6;3202:9;3198:22;3177:49;;;3170:4;3163:5;3159:16;3152:75;3096:142;3290:3;3324:49;3369:3;3360:6;3349:9;3345:22;3324:49;;;3317:4;3310:5;3306:16;3299:75;3248:137;3439:3;3473:49;3518:3;3509:6;3498:9;3494:22;3473:49;;;3466:4;3459:5;3455:16;3448:75;3395:139;3591:3;3625:49;3670:3;3661:6;3650:9;3646:22;3625:49;;;3618:4;3611:5;3607:16;3600:75;3544:142;2536:1160;;;;;3981:126;4046:20;;4071:31;4046:20;4071:31;;4114:130;4190:13;;4208:31;4190:13;4208:31;;4251:241;;4355:2;4343:9;4334:7;4330:23;4326:32;4323:2;;;4371:1;4368;4361:12;4323:2;4406:1;4423:53;4468:7;4448:9;4423:53;;4499:263;;4614:2;4602:9;4593:7;4589:23;4585:32;4582:2;;;4630:1;4627;4620:12;4582:2;4665:1;4682:64;4738:7;4718:9;4682:64;;5033:743;;;;;;5205:3;5193:9;5184:7;5180:23;5176:33;5173:2;;;5222:1;5219;5212:12;5173:2;5257:1;5274:53;5319:7;5299:9;5274:53;;;5264:63;;5236:97;5364:2;5382:53;5427:7;5418:6;5407:9;5403:22;5382:53;;;5372:63;;5343:98;5472:2;5490:53;5535:7;5526:6;5515:9;5511:22;5490:53;;;5480:63;;5451:98;5580:2;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;;;5588:63;;5559:98;5688:3;5707:53;5752:7;5743:6;5732:9;5728:22;5707:53;;;5697:63;;5667:99;5167:609;;;;;;;;;5783:366;;;5904:2;5892:9;5883:7;5879:23;5875:32;5872:2;;;5920:1;5917;5910:12;5872:2;5955:1;5972:53;6017:7;5997:9;5972:53;;;5962:63;;5934:97;6062:2;6080:53;6125:7;6116:6;6105:9;6101:22;6080:53;;;6070:63;;6041:98;5866:283;;;;;;6156:491;;;;6294:2;6282:9;6273:7;6269:23;6265:32;6262:2;;;6310:1;6307;6300:12;6262:2;6345:1;6362:53;6407:7;6387:9;6362:53;;;6352:63;;6324:97;6452:2;6470:53;6515:7;6506:6;6495:9;6491:22;6470:53;;;6460:63;;6431:98;6560:2;6578:53;6623:7;6614:6;6603:9;6599:22;6578:53;;;6568:63;;6539:98;6256:391;;;;;;6654:257;;6766:2;6754:9;6745:7;6741:23;6737:32;6734:2;;;6782:1;6779;6772:12;6734:2;6817:1;6834:61;6887:7;6867:9;6834:61;;6918:263;;7033:2;7021:9;7012:7;7008:23;7004:32;7001:2;;;7049:1;7046;7039:12;7001:2;7084:1;7101:64;7157:7;7137:9;7101:64;;7188:325;;7334:2;7322:9;7313:7;7309:23;7305:32;7302:2;;;7350:1;7347;7340:12;7302:2;7385:1;7402:95;7489:7;7469:9;7402:95;;8752:772;;;;;8986:3;8974:9;8965:7;8961:23;8957:33;8954:2;;;9003:1;9000;8993:12;8954:2;9038:1;9055:85;9132:7;9112:9;9055:85;;;9045:95;;9017:129;9205:3;9194:9;9190:19;9177:33;9230:18;9222:6;9219:30;9216:2;;;9262:1;9259;9252:12;9216:2;9290:109;9391:7;9382:6;9371:9;9367:22;9290:109;;;9280:119;;;;9156:249;9436:3;9455:53;9500:7;9491:6;9480:9;9476:22;9455:53;;;9445:63;;9415:99;8948:576;;;;;;;;9531:302;;9665:3;9653:9;9644:7;9640:23;9636:33;9633:2;;;9682:1;9679;9672:12;9633:2;9717:1;9734:83;9809:7;9789:9;9734:83;;9840:241;;9944:2;9932:9;9923:7;9919:23;9915:32;9912:2;;;9960:1;9957;9950:12;9912:2;9995:1;10012:53;10057:7;10037:9;10012:53;;10358:366;;;10479:2;10467:9;10458:7;10454:23;10450:32;10447:2;;;10495:1;10492;10485:12;10447:2;10530:1;10547:53;10592:7;10572:9;10547:53;;10731:535;;;;10880:2;10868:9;10859:7;10855:23;10851:32;10848:2;;;10896:1;10893;10886:12;10848:2;10931:1;10948:64;11004:7;10984:9;10948:64;;;10938:74;;10910:108;11049:2;11067:64;11123:7;11114:6;11103:9;11099:22;11067:64;;;11057:74;;11028:109;11168:2;11186:64;11242:7;11233:6;11222:9;11218:22;11186:64;;11273:259;;11386:2;11374:9;11365:7;11361:23;11357:32;11354:2;;;11402:1;11399;11392:12;11354:2;11437:1;11454:62;11508:7;11488:9;11454:62;;11540:291;;11683:106;11785:3;11777:6;11683:106;;;-1:-1;;11818:6;11809:16;;11676:155;11840:173;;11927:46;11969:3;11961:6;11927:46;;;-1:-1;;12002:4;11993:14;;11920:93;12021:142;12112:45;12151:5;12112:45;;;12107:3;12100:58;12094:69;;;12170:127;12259:32;12285:5;12259:32;;12615:891;;12825:113;12931:6;12926:3;12825:113;;;12818:120;;12959:87;13040:5;12959:87;;;13066:7;13094:1;13079:405;13104:6;13101:1;13098:13;13079:405;;;13165:71;13229:6;13220:7;13165:71;;;13250:119;13365:3;13350:13;13250:119;;;13243:126;;13386:91;13470:6;13386:91;;;13376:101;-1:-1;;13126:1;13119:9;13079:405;;;-1:-1;13497:3;;12805:701;-1:-1;;;;;12805:701;13545:690;;13690:54;13738:5;13690:54;;;13757:86;13836:6;13831:3;13757:86;;;13750:93;;13864:56;13914:5;13864:56;;;13940:7;13968:1;13953:260;13978:6;13975:1;13972:13;13953:260;;;14045:6;14039:13;14066:63;14125:3;14110:13;14066:63;;;14059:70;;14146:60;14199:6;14146:60;;;14136:70;-1:-1;;14000:1;13993:9;13953:260;;14243:94;14310:21;14325:5;14310:21;;14455:103;14528:24;14546:5;14528:24;;14685:186;14798:67;14859:5;14798:67;;15272:154;15369:51;15414:5;15369:51;;15433:347;;15545:39;15578:5;15545:39;;;15596:71;15660:6;15655:3;15596:71;;;15589:78;;15672:52;15717:6;15712:3;15705:4;15698:5;15694:16;15672:52;;;15745:29;15767:6;15745:29;;;15736:39;;;;15525:255;-1:-1;;;15525:255;15788:329;;15948:67;16012:2;16007:3;15948:67;;;16048:31;16028:52;;16108:2;16099:12;;15934:183;-1:-1;;15934:183;16126:364;;16304:85;16386:2;16381:3;16304:85;;;16422:30;16402:51;;16481:2;16472:12;;16290:200;-1:-1;;16290:200;16499:321;;16659:67;16723:2;16718:3;16659:67;;;-1:-1;;;16739:44;;16811:2;16802:12;;16645:175;-1:-1;;16645:175;16829:322;;16989:67;17053:2;17048:3;16989:67;;;-1:-1;;;17069:45;;17142:2;17133:12;;16975:176;-1:-1;;16975:176;17160:325;;17320:67;17384:2;17379:3;17320:67;;;17420:27;17400:48;;17476:2;17467:12;;17306:179;-1:-1;;17306:179;17494:330;;17654:67;17718:2;17713:3;17654:67;;;17754:32;17734:53;;17815:2;17806:12;;17640:184;-1:-1;;17640:184;17833:317;;17993:67;18057:2;18052:3;17993:67;;;-1:-1;;;18073:40;;18141:2;18132:12;;17979:171;-1:-1;;17979:171;18159:327;;18319:67;18383:2;18378:3;18319:67;;;18419:29;18399:50;;18477:2;18468:12;;18305:181;-1:-1;;18305:181;18495:322;;18655:67;18719:2;18714:3;18655:67;;;-1:-1;;;18735:45;;18808:2;18799:12;;18641:176;-1:-1;;18641:176;18826:327;;18986:67;19050:2;19045:3;18986:67;;;19086:29;19066:50;;19144:2;19135:12;;18972:181;-1:-1;;18972:181;19162:323;;19322:67;19386:2;19381:3;19322:67;;;19422:25;19402:46;;19476:2;19467:12;;19308:177;-1:-1;;19308:177;19494:315;;19654:67;19718:2;19713:3;19654:67;;;-1:-1;;;19734:38;;19800:2;19791:12;;19640:169;-1:-1;;19640:169;19818:320;;19978:67;20042:2;20037:3;19978:67;;;-1:-1;;;20058:43;;20129:2;20120:12;;19964:174;-1:-1;;19964:174;20147:318;;20307:67;20371:2;20366:3;20307:67;;;-1:-1;;;20387:41;;20456:2;20447:12;;20293:172;-1:-1;;20293:172;20474:324;;20634:67;20698:2;20693:3;20634:67;;;20734:26;20714:47;;20789:2;20780:12;;20620:178;-1:-1;;20620:178;20807:370;;20967:67;21031:2;21026:3;20967:67;;;21067:34;21047:55;;-1:-1;;;21131:2;21122:12;;21115:25;21168:2;21159:12;;20953:224;-1:-1;;20953:224;21186:329;;21346:67;21410:2;21405:3;21346:67;;;21446:31;21426:52;;21506:2;21497:12;;21332:183;-1:-1;;21332:183;21524:327;;21684:67;21748:2;21743:3;21684:67;;;21784:29;21764:50;;21842:2;21833:12;;21670:181;-1:-1;;21670:181;21860:318;;22020:67;22084:2;22079:3;22020:67;;;-1:-1;;;22100:41;;22169:2;22160:12;;22006:172;-1:-1;;22006:172;22187:383;;22347:67;22411:2;22406:3;22347:67;;;22447:34;22427:55;;-1:-1;;;22511:2;22502:12;;22495:38;22561:2;22552:12;;22333:237;-1:-1;;22333:237;22579:324;;22739:67;22803:2;22798:3;22739:67;;;22839:26;22819:47;;22894:2;22885:12;;22725:178;-1:-1;;22725:178;22912:331;;23072:67;23136:2;23131:3;23072:67;;;23172:33;23152:54;;23234:2;23225:12;;23058:185;-1:-1;;23058:185;23252:319;;23412:67;23476:2;23471:3;23412:67;;;-1:-1;;;23492:42;;23562:2;23553:12;;23398:173;-1:-1;;23398:173;23580:330;;23740:67;23804:2;23799:3;23740:67;;;23840:32;23820:53;;23901:2;23892:12;;23726:184;-1:-1;;23726:184;23919:323;;24079:67;24143:2;24138:3;24079:67;;;24179:25;24159:46;;24233:2;24224:12;;24065:177;-1:-1;;24065:177;24251:322;;24411:67;24475:2;24470:3;24411:67;;;-1:-1;;;24491:45;;24564:2;24555:12;;24397:176;-1:-1;;24397:176;24582:325;;24742:67;24806:2;24801:3;24742:67;;;24842:27;24822:48;;24898:2;24889:12;;24728:179;-1:-1;;24728:179;24916:360;;25094:85;25176:2;25171:3;25094:85;;;25212:26;25192:47;;25267:2;25258:12;;25080:196;-1:-1;;25080:196;25285:326;;25445:67;25509:2;25504:3;25445:67;;;25545:28;25525:49;;25602:2;25593:12;;25431:180;-1:-1;;25431:180;25620:322;;25780:67;25844:2;25839:3;25780:67;;;-1:-1;;;25860:45;;25933:2;25924:12;;25766:176;-1:-1;;25766:176;25951:324;;26111:67;26175:2;26170:3;26111:67;;;26211:26;26191:47;;26266:2;26257:12;;26097:178;-1:-1;;26097:178;26284:312;;26444:67;26508:2;26503:3;26444:67;;;-1:-1;;;26524:35;;26587:2;26578:12;;26430:166;-1:-1;;26430:166;26605:327;;26765:67;26829:2;26824:3;26765:67;;;26865:29;26845:50;;26923:2;26914:12;;26751:181;-1:-1;;26751:181;26941:331;;27101:67;27165:2;27160:3;27101:67;;;27201:33;27181:54;;27263:2;27254:12;;27087:185;-1:-1;;27087:185;27281:328;;27441:67;27505:2;27500:3;27441:67;;;27541:30;27521:51;;27600:2;27591:12;;27427:182;-1:-1;;27427:182;27618:326;;27778:67;27842:2;27837:3;27778:67;;;27878:28;27858:49;;27935:2;27926:12;;27764:180;-1:-1;;27764:180;28039:863;28278:23;;28206:4;28197:14;;;28307:63;28201:3;28278:23;28307:63;;;28226:150;28466:4;28459:5;28455:16;28449:23;28478:63;28535:4;28530:3;28526:14;28512:12;28478:63;;;28386:161;28640:4;28633:5;28629:16;28623:23;28652:63;28709:4;28704:3;28700:14;28686:12;28652:63;;;28557:164;28812:4;28805:5;28801:16;28795:23;28824:57;28875:4;28870:3;28866:14;28852:12;28824:57;;28982:1513;29137:4;29128:14;;29207:58;29252:5;;29207:58;;;29271:79;29339:3;29321:12;29271:79;;;29157:199;29417:50;29461:4;29454:5;29450:16;29443:5;29417:50;;;29473:63;29530:4;29525:3;29521:14;29507:12;29473:63;;;29366:176;29610:50;29654:4;29647:5;29643:16;29636:5;29610:50;;;29666:63;29723:4;29718:3;29714:14;29700:12;29666:63;;;29552:183;29799:50;29843:4;29836:5;29832:16;29825:5;29799:50;;;29855:63;29912:4;29907:3;29903:14;29889:12;29855:63;;;29745:179;29982:50;30026:4;30019:5;30015:16;30008:5;29982:50;;;30038:63;30095:4;30090:3;30086:14;30072:12;30038:63;;;29934:173;30167:50;30211:4;30204:5;30200:16;30193:5;30167:50;;;30223:63;30280:4;30275:3;30271:14;30257:12;30223:63;;;30117:175;30355:50;30399:4;30392:5;30388:16;30381:5;30355:50;;;30411:63;30468:4;30463:3;30459:14;30445:12;30411:63;;30577:1572;30720:6;30711:16;;30790:50;30827:5;;30790:50;;;30846:63;30898:3;30880:12;30846:63;;;30742:173;30983:50;31027:4;31020:5;31016:16;31009:5;30983:50;;;31039:63;31096:4;31091:3;31087:14;31073:12;31039:63;;;30925:183;31172:50;31216:4;31209:5;31205:16;31198:5;31172:50;;;31228:63;31285:4;31280:3;31276:14;31262:12;31228:63;;;31118:179;31361:50;31405:4;31398:5;31394:16;31387:5;31361:50;;;31417:63;31474:4;31469:3;31465:14;31451:12;31417:63;;;31307:179;31553:50;31597:4;31590:5;31586:16;31579:5;31553:50;;;31609:63;31666:4;31661:3;31657:14;31643:12;31609:63;;;31496:182;31743:50;31787:4;31780:5;31776:16;31769:5;31743:50;;;31799:63;31856:4;31851:3;31847:14;31833:12;31799:63;;;31688:180;31929:76;31999:4;31992:5;31988:16;31981:5;31929:76;;;32011:117;32122:4;32117:3;32113:14;32099:12;32011:117;;32225:1151;32440:23;;32370:4;32361:14;;;32469:79;32365:3;32440:23;32469:79;;;32390:164;32632:4;32625:5;32621:16;32615:23;32644:63;32701:4;32696:3;32692:14;32678:12;32644:63;;;32564:149;32794:4;32787:5;32783:16;32777:23;32806:63;32863:4;32858:3;32854:14;32840:12;32806:63;;;32723:152;32959:4;32952:5;32948:16;32942:23;32971:63;33028:4;33023:3;33019:14;33005:12;32971:63;;;32885:155;33122:4;33115:5;33111:16;33105:23;33134:63;33191:4;33186:3;33182:14;33168:12;33134:63;;;33050:153;33280:4;33273:5;33269:16;33263:23;33292:63;33349:4;33344:3;33340:14;33326:12;33292:63;;33452:878;33589:4;33580:14;;33662:50;33699:5;;33662:50;;;33718:63;33770:3;33752:12;33718:63;;;33609:178;33840:48;33882:4;33875:5;33871:16;33864:5;33840:48;;;33894:59;33947:4;33942:3;33938:14;33924:12;33894:59;;;33797:162;34012:50;34056:4;34049:5;34045:16;34038:5;34012:50;;;34068:63;34125:4;34120:3;34116:14;34102:12;34068:63;;;33969:168;34190:50;34234:4;34227:5;34223:16;34216:5;34190:50;;;34246:63;34303:4;34298:3;34294:14;34280:12;34246:63;;34567:97;34636:22;34652:5;34636:22;;34671:372;;34870:148;35014:3;34870:148;;35050:372;;35249:148;35393:3;35249:148;;35429:213;35547:2;35532:18;;35561:71;35536:9;35605:6;35561:71;;35649:229;35775:2;35760:18;;35789:79;35764:9;35841:6;35789:79;;35885:451;36067:2;36052:18;;36081:79;36056:9;36133:6;36081:79;;;36171:72;36239:2;36228:9;36224:18;36215:6;36171:72;;;36254;36322:2;36311:9;36307:18;36298:6;36254:72;;36343:324;36489:2;36474:18;;36503:71;36478:9;36547:6;36503:71;;;36585:72;36653:2;36642:9;36638:18;36629:6;36585:72;;36674:435;36848:2;36833:18;;36862:71;36837:9;36906:6;36862:71;;;36944:72;37012:2;37001:9;36997:18;36988:6;36944:72;;37116:324;37262:2;37247:18;;37276:71;37251:9;37320:6;37276:71;;;37358:72;37426:2;37415:9;37411:18;37402:6;37358:72;;37447:361;37615:2;37629:47;;;37600:18;;37690:108;37600:18;37784:6;37690:108;;37815:201;37927:2;37912:18;;37941:65;37916:9;37979:6;37941:65;;38023:213;38141:2;38126:18;;38155:71;38130:9;38199:6;38155:71;;38243:273;38391:2;38376:18;;38405:101;38380:9;38479:6;38405:101;;39091:301;39229:2;39243:47;;;39214:18;;39304:78;39214:18;39368:6;39304:78;;39399:407;39590:2;39604:47;;;39575:18;;39665:131;39575:18;39665:131;;39813:407;40004:2;40018:47;;;39989:18;;40079:131;39989:18;40079:131;;40227:407;40418:2;40432:47;;;40403:18;;40493:131;40403:18;40493:131;;40641:407;40832:2;40846:47;;;40817:18;;40907:131;40817:18;40907:131;;41055:407;41246:2;41260:47;;;41231:18;;41321:131;41231:18;41321:131;;41469:407;41660:2;41674:47;;;41645:18;;41735:131;41645:18;41735:131;;41883:407;42074:2;42088:47;;;42059:18;;42149:131;42059:18;42149:131;;42297:407;42488:2;42502:47;;;42473:18;;42563:131;42473:18;42563:131;;42711:407;42902:2;42916:47;;;42887:18;;42977:131;42887:18;42977:131;;43125:407;43316:2;43330:47;;;43301:18;;43391:131;43301:18;43391:131;;43539:407;43730:2;43744:47;;;43715:18;;43805:131;43715:18;43805:131;;43953:407;44144:2;44158:47;;;44129:18;;44219:131;44129:18;44219:131;;44367:407;44558:2;44572:47;;;44543:18;;44633:131;44543:18;44633:131;;44781:407;44972:2;44986:47;;;44957:18;;45047:131;44957:18;45047:131;;45195:407;45386:2;45400:47;;;45371:18;;45461:131;45371:18;45461:131;;45609:407;45800:2;45814:47;;;45785:18;;45875:131;45785:18;45875:131;;46023:407;46214:2;46228:47;;;46199:18;;46289:131;46199:18;46289:131;;46437:407;46628:2;46642:47;;;46613:18;;46703:131;46613:18;46703:131;;46851:407;47042:2;47056:47;;;47027:18;;47117:131;47027:18;47117:131;;47265:407;47456:2;47470:47;;;47441:18;;47531:131;47441:18;47531:131;;47679:407;47870:2;47884:47;;;47855:18;;47945:131;47855:18;47945:131;;48093:407;48284:2;48298:47;;;48269:18;;48359:131;48269:18;48359:131;;48507:407;48698:2;48712:47;;;48683:18;;48773:131;48683:18;48773:131;;48921:407;49112:2;49126:47;;;49097:18;;49187:131;49097:18;49187:131;;49335:407;49526:2;49540:47;;;49511:18;;49601:131;49511:18;49601:131;;49749:407;49940:2;49954:47;;;49925:18;;50015:131;49925:18;50015:131;;50163:407;50354:2;50368:47;;;50339:18;;50429:131;50339:18;50429:131;;50577:407;50768:2;50782:47;;;50753:18;;50843:131;50753:18;50843:131;;50991:407;51182:2;51196:47;;;51167:18;;51257:131;51167:18;51257:131;;51405:407;51596:2;51610:47;;;51581:18;;51671:131;51581:18;51671:131;;51819:407;52010:2;52024:47;;;51995:18;;52085:131;51995:18;52085:131;;52233:407;52424:2;52438:47;;;52409:18;;52499:131;52409:18;52499:131;;52647:407;52838:2;52852:47;;;52823:18;;52913:131;52823:18;52913:131;;53061:407;53252:2;53266:47;;;53237:18;;53327:131;53237:18;53327:131;;53475:362;53667:3;53652:19;;53682:145;53656:9;53800:6;53682:145;;53844:730;54168:3;54153:19;;54183:133;54157:9;54289:6;54183:133;;;54365:9;54359:4;54355:20;54349:3;54338:9;54334:19;54327:49;54390:174;54559:4;54550:6;54542;54390:174;;54801:324;54947:2;54932:18;;54961:71;54936:9;55005:6;54961:71;;55132:340;55286:2;55271:18;;55300:71;55275:9;55344:6;55300:71;;;55382:80;55458:2;55447:9;55443:18;55434:6;55382:80;;55479:451;55661:2;55646:18;;55675:71;55650:9;55719:6;55675:71;;;55757:80;55833:2;55822:9;55818:18;55809:6;55757:80;;55937:1569;56425:3;56410:19;;56440:71;56414:9;56484:6;56440:71;;;56522:124;56642:2;56631:9;56627:18;56618:6;56522:124;;;56657:73;56725:3;56714:9;56710:19;56701:6;56657:73;;;56741;56809:3;56798:9;56794:19;56785:6;56741:73;;;56825;56893:3;56882:9;56878:19;56869:6;56825:73;;;56909;56977:3;56966:9;56962:19;56953:6;56909:73;;;56993;57061:3;57050:9;57046:19;57037:6;56993:73;;;57077;57145:3;57134:9;57130:19;57121:6;57077:73;;;57161;57229:3;57218:9;57214:19;57205:6;57161:73;;;57245;57313:3;57302:9;57298:19;57289:6;57245:73;;;57329:88;57412:3;57401:9;57397:19;57387:7;57329:88;;;57428:68;57491:3;57480:9;57476:19;57466:7;57428:68;;;56396:1110;;;;;;;;;;;;;;;;57513:659;57743:3;57728:19;;57758:71;57732:9;57802:6;57758:71;;;57840:72;57908:2;57897:9;57893:18;57884:6;57840:72;;;57923;57991:2;57980:9;57976:18;57967:6;57923:72;;;58006;58074:2;58063:9;58059:18;58050:6;58006:72;;;58089:73;58157:3;58146:9;58142:19;58133:6;58089:73;;;57714:458;;;;;;;;;58179:256;58241:2;58235:9;58267:17;;;58342:18;58327:34;;58363:22;;;58324:62;58321:2;;;58399:1;58396;58389:12;58321:2;58415;58408:22;58219:216;;-1:-1;58219:216;58442:147;58559:3;58545:44;58596:151;58720:4;58711:14;;58668:79;58754:137;58857:12;;58828:63;59027:141;59156:6;59147:16;;59133:35;59291:205;59436:19;;;59485:4;59476:14;;59429:67;60018:119;;60092:39;60127:2;60122:3;60118:12;60113:3;60092:39;;60290:119;;60364:39;60399:2;60394:3;60390:12;60385:3;60364:39;;60418:112;-1:-1;60521:3;60505:25;60785:115;;60857:37;60890:2;60885:3;60881:12;60876:3;60857:37;;60908:91;;60970:24;60988:5;60970:24;;61112:85;61178:13;61171:21;;61154:43;61283:122;;61376:24;61394:5;61376:24;;61783:138;61861:5;61867:49;61861:5;61867:49;;62006:121;-1:-1;;;;;62068:54;;62051:76;62213:81;62284:4;62273:16;;62256:38;62301:129;;62388:37;62419:5;62388:37;;63448:138;;63541:40;63575:5;63541:40;;63837:268;63902:1;63909:101;63923:6;63920:1;63917:13;63909:101;;;63990:11;;;63984:18;63971:11;;;63964:39;63945:2;63938:10;63909:101;;;64025:6;64022:1;64019:13;64016:2;;;-1:-1;;64090:1;64072:16;;64065:27;63886:219;64113:97;64201:2;64181:14;-1:-1;;64177:28;;64161:49;64218:107;64303:1;64296:5;64293:12;64283:2;;64309:9;64332:117;64401:24;64419:5;64401:24;;;64394:5;64391:35;64381:2;;64440:1;64437;64430:12;64596:111;64662:21;64677:5;64662:21;;64714:117;64783:24;64801:5;64783:24;;64838:179;64938:55;64987:5;64938:55;;65796:113;65863:22;65879:5;65863:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./LoansBase.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice This contract is used as a basis for the creation of loans (not wei) across the platform\n    @notice It implements the LoansBase contract from Teller\n\n    @author develop@teller.finance\n */\ncontract TokenCollateralLoans is LoansBase {\n    /** Constants */\n\n    /** Properties */\n\n    /** Modifiers */\n\n    /**\n        @notice Checks the value in the current transactionn is zero.\n        @dev It throws a require error if value is not zero.\n     */\n    modifier noMsgValue() {\n        require(msg.value == 0, \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\");\n        _;\n    }\n\n    /** External Functions */\n\n    /**\n     * @notice Deposit collateral tokens into a loan.\n     * @param borrower The address of the loan borrower.\n     * @param loanID The ID of the loan the collateral is for\n     * @param amount The amount to deposit as collateral.\n     */\n    function depositCollateral(\n        address borrower,\n        uint256 loanID,\n        uint256 amount\n    )\n        external\n        payable\n        noMsgValue()\n        loanActiveOrSet(loanID)\n        isInitialized()\n        whenNotPaused()\n        whenLendingPoolNotPaused(address(lendingPool))\n    {\n        borrower.requireEqualTo(\n            loans[loanID].loanTerms.borrower,\n            \"BORROWER_LOAN_ID_MISMATCH\"\n        );\n        require(amount > 0, \"CANNOT_DEPOSIT_ZERO\");\n\n        // Update the loan collateral and total. Transfer tokens to this contract.\n        _payInCollateral(loanID, amount);\n\n        emit CollateralDeposited(loanID, borrower, amount);\n    }\n\n    /**\n        @notice Creates a loan with the loan request and terms\n        @param request Struct of the protocol loan request\n        @param responses List of structs of the protocol loan responses\n        @param collateralAmount Amount of collateral required for the loan\n     */\n    function createLoanWithTerms(\n        TellerCommon.LoanRequest calldata request,\n        TellerCommon.LoanResponse[] calldata responses,\n        uint256 collateralAmount\n    )\n        external\n        payable\n        noMsgValue()\n        isInitialized()\n        whenNotPaused()\n        isBorrower(request.borrower)\n        withValidLoanRequest(request)\n    {\n        uint256 loanID = getAndIncrementLoanID();\n\n        (\n            uint256 interestRate,\n            uint256 collateralRatio,\n            uint256 maxLoanAmount\n        ) = loanTermsConsensus.processRequest(request, responses);\n\n        loans[loanID] = createLoan(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount\n        );\n\n        if (collateralAmount > 0) {\n            // Update collateral, totalCollateral, and lastCollateralIn\n            _payInCollateral(loanID, collateralAmount);\n        }\n\n        borrowerLoans[request.borrower].push(loanID);\n\n        _emitLoanTermsSetAndCollateralDepositedEventsIfApplicable(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount,\n            collateralAmount\n        );\n    }\n\n    /**\n        @notice Initializes the current contract instance setting the required parameters, if allowed\n        @param priceOracleAddress Contract address of the price oracle\n        @param lendingPoolAddress Contract address of the lending pool\n        @param loanTermsConsensusAddress Contract adddress for loan term consensus\n        @param settingsAddress Contract address for the configuration of the platform\n        @param collateralTokenAddress Contract address for the collateral token.\n     */\n    function initialize(\n        address priceOracleAddress,\n        address lendingPoolAddress,\n        address loanTermsConsensusAddress,\n        address settingsAddress,\n        address collateralTokenAddress\n    ) external isNotInitialized() {\n        collateralTokenAddress.requireNotEmpty(\"PROVIDE_COLL_TOKEN_ADDRESS\");\n\n        _initialize(\n            priceOracleAddress,\n            lendingPoolAddress,\n            loanTermsConsensusAddress,\n            settingsAddress\n        );\n\n        collateralToken = collateralTokenAddress;\n    }\n\n    /** Internal Function */\n    /**\n        @notice Pays out collateral for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n     */\n    function _payOutCollateral(\n        uint256 loanID,\n        uint256 amount,\n        address payable recipient\n    ) internal {\n        totalCollateral = totalCollateral.sub(amount);\n        loans[loanID].collateral = loans[loanID].collateral.sub(amount);\n\n        _collateralTokenTransfer(recipient, amount);\n    }\n\n    /**\n        @notice Pays collateral in for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n     */\n    function _payInCollateral(uint256 loanID, uint256 amount) internal {\n        // Update the total collateral and loan collateral\n        super._payInCollateral(loanID, amount);\n        // Transfer collateral tokens to this contract.\n        _collateralTokenTransferFrom(msg.sender, amount);\n    }\n\n    /**\n        @notice It transfers an amount of collateral tokens to a specific address.\n        @param recipient The address which will receive the tokens.\n        @param amount The amount of tokens to transfer.\n     */\n    function _collateralTokenTransfer(address recipient, uint256 amount) internal {\n        ERC20Detailed(collateralToken).tokenTransfer(recipient, amount);\n    }\n\n    /**\n        @notice It transfers an amount of collateral tokens from an address to this contract.\n        @param from The address where the tokens will transfer from.\n        @param amount The amount to be transferred.\n     */\n    function _collateralTokenTransferFrom(address from, uint256 amount) internal {\n        ERC20Detailed(collateralToken).tokenTransferFrom(from, amount);\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
    "exportedSymbols": {
      "TokenCollateralLoans": [
        9206
      ]
    },
    "id": 9207,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8935,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "id": 8936,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:32"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 8937,
        "nodeType": "ImportDirective",
        "scope": 9207,
        "sourceUnit": 6827,
        "src": "72:25:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8938,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6826,
              "src": "1378:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$6826",
                "typeString": "contract LoansBase"
              }
            },
            "id": 8939,
            "nodeType": "InheritanceSpecifier",
            "src": "1378:9:32"
          }
        ],
        "contractDependencies": [
          2343,
          2634,
          6826,
          8853,
          10469,
          20866,
          20935
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of loans (not wei) across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 9206,
        "linearizedBaseContracts": [
          9206,
          6826,
          2343,
          20866,
          20935,
          2634,
          8853,
          10469
        ],
        "name": "TokenCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8950,
              "nodeType": "Block",
              "src": "1630:85:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8942,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "1648:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1648:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 8944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1648:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f",
                        "id": 8946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:32:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        },
                        "value": "TOKEN_LOANS_VALUE_MUST_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        }
                      ],
                      "id": 8941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1640:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:57:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8948,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:57:32"
                },
                {
                  "id": 8949,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:32"
                }
              ]
            },
            "documentation": "@notice Checks the value in the current transactionn is zero.\n@dev It throws a require error if value is not zero.",
            "id": 8951,
            "name": "noMsgValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:2:32"
            },
            "src": "1608:107:32",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9003,
              "nodeType": "Block",
              "src": "2299:376:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8977,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5439,
                              "src": "2346:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 8979,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 8978,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8955,
                              "src": "2352:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2346:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17535_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 8980,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loanTerms",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17514,
                          "src": "2346:23:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$17510_storage",
                            "typeString": "struct TellerCommon.LoanTerms storage ref"
                          }
                        },
                        "id": 8981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17499,
                        "src": "2346:32:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 8982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:27:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8974,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8953,
                        "src": "2309:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 8976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16246,
                      "src": "2309:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 8983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:120:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8984,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:120:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8986,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8957,
                          "src": "2447:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 8987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2456:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2447:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 8989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:21:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 8985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2439:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:42:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8991,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:42:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8993,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8955,
                        "src": "2592:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8994,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8957,
                        "src": "2600:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8992,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9173
                      ],
                      "referencedDeclaration": 9173,
                      "src": "2575:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 8995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:32:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8996,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:32:32"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8998,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8955,
                        "src": "2643:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8999,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8953,
                        "src": "2651:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9000,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8957,
                        "src": "2661:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8997,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10256,
                      "src": "2623:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 9001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:45:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9002,
                  "nodeType": "EmitStatement",
                  "src": "2618:50:32"
                }
              ]
            },
            "documentation": "@notice Deposit collateral tokens into a loan.\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for\n@param amount The amount to deposit as collateral.",
            "id": 9004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 8960,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8959,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8951,
                  "src": "2147:10:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2147:12:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8962,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8955,
                    "src": "2184:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8963,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8961,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5516,
                  "src": "2168:15:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2168:23:32"
              },
              {
                "arguments": [],
                "id": 8965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8964,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2200:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2200:15:32"
              },
              {
                "arguments": [],
                "id": 8967,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8966,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "2224:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2224:15:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8970,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "2281:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 8969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2273:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 8971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8972,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8968,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2244,
                  "src": "2248:24:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:46:32"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8953,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 9004,
                  "src": "2035:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8955,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9004,
                  "src": "2061:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8957,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9004,
                  "src": "2085:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:80:32"
            },
            "returnParameters": {
              "id": 8973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:32"
            },
            "scope": 9206,
            "src": "1999:676:32",
            "stateMutability": "payable",
            "superFunction": 10348,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9083,
              "nodeType": "Block",
              "src": "3323:871:32",
              "statements": [
                {
                  "assignments": [
                    9028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9028,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3333:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9027,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9031,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9029,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6639,
                      "src": "3350:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 9030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:23:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:40:32"
                },
                {
                  "assignments": [
                    9033,
                    9035,
                    9037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9033,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3398:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9032,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3398:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9035,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3432:23:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9034,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9037,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3469:21:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3469:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9043,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9040,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9006,
                        "src": "3537:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9041,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9009,
                        "src": "3546:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9038,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5430,
                        "src": "3503:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10243",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 9039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10233,
                      "src": "3503:33:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17490_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 9042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3503:53:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:172:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9044,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5439,
                        "src": "3567:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 9046,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9045,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9028,
                        "src": "3573:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3567:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9048,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9028,
                          "src": "3607:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9049,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9006,
                          "src": "3627:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9050,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9033,
                          "src": "3648:12:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9051,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9035,
                          "src": "3674:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9052,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9037,
                          "src": "3703:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9047,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6706,
                        "src": "3583:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17535_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 9053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3583:143:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3567:159:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17535_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 9055,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:159:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9056,
                      "name": "collateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9011,
                      "src": "3741:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3760:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3741:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 9065,
                  "nodeType": "IfStatement",
                  "src": "3737:165:32",
                  "trueBody": {
                    "id": 9064,
                    "nodeType": "Block",
                    "src": "3763:139:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9060,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9028,
                              "src": "3866:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9061,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9011,
                              "src": "3874:16:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9059,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9173
                            ],
                            "referencedDeclaration": 9173,
                            "src": "3849:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 9062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3849:42:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9063,
                        "nodeType": "ExpressionStatement",
                        "src": "3849:42:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9071,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9028,
                        "src": "3949:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9066,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "3912:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 9069,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9067,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9006,
                            "src": "3926:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 9068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17462,
                          "src": "3926:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3912:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3912:36:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 9072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:44:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9073,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:44:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9075,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9028,
                        "src": "4038:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9076,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9006,
                        "src": "4058:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9077,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9033,
                        "src": "4079:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9078,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9035,
                        "src": "4105:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9079,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9037,
                        "src": "4134:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9080,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9011,
                        "src": "4161:16:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9074,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6751,
                      "src": "3967:57:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:220:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9082,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:220:32"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 9084,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9014,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9013,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8951,
                  "src": "3183:10:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3183:12:32"
              },
              {
                "arguments": [],
                "id": 9016,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9015,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "3204:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3204:15:32"
              },
              {
                "arguments": [],
                "id": 9018,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9017,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "3228:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3228:15:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 9020,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9006,
                      "src": "3263:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 9021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17462,
                    "src": "3263:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 9022,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9019,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5453,
                  "src": "3252:10:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3252:28:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9024,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9006,
                    "src": "3310:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 9025,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9023,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5569,
                  "src": "3289:20:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17475_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3289:29:32"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9006,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 9084,
                  "src": "3004:41:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9005,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17475,
                    "src": "3004:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9009,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 9084,
                  "src": "3055:46:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 9007,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17490,
                      "src": "3055:25:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17490_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 9008,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3055:27:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9011,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9084,
                  "src": "3111:24:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:147:32"
            },
            "returnParameters": {
              "id": 9026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3323:0:32"
            },
            "scope": 9206,
            "src": "2966:1228:32",
            "stateMutability": "payable",
            "superFunction": 10365,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9116,
              "nodeType": "Block",
              "src": "4952:300:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50524f564944455f434f4c4c5f544f4b454e5f41444452455353",
                        "id": 9102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5001:28:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        },
                        "value": "PROVIDE_COLL_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9099,
                        "name": "collateralTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9094,
                        "src": "4962:22:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16213,
                      "src": "4962:38:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 9103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:68:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9104,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:68:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9106,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9086,
                        "src": "5066:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9107,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9088,
                        "src": "5098:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9108,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9090,
                        "src": "5130:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9109,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9092,
                        "src": "5169:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9105,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6417,
                        2295,
                        8852
                      ],
                      "referencedDeclaration": 6417,
                      "src": "5041:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 9110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5041:153:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9111,
                  "nodeType": "ExpressionStatement",
                  "src": "5041:153:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9112,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "5205:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9113,
                      "name": "collateralTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9094,
                      "src": "5223:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5205:40:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9115,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:40:32"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters, if allowed\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform\n@param collateralTokenAddress Contract address for the collateral token.",
            "id": 9117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9097,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9096,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8818,
                  "src": "4933:16:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4933:18:32"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9086,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4739:26:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9088,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4775:26:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9090,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4811:33:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4811:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9092,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4854:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4854:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9094,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4887:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4729:194:32"
            },
            "returnParameters": {
              "id": 9098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4952:0:32"
            },
            "scope": 9206,
            "src": "4710:542:32",
            "stateMutability": "nonpayable",
            "superFunction": 10458,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9151,
              "nodeType": "Block",
              "src": "5609:189:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9126,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "5619:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9129,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9121,
                          "src": "5657:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 9127,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5420,
                          "src": "5637:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5637:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5637:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5619:45:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9132,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:45:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9133,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5439,
                          "src": "5674:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 9135,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 9134,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9119,
                          "src": "5680:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5674:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17535_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 9136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17520,
                      "src": "5674:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9142,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9121,
                          "src": "5730:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9137,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5439,
                              "src": "5701:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9139,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9138,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9119,
                              "src": "5707:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5701:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17535_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17520,
                          "src": "5701:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5701:28:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5701:36:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5674:63:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9145,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:63:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9147,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9123,
                        "src": "5773:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9148,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9121,
                        "src": "5784:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9146,
                      "name": "_collateralTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9189,
                      "src": "5748:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5748:43:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9150,
                  "nodeType": "ExpressionStatement",
                  "src": "5748:43:32"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9119,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9152,
                  "src": "5520:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9121,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9152,
                  "src": "5544:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5544:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9123,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9152,
                  "src": "5568:25:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:15:32",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5510:89:32"
            },
            "returnParameters": {
              "id": 9125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5609:0:32"
            },
            "scope": 9206,
            "src": "5484:314:32",
            "stateMutability": "nonpayable",
            "superFunction": 6310,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9172,
              "nodeType": "Block",
              "src": "6067:228:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9162,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9154,
                        "src": "6159:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9163,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9156,
                        "src": "6167:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9159,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21148,
                        "src": "6136:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenCollateralLoans_$9206",
                          "typeString": "contract super TokenCollateralLoans"
                        }
                      },
                      "id": 9161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_payInCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6452,
                      "src": "6136:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9165,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:38:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9167,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "6269:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6269:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9169,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9156,
                        "src": "6281:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9166,
                      "name": "_collateralTokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9205,
                      "src": "6240:28:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6240:48:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9171,
                  "nodeType": "ExpressionStatement",
                  "src": "6240:48:32"
                }
              ]
            },
            "documentation": "@notice Pays collateral in for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payInCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9154,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9173,
                  "src": "6026:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9156,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9173,
                  "src": "6042:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6042:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6025:32:32"
            },
            "returnParameters": {
              "id": 9158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6067:0:32"
            },
            "scope": 9206,
            "src": "6000:295:32",
            "stateMutability": "nonpayable",
            "superFunction": 6452,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9188,
              "nodeType": "Block",
              "src": "6602:80:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9184,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9175,
                        "src": "6657:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9185,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9177,
                        "src": "6668:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9181,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5422,
                            "src": "6626:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9180,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20549,
                          "src": "6612:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20549_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6612:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20549",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16524,
                      "src": "6612:44:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20549_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20549_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:63:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9187,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:63:32"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens to a specific address.\n@param recipient The address which will receive the tokens.\n@param amount The amount of tokens to transfer.",
            "id": 9189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9175,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9189,
                  "src": "6558:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9177,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9189,
                  "src": "6577:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6557:35:32"
            },
            "returnParameters": {
              "id": 9179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6602:0:32"
            },
            "scope": 9206,
            "src": "6524:158:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9204,
              "nodeType": "Block",
              "src": "6996:79:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9200,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9191,
                        "src": "7055:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9201,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "7061:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9197,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5422,
                            "src": "7020:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9196,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20549,
                          "src": "7006:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20549_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7006:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20549",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16595,
                      "src": "7006:48:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20549_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20549_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:62:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9203,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:62:32"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens from an address to this contract.\n@param from The address where the tokens will transfer from.\n@param amount The amount to be transferred.",
            "id": 9205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9191,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9205,
                  "src": "6957:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9193,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9205,
                  "src": "6971:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6956:30:32"
            },
            "returnParameters": {
              "id": 9195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6996:0:32"
            },
            "scope": 9206,
            "src": "6919:156:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9207,
        "src": "1345:5732:32"
      }
    ],
    "src": "0:7078:32"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
    "exportedSymbols": {
      "TokenCollateralLoans": [
        9206
      ]
    },
    "id": 9207,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8935,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:32"
      },
      {
        "id": 8936,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:32"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 8937,
        "nodeType": "ImportDirective",
        "scope": 9207,
        "sourceUnit": 6827,
        "src": "72:25:32",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8938,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6826,
              "src": "1378:9:32",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$6826",
                "typeString": "contract LoansBase"
              }
            },
            "id": 8939,
            "nodeType": "InheritanceSpecifier",
            "src": "1378:9:32"
          }
        ],
        "contractDependencies": [
          2343,
          2634,
          6826,
          8853,
          10469,
          20866,
          20935
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of loans (not wei) across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 9206,
        "linearizedBaseContracts": [
          9206,
          6826,
          2343,
          20866,
          20935,
          2634,
          8853,
          10469
        ],
        "name": "TokenCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 8950,
              "nodeType": "Block",
              "src": "1630:85:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 8942,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "1648:3:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 8943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1648:9:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 8944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1661:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1648:14:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f",
                        "id": 8946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1664:32:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        },
                        "value": "TOKEN_LOANS_VALUE_MUST_BE_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22f33a818cfe2b5be858eacf8527ea1801bb9dccadb49769e42646a33febd6c9",
                          "typeString": "literal_string \"TOKEN_LOANS_VALUE_MUST_BE_ZERO\""
                        }
                      ],
                      "id": 8941,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1640:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1640:57:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8948,
                  "nodeType": "ExpressionStatement",
                  "src": "1640:57:32"
                },
                {
                  "id": 8949,
                  "nodeType": "PlaceholderStatement",
                  "src": "1707:1:32"
                }
              ]
            },
            "documentation": "@notice Checks the value in the current transactionn is zero.\n@dev It throws a require error if value is not zero.",
            "id": 8951,
            "name": "noMsgValue",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1627:2:32"
            },
            "src": "1608:107:32",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9003,
              "nodeType": "Block",
              "src": "2299:376:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 8977,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5439,
                              "src": "2346:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 8979,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 8978,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8955,
                              "src": "2352:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2346:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17535_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 8980,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "loanTerms",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17514,
                          "src": "2346:23:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$17510_storage",
                            "typeString": "struct TellerCommon.LoanTerms storage ref"
                          }
                        },
                        "id": 8981,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "borrower",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17499,
                        "src": "2346:32:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 8982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2392:27:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8974,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8953,
                        "src": "2309:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 8976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16246,
                      "src": "2309:23:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 8983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2309:120:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8984,
                  "nodeType": "ExpressionStatement",
                  "src": "2309:120:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 8988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 8986,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8957,
                          "src": "2447:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 8987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2456:1:32",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2447:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 8989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2459:21:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 8985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2439:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2439:42:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8991,
                  "nodeType": "ExpressionStatement",
                  "src": "2439:42:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8993,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8955,
                        "src": "2592:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8994,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8957,
                        "src": "2600:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8992,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9173
                      ],
                      "referencedDeclaration": 9173,
                      "src": "2575:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 8995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2575:32:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8996,
                  "nodeType": "ExpressionStatement",
                  "src": "2575:32:32"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8998,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8955,
                        "src": "2643:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8999,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8953,
                        "src": "2651:8:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9000,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8957,
                        "src": "2661:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 8997,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10256,
                      "src": "2623:19:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 9001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:45:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9002,
                  "nodeType": "EmitStatement",
                  "src": "2618:50:32"
                }
              ]
            },
            "documentation": "@notice Deposit collateral tokens into a loan.\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for\n@param amount The amount to deposit as collateral.",
            "id": 9004,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 8960,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8959,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8951,
                  "src": "2147:10:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2147:12:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 8962,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8955,
                    "src": "2184:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 8963,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8961,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5516,
                  "src": "2168:15:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2168:23:32"
              },
              {
                "arguments": [],
                "id": 8965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8964,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2200:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2200:15:32"
              },
              {
                "arguments": [],
                "id": 8967,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8966,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "2224:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2224:15:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8970,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "2281:11:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 8969,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2273:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 8971,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 8972,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8968,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2244,
                  "src": "2248:24:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2248:46:32"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8953,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 9004,
                  "src": "2035:16:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8955,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9004,
                  "src": "2061:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8954,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2061:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8957,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9004,
                  "src": "2085:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2025:80:32"
            },
            "returnParameters": {
              "id": 8973,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2299:0:32"
            },
            "scope": 9206,
            "src": "1999:676:32",
            "stateMutability": "payable",
            "superFunction": 10348,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9083,
              "nodeType": "Block",
              "src": "3323:871:32",
              "statements": [
                {
                  "assignments": [
                    9028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9028,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3333:14:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9027,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3333:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9031,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9029,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6639,
                      "src": "3350:21:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 9030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3350:23:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3333:40:32"
                },
                {
                  "assignments": [
                    9033,
                    9035,
                    9037
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9033,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3398:20:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9032,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3398:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9035,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3432:23:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9034,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9037,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 9083,
                      "src": "3469:21:32",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 9036,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3469:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 9043,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9040,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9006,
                        "src": "3537:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9041,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9009,
                        "src": "3546:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9038,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5430,
                        "src": "3503:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10243",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 9039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10233,
                      "src": "3503:33:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17490_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 9042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3503:53:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3384:172:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 9044,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5439,
                        "src": "3567:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 9046,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 9045,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9028,
                        "src": "3573:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3567:13:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9048,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9028,
                          "src": "3607:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9049,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9006,
                          "src": "3627:7:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9050,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9033,
                          "src": "3648:12:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9051,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9035,
                          "src": "3674:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 9052,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9037,
                          "src": "3703:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 9047,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6706,
                        "src": "3583:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17535_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 9053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3583:143:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3567:159:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17535_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 9055,
                  "nodeType": "ExpressionStatement",
                  "src": "3567:159:32"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 9058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 9056,
                      "name": "collateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9011,
                      "src": "3741:16:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 9057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3760:1:32",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3741:20:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 9065,
                  "nodeType": "IfStatement",
                  "src": "3737:165:32",
                  "trueBody": {
                    "id": 9064,
                    "nodeType": "Block",
                    "src": "3763:139:32",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 9060,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9028,
                              "src": "3866:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 9061,
                              "name": "collateralAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9011,
                              "src": "3874:16:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 9059,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              9173
                            ],
                            "referencedDeclaration": 9173,
                            "src": "3849:16:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 9062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3849:42:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9063,
                        "nodeType": "ExpressionStatement",
                        "src": "3849:42:32"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9071,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9028,
                        "src": "3949:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9066,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "3912:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 9069,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 9067,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9006,
                            "src": "3926:7:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 9068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17462,
                          "src": "3926:16:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3912:31:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 9070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3912:36:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 9072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3912:44:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9073,
                  "nodeType": "ExpressionStatement",
                  "src": "3912:44:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9075,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9028,
                        "src": "4038:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9076,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9006,
                        "src": "4058:7:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9077,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9033,
                        "src": "4079:12:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9078,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9035,
                        "src": "4105:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9079,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9037,
                        "src": "4134:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9080,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9011,
                        "src": "4161:16:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9074,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6751,
                      "src": "3967:57:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 9081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:220:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9082,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:220:32"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 9084,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9014,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9013,
                  "name": "noMsgValue",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8951,
                  "src": "3183:10:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3183:12:32"
              },
              {
                "arguments": [],
                "id": 9016,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9015,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "3204:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3204:15:32"
              },
              {
                "arguments": [],
                "id": 9018,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9017,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "3228:13:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3228:15:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 9020,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9006,
                      "src": "3263:7:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 9021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17462,
                    "src": "3263:16:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 9022,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9019,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5453,
                  "src": "3252:10:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3252:28:32"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9024,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9006,
                    "src": "3310:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 9025,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9023,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5569,
                  "src": "3289:20:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17475_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3289:29:32"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9006,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 9084,
                  "src": "3004:41:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 9005,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17475,
                    "src": "3004:24:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9009,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 9084,
                  "src": "3055:46:32",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 9007,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17490,
                      "src": "3055:25:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17490_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 9008,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "3055:27:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9011,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9084,
                  "src": "3111:24:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3111:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2994:147:32"
            },
            "returnParameters": {
              "id": 9026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3323:0:32"
            },
            "scope": 9206,
            "src": "2966:1228:32",
            "stateMutability": "payable",
            "superFunction": 10365,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9116,
              "nodeType": "Block",
              "src": "4952:300:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "50524f564944455f434f4c4c5f544f4b454e5f41444452455353",
                        "id": 9102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5001:28:32",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        },
                        "value": "PROVIDE_COLL_TOKEN_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c7dab5ec7bf8c9c65a0d45a9f2e6384818c6ce5bfb7a265c9a4af74121380cb8",
                          "typeString": "literal_string \"PROVIDE_COLL_TOKEN_ADDRESS\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9099,
                        "name": "collateralTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9094,
                        "src": "4962:22:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 9101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16213,
                      "src": "4962:38:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 9103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4962:68:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9104,
                  "nodeType": "ExpressionStatement",
                  "src": "4962:68:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9106,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9086,
                        "src": "5066:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9107,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9088,
                        "src": "5098:18:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9108,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9090,
                        "src": "5130:25:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9109,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9092,
                        "src": "5169:15:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 9105,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6417,
                        2295,
                        8852
                      ],
                      "referencedDeclaration": 6417,
                      "src": "5041:11:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 9110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5041:153:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9111,
                  "nodeType": "ExpressionStatement",
                  "src": "5041:153:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9112,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "5205:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 9113,
                      "name": "collateralTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9094,
                      "src": "5223:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5205:40:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9115,
                  "nodeType": "ExpressionStatement",
                  "src": "5205:40:32"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters, if allowed\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform\n@param collateralTokenAddress Contract address for the collateral token.",
            "id": 9117,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 9097,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 9096,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8818,
                  "src": "4933:16:32",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4933:18:32"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9086,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4739:26:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4739:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9088,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4775:26:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9087,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4775:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9090,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4811:33:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4811:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9092,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4854:23:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4854:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9094,
                  "name": "collateralTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 9117,
                  "src": "4887:30:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4729:194:32"
            },
            "returnParameters": {
              "id": 9098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4952:0:32"
            },
            "scope": 9206,
            "src": "4710:542:32",
            "stateMutability": "nonpayable",
            "superFunction": 10458,
            "visibility": "external"
          },
          {
            "body": {
              "id": 9151,
              "nodeType": "Block",
              "src": "5609:189:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 9126,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "5619:15:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9129,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9121,
                          "src": "5657:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 9127,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5420,
                          "src": "5637:15:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5637:19:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5637:27:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5619:45:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9132,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:45:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 9144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 9133,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5439,
                          "src": "5674:5:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 9135,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 9134,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9119,
                          "src": "5680:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5674:13:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17535_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 9136,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17520,
                      "src": "5674:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 9142,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9121,
                          "src": "5730:6:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 9137,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5439,
                              "src": "5701:5:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 9139,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 9138,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9119,
                              "src": "5707:6:32",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5701:13:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17535_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 9140,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17520,
                          "src": "5701:24:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5701:28:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 9143,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5701:36:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5674:63:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 9145,
                  "nodeType": "ExpressionStatement",
                  "src": "5674:63:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9147,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9123,
                        "src": "5773:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9148,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9121,
                        "src": "5784:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9146,
                      "name": "_collateralTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9189,
                      "src": "5748:24:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5748:43:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9150,
                  "nodeType": "ExpressionStatement",
                  "src": "5748:43:32"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9152,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9119,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9152,
                  "src": "5520:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9118,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5520:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9121,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9152,
                  "src": "5544:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5544:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9123,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9152,
                  "src": "5568:25:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 9122,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5568:15:32",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5510:89:32"
            },
            "returnParameters": {
              "id": 9125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5609:0:32"
            },
            "scope": 9206,
            "src": "5484:314:32",
            "stateMutability": "nonpayable",
            "superFunction": 6310,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9172,
              "nodeType": "Block",
              "src": "6067:228:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9162,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9154,
                        "src": "6159:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9163,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9156,
                        "src": "6167:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 9159,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21148,
                        "src": "6136:5:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_TokenCollateralLoans_$9206",
                          "typeString": "contract super TokenCollateralLoans"
                        }
                      },
                      "id": 9161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_payInCollateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6452,
                      "src": "6136:22:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 9164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6136:38:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9165,
                  "nodeType": "ExpressionStatement",
                  "src": "6136:38:32"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 9167,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "6269:3:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 9168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "6269:10:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9169,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9156,
                        "src": "6281:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9166,
                      "name": "_collateralTokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9205,
                      "src": "6240:28:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6240:48:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9171,
                  "nodeType": "ExpressionStatement",
                  "src": "6240:48:32"
                }
              ]
            },
            "documentation": "@notice Pays collateral in for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid",
            "id": 9173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payInCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9154,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 9173,
                  "src": "6026:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9153,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6026:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9156,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9173,
                  "src": "6042:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6042:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6025:32:32"
            },
            "returnParameters": {
              "id": 9158,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6067:0:32"
            },
            "scope": 9206,
            "src": "6000:295:32",
            "stateMutability": "nonpayable",
            "superFunction": 6452,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9188,
              "nodeType": "Block",
              "src": "6602:80:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9184,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9175,
                        "src": "6657:9:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9185,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9177,
                        "src": "6668:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9181,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5422,
                            "src": "6626:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9180,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20549,
                          "src": "6612:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20549_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6612:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20549",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9183,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16524,
                      "src": "6612:44:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20549_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20549_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:63:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9187,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:63:32"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens to a specific address.\n@param recipient The address which will receive the tokens.\n@param amount The amount of tokens to transfer.",
            "id": 9189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9175,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 9189,
                  "src": "6558:17:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6558:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9177,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9189,
                  "src": "6577:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6577:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6557:35:32"
            },
            "returnParameters": {
              "id": 9179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6602:0:32"
            },
            "scope": 9206,
            "src": "6524:158:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9204,
              "nodeType": "Block",
              "src": "6996:79:32",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 9200,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9191,
                        "src": "7055:4:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 9201,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9193,
                        "src": "7061:6:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 9197,
                            "name": "collateralToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5422,
                            "src": "7020:15:32",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 9196,
                          "name": "ERC20Detailed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20549,
                          "src": "7006:13:32",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$20549_$",
                            "typeString": "type(contract ERC20Detailed)"
                          }
                        },
                        "id": 9198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7006:30:32",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Detailed_$20549",
                          "typeString": "contract ERC20Detailed"
                        }
                      },
                      "id": 9199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tokenTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 16595,
                      "src": "7006:48:32",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_ERC20Detailed_$20549_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_ERC20Detailed_$20549_$",
                        "typeString": "function (contract ERC20Detailed,address,uint256)"
                      }
                    },
                    "id": 9202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:62:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9203,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:62:32"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of collateral tokens from an address to this contract.\n@param from The address where the tokens will transfer from.\n@param amount The amount to be transferred.",
            "id": 9205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9191,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 9205,
                  "src": "6957:12:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6957:7:32",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9193,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 9205,
                  "src": "6971:14:32",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6971:7:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6956:30:32"
            },
            "returnParameters": {
              "id": 9195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6996:0:32"
            },
            "scope": 9206,
            "src": "6919:156:32",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 9207,
        "src": "1345:5732:32"
      }
    ],
    "src": "0:7078:32"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-16T17:44:36.696Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "cToken()": {
        "return": "Address of the cToken"
      },
      "canLiquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to check"
        },
        "return": "bool weather the loan can be liquidated"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "params": {
          "collateralAmount": "Amount of collateral required for the loan",
          "request": "Struct of the protocol loan request",
          "responses": "List of structs of the protocol loan responses"
        }
      },
      "depositCollateral(address,uint256,uint256)": {
        "params": {
          "amount": "The amount to deposit as collateral.",
          "borrower": "The address of the loan borrower.",
          "loanID": "The ID of the loan the collateral is for"
        }
      },
      "getBorrowerLoans(address)": {
        "params": {
          "borrower": "The borrower's address"
        }
      },
      "getCollateralInfo(uint256)": {
        "params": {
          "loanID": "of the loan to get info for"
        },
        "return": "memory TellerCommon.LoanCollateralInfo Collateral information of the loan"
      },
      "getTotalOwed(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be queried"
        },
        "return": "uint256 The total amount owed remaining"
      },
      "initialize(address,address,address,address,address)": {
        "params": {
          "collateralTokenAddress": "Contract address for the collateral token.",
          "lendingPoolAddress": "Contract address of the lending pool",
          "loanTermsConsensusAddress": "Contract adddress for loan term consensus",
          "priceOracleAddress": "Contract address of the price oracle",
          "settingsAddress": "Contract address for the configuration of the platform"
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "lendingToken()": {
        "return": "Address of the lending token"
      },
      "liquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be liquidated"
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens to pay back to the loan",
          "loanID": "The ID of the loan the payment is for"
        }
      },
      "setPriceOracle(address)": {
        "details": "It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.",
        "params": {
          "newPriceOracle": "the new price oracle address."
        }
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "tToken()": {
        "return": "Address of the tToken"
      },
      "takeOutLoan(uint256,uint256)": {
        "details": "collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points."
      },
      "withdrawCollateral(uint256,uint256)": {
        "params": {
          "amount": "The amount of collateral token or ether the caller is hoping to withdraw.",
          "loanID": "The ID of the loan the collateral is for"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "cToken()": {
        "notice": "Returns the cToken in the lending pool"
      },
      "canLiquidateLoan(uint256)": {
        "notice": "A loan can be liquidated if it is: under collateralized or expired"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "notice": "Creates a loan with the loan request and terms"
      },
      "depositCollateral(address,uint256,uint256)": {
        "notice": "Deposit collateral tokens into a loan."
      },
      "getBorrowerLoans(address)": {
        "notice": "Get a list of all loans for a borrower"
      },
      "getCollateralInfo(uint256)": {
        "notice": "Get collateral information of a specific loan"
      },
      "getTotalOwed(uint256)": {
        "notice": "Returns the total owed amount remaining for a specified loan"
      },
      "initialize(address,address,address,address,address)": {
        "notice": "Initializes the current contract instance setting the required parameters, if allowed"
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "lendingToken()": {
        "notice": "Returns the lending token in the lending pool"
      },
      "liquidateLoan(uint256)": {
        "notice": "Liquidate a loan if it is expired or under collateralized"
      },
      "repay(uint256,uint256)": {
        "notice": "Make a payment to a loan"
      },
      "setPriceOracle(address)": {
        "notice": "Updates the current price oracle instance."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "tToken()": {
        "notice": "Returns the tToken in the lending pool"
      },
      "takeOutLoan(uint256,uint256)": {
        "notice": "Take out a loan"
      },
      "withdrawCollateral(uint256,uint256)": {
        "notice": "Withdraw collateral from a loan, unless this isn't allowed"
      }
    },
    "notice": "This contract is used as a basis for the creation of loans (not wei) across the platformIt implements the LoansBase contract from Teller"
  }
}