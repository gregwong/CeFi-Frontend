{
  "contractName": "EtherCollateralLoans",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalOwed",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "LoanTakenOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxLoanAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        }
      ],
      "name": "LoanTermsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "canLiquidateLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoans",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInLendingTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInCollateralTokens",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moreCollateralRequired",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanCollateralInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getTotalOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanIDCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTermsConsensus",
      "outputs": [
        {
          "internalType": "contract LoanTermsConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBorrow",
          "type": "uint256"
        }
      ],
      "name": "takeOutLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanRequest",
          "name": "request",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "responseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "signerNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct TellerCommon.Signature",
              "name": "signature",
              "type": "tuple"
            }
          ],
          "internalType": "struct TellerCommon.LoanResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "createLoanWithTerms",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "priceOracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanTermsConsensusAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIn\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalOwed\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"LoanTakenOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"}],\"name\":\"LoanTermsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"canLiquidateLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"signerNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct TellerCommon.LoanResponse[]\",\"name\":\"responses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"createLoanWithTerms\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoans\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInLendingTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInCollateralTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moreCollateralRequired\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanCollateralInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getTotalOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanTermsConsensusAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanIDCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTermsConsensus\",\"outputs\":[{\"internalType\":\"contract LoanTermsConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"}],\"name\":\"takeOutLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"develop@teller.finance\",\"methods\":{\"cToken()\":{\"return\":\"Address of the cToken\"},\"canLiquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to check\"},\"return\":\"bool weather the loan can be liquidated\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"params\":{\"collateralAmount\":\"Amount of collateral required for the loan\",\"request\":\"Struct of the protocol loan request\",\"responses\":\"List of structs of the protocol loan responses\"}},\"depositCollateral(address,uint256,uint256)\":{\"params\":{\"borrower\":\"The address of the loan borrower.\",\"loanID\":\"The ID of the loan the collateral is for\"}},\"getBorrowerLoans(address)\":{\"params\":{\"borrower\":\"The borrower's address\"}},\"getCollateralInfo(uint256)\":{\"params\":{\"loanID\":\"of the loan to get info for\"},\"return\":\"memory TellerCommon.LoanCollateralInfo Collateral information of the loan\"},\"getTotalOwed(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be queried\"},\"return\":\"uint256 The total amount owed remaining\"},\"initialize(address,address,address,address,address)\":{\"params\":{\"lendingPoolAddress\":\"Contract address of the lending pool\",\"loanTermsConsensusAddress\":\"Contract adddress for loan term consensus\",\"priceOracleAddress\":\"Contract address of the price oracle\",\"settingsAddress\":\"Contract address for the configuration of the platform\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"lendingToken()\":{\"return\":\"Address of the lending token\"},\"liquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be liquidated\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to pay back to the loan\",\"loanID\":\"The ID of the loan the payment is for\"}},\"setPriceOracle(address)\":{\"details\":\"It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.\",\"params\":{\"newPriceOracle\":\"the new price oracle address.\"}},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"tToken()\":{\"return\":\"Address of the tToken\"},\"takeOutLoan(uint256,uint256)\":{\"details\":\"collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points.\"},\"withdrawCollateral(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral token or ether the caller is hoping to withdraw.\",\"loanID\":\"The ID of the loan the collateral is for\"}}}},\"userdoc\":{\"methods\":{\"cToken()\":{\"notice\":\"Returns the cToken in the lending pool\"},\"canLiquidateLoan(uint256)\":{\"notice\":\"A loan can be liquidated if it is: under collateralized or expired\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"notice\":\"Creates a loan with the loan request and terms\"},\"depositCollateral(address,uint256,uint256)\":{\"notice\":\"Deposit collateral into a loan\"},\"getBorrowerLoans(address)\":{\"notice\":\"Get a list of all loans for a borrower\"},\"getCollateralInfo(uint256)\":{\"notice\":\"Get collateral information of a specific loan\"},\"getTotalOwed(uint256)\":{\"notice\":\"Returns the total owed amount remaining for a specified loan\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the current contract instance setting the required parameters\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"lendingToken()\":{\"notice\":\"Returns the lending token in the lending pool\"},\"liquidateLoan(uint256)\":{\"notice\":\"Liquidate a loan if it is expired or under collateralized\"},\"repay(uint256,uint256)\":{\"notice\":\"Make a payment to a loan\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the current price oracle instance.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"tToken()\":{\"notice\":\"Returns the tToken in the lending pool\"},\"takeOutLoan(uint256,uint256)\":{\"notice\":\"Take out a loan\"},\"withdrawCollateral(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a loan, unless this isn't allowed\"}},\"notice\":\"This contract is used as a basis for the creation of Ether based loans across the platformIt implements the LoansBase contract from Teller\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol\":\"EtherCollateralLoans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/ATMGovernanceInterface.sol\":{\"keccak256\":\"0x941d294aa385de623880428e08bf2e8ed4ef4e0f64b64297711748bbcf1e3e62\",\"urls\":[\"bzz-raw://e25e5830eb12b06fc560d5fc77112201fe6cce29a397ce32a982fffe1f0ea88d\",\"dweb:/ipfs/QmUoHemMNYziKTm9b7FwxQvZrtDYpLDw1HyUFchpwdbdw1\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Base.sol\":{\"keccak256\":\"0x23e85149613cbc80bec3de065d969b361d19c61177f426199d10667769f97a49\",\"urls\":[\"bzz-raw://1fbac7f12b453df42a3bd1632962e5c8e0738f9dd65fbc070ab35099ef1ad89b\",\"dweb:/ipfs/QmW8NR5CdGkDfiE9QouSCUznPQde3gNZhjRNnLCCPbJX1Z\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol\":{\"keccak256\":\"0x01740c9491fe408e9e87c6675954a1d65147529b93683062079144eec4d6ef2c\",\"urls\":[\"bzz-raw://53960c3f288581ea592e0eff94fa8038f9a216c68953f1efe93c7af2eb9b24bb\",\"dweb:/ipfs/QmbE1rPoth4pAxbM9aYL4cniVBsv116cWo7Bp2SMbrF3vn\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol\":{\"keccak256\":\"0x677d9fb130652827f2edc7203b1587b3250b5a50885a00e8f66177b718c58cf5\",\"urls\":[\"bzz-raw://ee3ffe7d965cbe295c725d975f16b99e4b9e63321da9621199aa488d3690f6e3\",\"dweb:/ipfs/QmanwDEqyiVGLymYPrwGNWXF19zE7gmgepFE8mHvifzkAA\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowInterface.sol\":{\"keccak256\":\"0x65c08f6f62a51becac639418b7ebe9781decdc89e1f0bc21acfa609418dfa8cb\",\"urls\":[\"bzz-raw://dabc828f30fae14e7d70643480cb1202ec2c85cf654517f18440a0f5b8062101\",\"dweb:/ipfs/QmP3LXe9upby2uN3KunXhBeKm1Mj9xqf31sqDFEMYnwXYt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0xcfa109416508b53f1e67f11040e0187ed8089d361cd1fdaec7f671058fc00168\",\"urls\":[\"bzz-raw://c9f0fcc3736ed10d81abae971b8702b08f14377dbc4c098c4f788ec8328ac666\",\"dweb:/ipfs/QmV3Dr9zyL5957GpWePJEBn5YewmRQTdr7T8vhxXXHPUFq\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoanTermsConsensusInterface.sol\":{\"keccak256\":\"0x93381688f1f920d3c445cd373603eb0aedea609c1827d4341a504ffc9f05e53a\",\"urls\":[\"bzz-raw://bb98e5e3728055be581c59ca924e7e194f81332dd8cdaf527c07ffd35d93b64c\",\"dweb:/ipfs/QmSccwLhRNdgF5x6f1fwF77pHyWJrCDAsaCqKCECpa4FsD\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0xfaaa0507db64689112f9435a97793cbff9b8a281309c55560f16fa3bf52f5a20\",\"urls\":[\"bzz-raw://4cd433e2560f8e577fbe6ba5e4946d7d95d49cd7f6d926ea7fa33f77e2289093\",\"dweb:/ipfs/QmdJkFSvx4KpTquDo6xFQzEWz3EenX6D8iGEY51T87tzGW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xe6e8bac5c0ba6e8d1e1416ac4303be41e8290f4a25f69b7e799ef6ef63434de4\",\"urls\":[\"bzz-raw://a2368205a629bb19220cda5c34a1077856a0c477f08409fd1f9759778dec6b96\",\"dweb:/ipfs/QmX55YjR6Rq1ZUwdoUtLjcH7ZtPQsXu9mb4F6xmuWPVq3H\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/ERC20DetailedLib.sol\":{\"keccak256\":\"0x9d40e0f2512901e6f3dcb2d95756724e4a71d418e755730a9828435c2b5ce204\",\"urls\":[\"bzz-raw://31d1541bf87c9356b4b43decc8b55479a00ebacd1beb0377b0a04200eed278c7\",\"dweb:/ipfs/QmcRJk2JfYzp9HFpTeW1BKWQALF7cpYW3Bj3G7QyosVmRV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x9574ec7b6ec8d2072b6276a0873ec2e27fc8262ed61ccbb7a3ffc20ac7dfc323\",\"urls\":[\"bzz-raw://25ba0147fb05f281e7d0b601f116e805d563a516223041ff5660b43a5f448385\",\"dweb:/ipfs/QmcvfSjqEZpd7gfXFvBm39sV8RFtzJA81X59StgMgdc21t\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614c1f806100206000396000f3fe6080604052600436106101815760003560e01c80638129fc1c116100d1578063c35d64ea1161008a578063e06174e411610064578063e06174e4146103ff578063e1ec3c6814610414578063e3ed19021461044c578063eee8b7ff1461046c57610181565b8063c35d64ea146103aa578063ccdd9f5d146103bf578063d8aed145146103df57610181565b80638129fc1c14610316578063934b5d131461032b578063a59a997314610358578063a5c5c7b21461036d578063aaaca55814610380578063b2016bd41461039557610181565b80634ac8eb5f1161013e57806358895e3d1161011857806358895e3d1461029f5780636948f32b146102c157806369e527da146102e1578063767a7b05146102f657610181565b80634ac8eb5f14610255578063513484541461026a578063530e784f1461027f57610181565b806302bc2cdb146101865780631459457a146101a8578063158ef93e146101c85780631a74856b146101f35780632630c12f146102065780633b92930014610228575b600080fd5b34801561019257600080fd5b506101a66101a1366004613b71565b610499565b005b3480156101b457600080fd5b506101a66101c3366004613973565b610b7b565b3480156101d457600080fd5b506101dd610c4b565b6040516101ea919061471f565b60405180910390f35b6101a6610201366004613a22565b610c6a565b34801561021257600080fd5b5061021b610e2b565b6040516101ea9190614679565b34801561023457600080fd5b50610248610243366004613b53565b610e3a565b6040516101ea919061472d565b34801561026157600080fd5b50610248610e6a565b34801561027657600080fd5b50610248610e70565b34801561028b57600080fd5b506101a661029a366004613937565b610e76565b3480156102ab57600080fd5b506102b4610fd4565b6040516101ea919061473b565b3480156102cd57600080fd5b506101dd6102dc366004613b53565b610fe3565b3480156102ed57600080fd5b5061021b61113c565b34801561030257600080fd5b506101a6610311366004613b71565b6111be565b34801561032257600080fd5b506101a66113d7565b34801561033757600080fd5b5061034b610346366004613b53565b61145f565b6040516101ea919061492a565b34801561036457600080fd5b506102b4611470565b6101a661037b366004613ac9565b61147f565b34801561038c57600080fd5b5061021b611a74565b3480156103a157600080fd5b5061021b611ab9565b3480156103b657600080fd5b5061021b611ac8565b3480156103cb57600080fd5b506101a66103da366004613b53565b611b0d565b3480156103eb57600080fd5b506101a66103fa366004613b71565b611ebd565b34801561040b57600080fd5b506102b46122c3565b34801561042057600080fd5b5061043461042f366004613b53565b6122e5565b6040516101ea9c9b9a9998979695949392919061499e565b34801561045857600080fd5b506102486104673660046139e8565b61239d565b34801561047857600080fd5b5061048c610487366004613937565b6123cb565b6040516101ea919061470e565b8160016000828152606d60205260409020600e0154600160a01b900460ff1660038111156104c357fe5b146104e95760405162461bcd60e51b81526004016104e0906148fa565b60405180910390fd5b6104f1610c4b565b61050d5760405162461bcd60e51b81526004016104e0906148ea565b610515612437565b156105325760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316610547816124b1565b156105645760405162461bcd60e51b81526004016104e09061477a565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105a95760405162461bcd60e51b81526004016104e0906148ba565b6000868152606d60205260409020600501548511156105da5760405162461bcd60e51b81526004016104e09061479a565b6000868152606d602052604090206007015442111561060b5760405162461bcd60e51b81526004016104e09061486a565b6107856106166122c3565b6001600160a01b031663269012a061062c6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061069c9190810190613aab565b6001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b1580156106d457600080fd5b505afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070c9190810190613a8d565b6040518263ffffffff1660e01b8152600401610728919061472d565b60206040518083038186803b15801561074057600080fd5b505afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107789190810190613a8d565b429063ffffffff61253616565b6000878152606d60205260409020600a015411156107b55760405162461bcd60e51b81526004016104e09061485a565b6000868152606d60205260409020600d8101869055600b8101869055600681015460039091015461081a916301e133809161080e9161271091839190610802908c9063ffffffff61258116565b9063ffffffff61258116565b9063ffffffff6125bb16565b6000878152606d60205260409020600c01556108346136e5565b61083d876125fd565b90508060600151156108615760405162461bcd60e51b81526004016104e09061483a565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556108928761264e565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e926108ea928b92169060040161495a565b600060405180830381600087803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc6879061095e9030908b906004016146f3565b600060405180830381600087803b15801561097857600080fd5b505af115801561098c573d6000803e3d6000fd5b50505050610998612747565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f457600080fd5b505afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a2c9190810190613955565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6557600080fd5b505afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a9d9190810190613955565b896040518463ffffffff1660e01b8152600401610abc939291906146d8565b600060405180830381600087803b158015610ad657600080fd5b505af1158015610aea573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610b49908b9061472d565b60405180910390a450506033548114610b745760405162461bcd60e51b81526004016104e09061490a565b5050505050565b610b83610c4b565b15610ba05760405162461bcd60e51b81526004016104e09061491a565b610bac858585856127c1565b610bb46122c3565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bec57600080fd5b505afa158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c249190810190613955565b606780546001600160a01b0319166001600160a01b03929092169190911790555050505050565b600080604051610c5a90614663565b6040519081900390205492915050565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610c9457fe5b1480610cc6575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610cc457fe5b145b610ce25760405162461bcd60e51b81526004016104e0906147da565b610cea610c4b565b610d065760405162461bcd60e51b81526004016104e0906148ea565b610d0e612437565b15610d2b5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316610d40816124b1565b15610d5d5760405162461bcd60e51b81526004016104e09061477a565b6000848152606d60205260409020600101546001600160a01b03868116911614610d995760405162461bcd60e51b81526004016104e0906147ba565b823414610db85760405162461bcd60e51b81526004016104e0906147ca565b60003411610dd85760405162461bcd60e51b81526004016104e09061489a565b610de28484612912565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610e1c919061472d565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610e629163ffffffff61296b16565b90505b919050565b60665481565b60685481565b610e7e610c4b565b610e9a5760405162461bcd60e51b81526004016104e0906148ea565b610ea26122c3565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610ecd9190614687565b60006040518083038186803b158015610ee557600080fd5b505afa158015610ef9573d6000803e3d6000fd5b50505050610f0f816001600160a01b0316612990565b610f2b5760405162461bcd60e51b81526004016104e0906148aa565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610f81908290849063ffffffff6129cc16565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610fed612437565b806110085750606a54611008906001600160a01b03166124b1565b8061103a575060026000838152606d60205260409020600e0154600160a01b900460ff16600381111561103757fe5b14155b1561104757506000610e65565b6000828152606d602052604081206008810154600690910154909142611073848463ffffffff61296b16565b10905080156110885760019350505050610e65565b6000858152606d60205260409020600e01546001600160a01b0316801561112557806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110e257600080fd5b505afa1580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061111a9190810190613a6f565b945050505050610e65565b61112e866125fd565b606001519695505050505050565b606a54604080516334f293ed60e11b815290516000926001600160a01b0316916369e527da916004808301926020929190829003018186803b15801561118157600080fd5b505afa158015611195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b99190810190613955565b905090565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156111e857fe5b148061121a575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561121857fe5b145b6112365760405162461bcd60e51b81526004016104e0906147da565b61123e610c4b565b61125a5760405162461bcd60e51b81526004016104e0906148ea565b611262612437565b1561127f5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316611294816124b1565b156112b15760405162461bcd60e51b81526004016104e09061477a565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146112f55760405162461bcd60e51b81526004016104e0906148ca565b600085116113155760405162461bcd60e51b81526004016104e09061481a565b6000611320856129f5565b9050600061132d82612a2c565b6000878152606d602052604081206009015491925090611353908363ffffffff61253616565b9050878111156113605750865b801561137157611371878233612b71565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41836040516113ab919061472d565b60405180910390a35050506033548114610b745760405162461bcd60e51b81526004016104e09061490a565b600054610100900460ff16806113f057506113f0612bf2565b806113fe575060005460ff16155b61141a5760405162461bcd60e51b81526004016104e09061487a565b600054610100900460ff16158015611445576000805460ff1961ff0019909116610100171660011790555b6001603355801561145c576000805461ff00191690555b50565b6114676136e5565b610e62826125fd565b606a546001600160a01b031681565b611487610c4b565b6114a35760405162461bcd60e51b81526004016104e0906148ea565b6114ab612437565b156114c85760405162461bcd60e51b81526004016104e09061482a565b6114d56020850185613937565b336001600160a01b038216146114fd5760405162461bcd60e51b81526004016104e0906148ba565b61150c36869003860186613b35565b60006115166122c3565b6001600160a01b031663269012a061152c6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561156457600080fd5b505afa158015611578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061159c9190810190613aab565b6001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115d457600080fd5b505afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061160c9190810190613a8d565b6040518263ffffffff1660e01b8152600401611628919061472d565b60206040518083038186803b15801561164057600080fd5b505afa158015611654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116789190810190613a8d565b90508160a0015181101561169e5760405162461bcd60e51b81526004016104e09061475a565b60006116a86122c3565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561170457600080fd5b505afa158015611718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061173c9190810190613955565b85608001516040518363ffffffff1660e01b815260040161175e9291906146f3565b60206040518083038186803b15801561177657600080fd5b505afa15801561178a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117ae9190810190613a6f565b905080156117ce5760405162461bcd60e51b81526004016104e09061478a565b6117db8360800151612bf8565b6117f75760405162461bcd60e51b81526004016104e0906148da565b8434146118165760405162461bcd60e51b81526004016104e0906147ca565b6000611820612f68565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d499061185e908f908f908f90600401614938565b606060405180830381600087803b15801561187857600080fd5b505af115801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118b09190810190613b90565b919450925090506118d2846118ca368f90038f018f613b35565b858585612f82565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b9084908111156119cf57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790553415611a0b57611a0b8434612912565b606c6000611a1c60208f018f613937565b6001600160a01b031681526020808201929092526040016000908120805460018101825590825291902001849055611a6684611a5d368f90038f018f613b35565b858585346131d1565b505050505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561118157600080fd5b6067546001600160a01b031681565b606a54604080516361aeb27560e11b815290516000926001600160a01b03169163c35d64ea916004808301926020929190829003018186803b15801561118157600080fd5b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611b3757fe5b14611b545760405162461bcd60e51b81526004016104e09061480a565b611b5c610c4b565b611b785760405162461bcd60e51b81526004016104e0906148ea565b611b80612437565b15611b9d5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316611bb2816124b1565b15611bcf5760405162461bcd60e51b81526004016104e09061477a565b6033805460010190819055611be384610fe3565b611bff5760405162461bcd60e51b81526004016104e0906147fa565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611c3d8261329c565b9050611c4a868333612b71565b6000611c546122c3565b6001600160a01b031663269012a0611c6a6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ca257600080fd5b505afa158015611cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cda9190810190613aab565b6001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d1257600080fd5b505afa158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d4a9190810190613a8d565b6040518263ffffffff1660e01b8152600401611d66919061472d565b60206040518083038186803b158015611d7e57600080fd5b505afa158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611db69190810190613a8d565b90506000611dd061271061080e858563ffffffff61258116565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611e039084903390600401614968565b600060405180830381600087803b158015611e1d57600080fd5b505af1158015611e31573d6000803e3d6000fd5b5050506000898152606d6020526040908190206001015490516001600160a01b03909116915089907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611e8a90339089908790614695565b60405180910390a3505050506033548114611eb75760405162461bcd60e51b81526004016104e09061490a565b50505050565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611ee757fe5b14611f045760405162461bcd60e51b81526004016104e09061480a565b611f0c610c4b565b611f285760405162461bcd60e51b81526004016104e0906148ea565b611f30612437565b15611f4d5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316611f62816124b1565b15611f7f5760405162461bcd60e51b81526004016104e09061477a565b603380546001019081905584611fa75760405162461bcd60e51b81526004016104e09061476a565b846000611fb386610e3a565b905081811015611fc1578091505b611fd1818363ffffffff61253616565b9050611fdd8683613390565b80612081576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b179055600981015460019091015461202690889083906001600160a01b0316612b71565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd419061207790859061472d565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb70815906120b39085903390600401614968565b600060405180830381600087803b1580156120cd57600080fd5b505af11580156120e1573d6000803e3d6000fd5b505050506120ed612747565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561214957600080fd5b505afa15801561215d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121819190810190613955565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156121ba57600080fd5b505afa1580156121ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f29190810190613955565b856040518463ffffffff1660e01b8152600401612211939291906146d8565b600060405180830381600087803b15801561222b57600080fd5b505af115801561223f573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf9061229890869033908790614983565b60405180910390a350506033548114610b745760405162461bcd60e51b81526004016104e09061490a565b60008060006040516122d49061466e565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106123b657fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561242b57602002820191906000526020600020905b815481526020019060010190808311612417575b50505050509050919050565b60006124416122c3565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561247957600080fd5b505afa15801561248d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b99190810190613a6f565b60006124bb6122c3565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016124e69190614679565b60206040518083038186803b1580156124fe57600080fd5b505afa158015612512573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e629190810190613a6f565b600061257883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061344c565b90505b92915050565b6000826125905750600061257b565b8282028284828161259d57fe5b04146125785760405162461bcd60e51b81526004016104e09061484a565b600061257883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061347d565b6126056136e5565b6000828152606d60205260408120600901549080612622856134b4565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006126586122c3565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561269057600080fd5b505afa1580156126a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126c89190810190613aab565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b81526004016126f59291906146f3565b602060405180830381600087803b15801561270f57600080fd5b505af1158015612723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e629190810190613955565b60006127516122c3565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b15801561278957600080fd5b505afa15801561279d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b99190810190613aab565b6127c9610c4b565b156127e65760405162461bcd60e51b81526004016104e09061491a565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b602082015261282d906001600160a01b0386169063ffffffff6134d816565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f4144445245535300000000602082015261287b906001600160a01b0385169063ffffffff6134d816565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f41444452455353000000000060208201526128c9906001600160a01b0384169063ffffffff6134d816565b6128d281613505565b50606980546001600160a01b039485166001600160a01b031991821617909155606a805493851693821693909317909255606b8054919093169116179055565b606654612925908263ffffffff61296b16565b6066556000828152606d602052604090206009015461294a908263ffffffff61296b16565b6000928352606d602052604090922060098101929092555042600a90910155565b6000828201838110156125785760405162461bcd60e51b81526004016104e0906147aa565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906129c457508115155b949350505050565b6129d683836135b7565b8190611eb75760405162461bcd60e51b81526004016104e09190614749565b600080612a0183610e3a565b6000848152606d60205260409020600401549091506129c461271061080e848463ffffffff61258116565b600080612ac6606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a8057600080fd5b505afa158015612a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ab89190810190613955565b6001600160a01b03166135c9565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b158015612b1857600080fd5b505afa158015612b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b509190810190613a8d565b90506000612b688361080e878563ffffffff61258116565b95945050505050565b606654612b84908363ffffffff61253616565b6066556000838152606d6020526040902060090154612ba9908363ffffffff61253616565b6000848152606d60205260408082206009019290925590516001600160a01b0383169184156108fc02918591818181858888f19350505050158015611eb7573d6000803e3d6000fd5b303b1590565b600080612c036122c3565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612c3b57600080fd5b505afa158015612c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c739190810190613aab565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612ccf57600080fd5b505afa158015612ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d079190810190613955565b6067546040516001600160e01b031960e085901b168152612d3592916001600160a01b0316906004016146bd565b60206040518083038186803b158015612d4d57600080fd5b505afa158015612d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d859190810190613955565b90506001600160a01b038116612dad5760405162461bcd60e51b81526004016104e09061488a565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612deb906b14dd5c1c1b1e551bd119589d60a21b9060040161472d565b60206040518083038186803b158015612e0357600080fd5b505afa158015612e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e3b9190810190613a8d565b90506000612e47612747565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612ea357600080fd5b505afa158015612eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612edb9190810190613955565b6067546040516001600160e01b031960e085901b168152612f0b92916001600160a01b0316908a906004016146d8565b60206040518083038186803b158015612f2357600080fd5b505afa158015612f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f5b9190810190613a8d565b9190911115949350505050565b606854612f7c81600163ffffffff61296b16565b60685590565b612f8a61370f565b6000612f946122c3565b6001600160a01b031663269012a0612faa6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612fe257600080fd5b505afa158015612ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061301a9190810190613aab565b6001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b15801561305257600080fd5b505afa158015613066573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061308a9190810190613a8d565b6040518263ffffffff1660e01b81526004016130a6919061472d565b60206040518083038186803b1580156130be57600080fd5b505afa1580156130d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130f69190810190613a8d565b9050600061310a428363ffffffff61296b16565b90506040518061018001604052808981526020016040518060c001604052808a600001516001600160a01b031681526020018a602001516001600160a01b031681526020018981526020018881526020018781526020018a60a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600160038111156131bb57fe5b8152600060209091015298975050505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f81526020019081526020016000206007015460405161323f959493929190614a56565b60405180910390a480156132945784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c8360405161328b919061472d565b60405180910390a35b505050505050565b6000806132f0606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a8057600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561334257600080fd5b505afa158015613356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061337a9190810190613a8d565b90506129c48161080e868563ffffffff61258116565b6000828152606d60205260409020600b0154811115613413576000828152606d60205260409020600b015481906133ce90829063ffffffff61253616565b6000848152606d60205260408120600b810191909155600c01549091506133fb908263ffffffff61253616565b6000848152606d60205260409020600c015550613448565b6000828152606d60205260409020600b0154613435908263ffffffff61253616565b6000838152606d60205260409020600b01555b5050565b600081848411156134705760405162461bcd60e51b81526004016104e09190614749565b50508183035b9392505050565b6000818361349e5760405162461bcd60e51b81526004016104e09190614749565b5060008385816134aa57fe5b0495945050505050565b60008060006134c2846129f5565b9050806134ce82612a2c565b9250925050915091565b6134e18261364a565b81906135005760405162461bcd60e51b81526004016104e09190614749565b505050565b61350d610c4b565b1561352a5760405162461bcd60e51b81526004016104e09061491a565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f5649444544000000000000006020820152613578906001600160a01b0383169063ffffffff6134d816565b61358a816001600160a01b0316612990565b6135a65760405162461bcd60e51b81526004016104e0906147ea565b6135ae613658565b61145c81613676565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561360557600080fd5b505afa158015613619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061363d9190810190613bd3565b60ff16600a0a9392505050565b6001600160a01b0316151590565b600060405161366690614663565b6040519081900390206001905550565b61368f6136816122c3565b6001600160a01b031661364a565b156136995761145c565b6136ab816001600160a01b0316612990565b6136c75760405162461bcd60e51b81526004016104e0906147ea565b60006040516136d59061466e565b6040519081900390208290555050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6040518061018001604052806000815260200161372a61378a565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000600381111561377d57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b803561257b81614ba4565b805161257b81614ba4565b60008083601f8401126137fa57600080fd5b50813567ffffffffffffffff81111561381257600080fd5b6020830191508361014082028301111561382b57600080fd5b9250929050565b805161257b81614bb8565b803561257b81614bc1565b805161257b81614bc1565b805161257b81614bca565b600060e0828403121561387057600080fd5b50919050565b600060e0828403121561388857600080fd5b61389260e0614aa2565b905060006138a084846137d2565b82525060206138b1848483016137d2565b60208301525060406138c5848285016137d2565b60408301525060606138d98482850161383d565b60608301525060806138ed8482850161383d565b60808301525060a06139018482850161383d565b60a08301525060c06139158482850161383d565b60c08301525092915050565b803561257b81614bd3565b805161257b81614bd3565b60006020828403121561394957600080fd5b60006129c484846137d2565b60006020828403121561396757600080fd5b60006129c484846137dd565b600080600080600060a0868803121561398b57600080fd5b600061399788886137d2565b95505060206139a8888289016137d2565b94505060406139b9888289016137d2565b93505060606139ca888289016137d2565b92505060806139db888289016137d2565b9150509295509295909350565b600080604083850312156139fb57600080fd5b6000613a0785856137d2565b9250506020613a188582860161383d565b9150509250929050565b600080600060608486031215613a3757600080fd5b6000613a4386866137d2565b9350506020613a548682870161383d565b9250506040613a658682870161383d565b9150509250925092565b600060208284031215613a8157600080fd5b60006129c48484613832565b600060208284031215613a9f57600080fd5b60006129c48484613848565b600060208284031215613abd57600080fd5b60006129c48484613853565b6000806000806101208587031215613ae057600080fd5b6000613aec878761385e565b94505060e085013567ffffffffffffffff811115613b0957600080fd5b613b15878288016137e8565b9350935050610100613b298782880161383d565b91505092959194509250565b600060e08284031215613b4757600080fd5b60006129c48484613876565b600060208284031215613b6557600080fd5b60006129c4848461383d565b60008060408385031215613b8457600080fd5b6000613a07858561383d565b600080600060608486031215613ba557600080fd5b6000613bb18686613848565b9350506020613bc286828701613848565b9250506040613a6586828701613848565b600060208284031215613be557600080fd5b60006129c4848461392c565b6000613bfd83836144c6565b50506101400190565b6000613c128383613ce1565b505060200190565b613c2381614b4e565b82525050565b613c2381614b17565b6000613c3e8385614add565b9350613c4982614ac9565b8060005b85811015613c7f57613c5f8284614b04565b613c698882613bf1565b9750613c7483614ad6565b925050600101613c4d565b509495945050505050565b6000613c9582614ad2565b613c9f8185614add565b9350613caa83614acc565b8060005b83811015613c7f578151613cc28882613c06565b9750613ccd83614acc565b925050600101613cae565b613c2381614b22565b613c2381614ac9565b613c2381614b27565b613c2381614b59565b6000613d0782614ad2565b613d118185614add565b9350613d21818560208601614b64565b613d2a81614b90565b9093019392505050565b6000613d41601d83614add565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000613d7a601c83610e65565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000613db3601583614add565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b6000613de4601683614add565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b6000613e16601983614add565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b6000613e4f601183614add565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000613e7c601b83614add565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000613eb5601983614add565b7f424f52524f5745525f4c4f414e5f49445f4d49534d4154434800000000000000815260200192915050565b6000613eee601483614add565b73125390d3d4949150d517d1551217d05353d5539560621b815260200192915050565b6000613f1e601683614add565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b6000613f50601b83614add565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000613f89601783614add565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000613fc2600f83614add565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b6000613fed601483614add565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b600061401d601283614add565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b600061404b601883614add565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000614084602183614add565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b60006140c7601d83614add565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b6000614100601283614add565b711313d05397d511549354d7d156141254915160721b815260200192915050565b600061412e602e83614add565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b600061417e601883614add565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b60006141b7601383614add565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b60006141e6601e83614add565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061421f601783614add565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b6000614258601683614add565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b600061428a601883610e65565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006142c3601a83614add565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b60006142fc601883614add565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614335600c83614add565b6b1313d05397d393d517d4d15560a21b815260200192915050565b600061435d601f83614add565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614396601c83614add565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b805160808301906143d38482613ce1565b5060208201516143e66020850182613ce1565b5060408201516143f96040850182613ce1565b506060820151611eb76060850182613cd8565b60e0820161441a8280614ae6565b6144248482613c29565b506144326020830183614ae6565b61443f6020850182613c29565b5061444d6040830183614ae6565b61445a6040850182613c29565b506144686060830183614af5565b6144756060850182613ce1565b506144836080830183614af5565b6144906080850182613ce1565b5061449e60a0830183614af5565b6144ab60a0850182613ce1565b506144b960c0830183614af5565b611eb760c0850182613ce1565b61014082016144d58280614ae6565b6144df8482613c29565b506144ed6020830183614ae6565b6144fa6020850182613c29565b506145086040830183614af5565b6145156040850182613ce1565b506145236060830183614af5565b6145306060850182613ce1565b5061453e6080830183614af5565b61454b6080850182613ce1565b5061455960a0830183614af5565b61456660a0850182613ce1565b5061457460c0830183614b04565b611eb760c08501826145f1565b805160c08301906145928482613c29565b5060208201516145a56020850182613c29565b5060408201516145b86040850182613ce1565b5060608201516145cb6060850182613ce1565b5060808201516145de6080850182613ce1565b5060a0820151611eb760a0850182613ce1565b608082016145ff8280614af5565b6146098482613ce1565b506146176020830183614b08565b614624602085018261465a565b506146326040830183614af5565b61463f6040850182613ce1565b5061464d6060830183614af5565b611eb76060850182613ce1565b613c2381614b48565b600061257b82613d6d565b600061257b8261427d565b6020810161257b8284613c29565b6020810161257b8284613c1a565b606081016146a38286613c1a565b6146b06020830185613ce1565b6129c46040830184613ce1565b604081016146cb8285613c29565b6134766020830184613c29565b606081016146e68286613c29565b6146b06020830185613c29565b604081016147018285613c29565b6134766020830184613ce1565b602080825281016125788184613c8a565b6020810161257b8284613cd8565b6020810161257b8284613ce1565b6020810161257b8284613cea565b602080825281016125788184613cfc565b60208082528101610e6281613d34565b60208082528101610e6281613da6565b60208082528101610e6281613dd7565b60208082528101610e6281613e09565b60208082528101610e6281613e42565b60208082528101610e6281613e6f565b60208082528101610e6281613ea8565b60208082528101610e6281613ee1565b60208082528101610e6281613f11565b60208082528101610e6281613f43565b60208082528101610e6281613f7c565b60208082528101610e6281613fb5565b60208082528101610e6281613fe0565b60208082528101610e6281614010565b60208082528101610e628161403e565b60208082528101610e6281614077565b60208082528101610e62816140ba565b60208082528101610e62816140f3565b60208082528101610e6281614121565b60208082528101610e6281614171565b60208082528101610e62816141aa565b60208082528101610e62816141d9565b60208082528101610e6281614212565b60208082528101610e628161424b565b60208082528101610e62816142b6565b60208082528101610e62816142ef565b60208082528101610e6281614328565b60208082528101610e6281614350565b60208082528101610e6281614389565b6080810161257b82846143c2565b6101008101614947828661440c565b81810360e0830152612b68818486613c32565b604081016146cb8285613ce1565b604081016149768285613ce1565b6134766020830184613c1a565b606081016149918286613ce1565b6146b06020830185613c1a565b61022081016149ad828f613ce1565b6149ba602083018e614581565b6149c760e083018d613ce1565b6149d561010083018c613ce1565b6149e361012083018b613ce1565b6149f161014083018a613ce1565b6149ff610160830189613ce1565b614a0d610180830188613ce1565b614a1b6101a0830187613ce1565b614a296101c0830186613c29565b614a376101e0830185613cf3565b614a45610200830184613cd8565b9d9c50505050505050505050505050565b60a08101614a648288613ce1565b614a716020830187613ce1565b614a7e6040830186613ce1565b614a8b6060830185613ce1565b614a986080830184613ce1565b9695505050505050565b60405181810167ffffffffffffffff81118282101715614ac157600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b600061257860208401846137d2565b6000612578602084018461383d565b5090565b60006125786020840184613921565b6000610e6282614b3c565b151590565b6000610e6282614b17565b80610e6581614b9a565b6001600160a01b031690565b60ff1690565b6000610e6282614b27565b6000610e6282614b32565b60005b83811015614b7f578181015183820152602001614b67565b83811115611eb75750506000910152565b601f01601f191690565b6004811061145c57fe5b614bad81614b17565b811461145c57600080fd5b614bad81614b22565b614bad81614ac9565b614bad81614b27565b614bad81614b4856fea365627a7a72315820e55f3dd0705a350feeddde15009289b8d6fefdaf03e3128df733a83ff5d5193d6c6578706572696d656e74616cf564736f6c63430005110040",
  "deployedBytecode": "0x6080604052600436106101815760003560e01c80638129fc1c116100d1578063c35d64ea1161008a578063e06174e411610064578063e06174e4146103ff578063e1ec3c6814610414578063e3ed19021461044c578063eee8b7ff1461046c57610181565b8063c35d64ea146103aa578063ccdd9f5d146103bf578063d8aed145146103df57610181565b80638129fc1c14610316578063934b5d131461032b578063a59a997314610358578063a5c5c7b21461036d578063aaaca55814610380578063b2016bd41461039557610181565b80634ac8eb5f1161013e57806358895e3d1161011857806358895e3d1461029f5780636948f32b146102c157806369e527da146102e1578063767a7b05146102f657610181565b80634ac8eb5f14610255578063513484541461026a578063530e784f1461027f57610181565b806302bc2cdb146101865780631459457a146101a8578063158ef93e146101c85780631a74856b146101f35780632630c12f146102065780633b92930014610228575b600080fd5b34801561019257600080fd5b506101a66101a1366004613b71565b610499565b005b3480156101b457600080fd5b506101a66101c3366004613973565b610b7b565b3480156101d457600080fd5b506101dd610c4b565b6040516101ea919061471f565b60405180910390f35b6101a6610201366004613a22565b610c6a565b34801561021257600080fd5b5061021b610e2b565b6040516101ea9190614679565b34801561023457600080fd5b50610248610243366004613b53565b610e3a565b6040516101ea919061472d565b34801561026157600080fd5b50610248610e6a565b34801561027657600080fd5b50610248610e70565b34801561028b57600080fd5b506101a661029a366004613937565b610e76565b3480156102ab57600080fd5b506102b4610fd4565b6040516101ea919061473b565b3480156102cd57600080fd5b506101dd6102dc366004613b53565b610fe3565b3480156102ed57600080fd5b5061021b61113c565b34801561030257600080fd5b506101a6610311366004613b71565b6111be565b34801561032257600080fd5b506101a66113d7565b34801561033757600080fd5b5061034b610346366004613b53565b61145f565b6040516101ea919061492a565b34801561036457600080fd5b506102b4611470565b6101a661037b366004613ac9565b61147f565b34801561038c57600080fd5b5061021b611a74565b3480156103a157600080fd5b5061021b611ab9565b3480156103b657600080fd5b5061021b611ac8565b3480156103cb57600080fd5b506101a66103da366004613b53565b611b0d565b3480156103eb57600080fd5b506101a66103fa366004613b71565b611ebd565b34801561040b57600080fd5b506102b46122c3565b34801561042057600080fd5b5061043461042f366004613b53565b6122e5565b6040516101ea9c9b9a9998979695949392919061499e565b34801561045857600080fd5b506102486104673660046139e8565b61239d565b34801561047857600080fd5b5061048c610487366004613937565b6123cb565b6040516101ea919061470e565b8160016000828152606d60205260409020600e0154600160a01b900460ff1660038111156104c357fe5b146104e95760405162461bcd60e51b81526004016104e0906148fa565b60405180910390fd5b6104f1610c4b565b61050d5760405162461bcd60e51b81526004016104e0906148ea565b610515612437565b156105325760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316610547816124b1565b156105645760405162461bcd60e51b81526004016104e09061477a565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146105a95760405162461bcd60e51b81526004016104e0906148ba565b6000868152606d60205260409020600501548511156105da5760405162461bcd60e51b81526004016104e09061479a565b6000868152606d602052604090206007015442111561060b5760405162461bcd60e51b81526004016104e09061486a565b6107856106166122c3565b6001600160a01b031663269012a061062c6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561066457600080fd5b505afa158015610678573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061069c9190810190613aab565b6001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b1580156106d457600080fd5b505afa1580156106e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061070c9190810190613a8d565b6040518263ffffffff1660e01b8152600401610728919061472d565b60206040518083038186803b15801561074057600080fd5b505afa158015610754573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107789190810190613a8d565b429063ffffffff61253616565b6000878152606d60205260409020600a015411156107b55760405162461bcd60e51b81526004016104e09061485a565b6000868152606d60205260409020600d8101869055600b8101869055600681015460039091015461081a916301e133809161080e9161271091839190610802908c9063ffffffff61258116565b9063ffffffff61258116565b9063ffffffff6125bb16565b6000878152606d60205260409020600c01556108346136e5565b61083d876125fd565b90508060600151156108615760405162461bcd60e51b81526004016104e09061483a565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556108928761264e565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e926108ea928b92169060040161495a565b600060405180830381600087803b15801561090457600080fd5b505af1158015610918573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc6879061095e9030908b906004016146f3565b600060405180830381600087803b15801561097857600080fd5b505af115801561098c573d6000803e3d6000fd5b50505050610998612747565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f457600080fd5b505afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a2c9190810190613955565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015610a6557600080fd5b505afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610a9d9190810190613955565b896040518463ffffffff1660e01b8152600401610abc939291906146d8565b600060405180830381600087803b158015610ad657600080fd5b505af1158015610aea573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610b49908b9061472d565b60405180910390a450506033548114610b745760405162461bcd60e51b81526004016104e09061490a565b5050505050565b610b83610c4b565b15610ba05760405162461bcd60e51b81526004016104e09061491a565b610bac858585856127c1565b610bb46122c3565b6001600160a01b031663a734f06e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610bec57600080fd5b505afa158015610c00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610c249190810190613955565b606780546001600160a01b0319166001600160a01b03929092169190911790555050505050565b600080604051610c5a90614663565b6040519081900390205492915050565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610c9457fe5b1480610cc6575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610cc457fe5b145b610ce25760405162461bcd60e51b81526004016104e0906147da565b610cea610c4b565b610d065760405162461bcd60e51b81526004016104e0906148ea565b610d0e612437565b15610d2b5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316610d40816124b1565b15610d5d5760405162461bcd60e51b81526004016104e09061477a565b6000848152606d60205260409020600101546001600160a01b03868116911614610d995760405162461bcd60e51b81526004016104e0906147ba565b823414610db85760405162461bcd60e51b81526004016104e0906147ca565b60003411610dd85760405162461bcd60e51b81526004016104e09061489a565b610de28484612912565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610e1c919061472d565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610e629163ffffffff61296b16565b90505b919050565b60665481565b60685481565b610e7e610c4b565b610e9a5760405162461bcd60e51b81526004016104e0906148ea565b610ea26122c3565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b8152600401610ecd9190614687565b60006040518083038186803b158015610ee557600080fd5b505afa158015610ef9573d6000803e3d6000fd5b50505050610f0f816001600160a01b0316612990565b610f2b5760405162461bcd60e51b81526004016104e0906148aa565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b0390911690610f81908290849063ffffffff6129cc16565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b6000610fed612437565b806110085750606a54611008906001600160a01b03166124b1565b8061103a575060026000838152606d60205260409020600e0154600160a01b900460ff16600381111561103757fe5b14155b1561104757506000610e65565b6000828152606d602052604081206008810154600690910154909142611073848463ffffffff61296b16565b10905080156110885760019350505050610e65565b6000858152606d60205260409020600e01546001600160a01b0316801561112557806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156110e257600080fd5b505afa1580156110f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061111a9190810190613a6f565b945050505050610e65565b61112e866125fd565b606001519695505050505050565b606a54604080516334f293ed60e11b815290516000926001600160a01b0316916369e527da916004808301926020929190829003018186803b15801561118157600080fd5b505afa158015611195573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b99190810190613955565b905090565b8060016000828152606d60205260409020600e0154600160a01b900460ff1660038111156111e857fe5b148061121a575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561121857fe5b145b6112365760405162461bcd60e51b81526004016104e0906147da565b61123e610c4b565b61125a5760405162461bcd60e51b81526004016104e0906148ea565b611262612437565b1561127f5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316611294816124b1565b156112b15760405162461bcd60e51b81526004016104e09061477a565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146112f55760405162461bcd60e51b81526004016104e0906148ca565b600085116113155760405162461bcd60e51b81526004016104e09061481a565b6000611320856129f5565b9050600061132d82612a2c565b6000878152606d602052604081206009015491925090611353908363ffffffff61253616565b9050878111156113605750865b801561137157611371878233612b71565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41836040516113ab919061472d565b60405180910390a35050506033548114610b745760405162461bcd60e51b81526004016104e09061490a565b600054610100900460ff16806113f057506113f0612bf2565b806113fe575060005460ff16155b61141a5760405162461bcd60e51b81526004016104e09061487a565b600054610100900460ff16158015611445576000805460ff1961ff0019909116610100171660011790555b6001603355801561145c576000805461ff00191690555b50565b6114676136e5565b610e62826125fd565b606a546001600160a01b031681565b611487610c4b565b6114a35760405162461bcd60e51b81526004016104e0906148ea565b6114ab612437565b156114c85760405162461bcd60e51b81526004016104e09061482a565b6114d56020850185613937565b336001600160a01b038216146114fd5760405162461bcd60e51b81526004016104e0906148ba565b61150c36869003860186613b35565b60006115166122c3565b6001600160a01b031663269012a061152c6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561156457600080fd5b505afa158015611578573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061159c9190810190613aab565b6001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156115d457600080fd5b505afa1580156115e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061160c9190810190613a8d565b6040518263ffffffff1660e01b8152600401611628919061472d565b60206040518083038186803b15801561164057600080fd5b505afa158015611654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116789190810190613a8d565b90508160a0015181101561169e5760405162461bcd60e51b81526004016104e09061475a565b60006116a86122c3565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561170457600080fd5b505afa158015611718573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061173c9190810190613955565b85608001516040518363ffffffff1660e01b815260040161175e9291906146f3565b60206040518083038186803b15801561177657600080fd5b505afa15801561178a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117ae9190810190613a6f565b905080156117ce5760405162461bcd60e51b81526004016104e09061478a565b6117db8360800151612bf8565b6117f75760405162461bcd60e51b81526004016104e0906148da565b8434146118165760405162461bcd60e51b81526004016104e0906147ca565b6000611820612f68565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d499061185e908f908f908f90600401614938565b606060405180830381600087803b15801561187857600080fd5b505af115801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118b09190810190613b90565b919450925090506118d2846118ca368f90038f018f613b35565b858585612f82565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b9084908111156119cf57fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790553415611a0b57611a0b8434612912565b606c6000611a1c60208f018f613937565b6001600160a01b031681526020808201929092526040016000908120805460018101825590825291902001849055611a6684611a5d368f90038f018f613b35565b858585346131d1565b505050505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b15801561118157600080fd5b6067546001600160a01b031681565b606a54604080516361aeb27560e11b815290516000926001600160a01b03169163c35d64ea916004808301926020929190829003018186803b15801561118157600080fd5b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611b3757fe5b14611b545760405162461bcd60e51b81526004016104e09061480a565b611b5c610c4b565b611b785760405162461bcd60e51b81526004016104e0906148ea565b611b80612437565b15611b9d5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316611bb2816124b1565b15611bcf5760405162461bcd60e51b81526004016104e09061477a565b6033805460010190819055611be384610fe3565b611bff5760405162461bcd60e51b81526004016104e0906147fa565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611c3d8261329c565b9050611c4a868333612b71565b6000611c546122c3565b6001600160a01b031663269012a0611c6a6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611ca257600080fd5b505afa158015611cb6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611cda9190810190613aab565b6001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b158015611d1257600080fd5b505afa158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d4a9190810190613a8d565b6040518263ffffffff1660e01b8152600401611d66919061472d565b60206040518083038186803b158015611d7e57600080fd5b505afa158015611d92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611db69190810190613a8d565b90506000611dd061271061080e858563ffffffff61258116565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b02790611e039084903390600401614968565b600060405180830381600087803b158015611e1d57600080fd5b505af1158015611e31573d6000803e3d6000fd5b5050506000898152606d6020526040908190206001015490516001600160a01b03909116915089907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a0690611e8a90339089908790614695565b60405180910390a3505050506033548114611eb75760405162461bcd60e51b81526004016104e09061490a565b50505050565b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611ee757fe5b14611f045760405162461bcd60e51b81526004016104e09061480a565b611f0c610c4b565b611f285760405162461bcd60e51b81526004016104e0906148ea565b611f30612437565b15611f4d5760405162461bcd60e51b81526004016104e09061482a565b606a546001600160a01b0316611f62816124b1565b15611f7f5760405162461bcd60e51b81526004016104e09061477a565b603380546001019081905584611fa75760405162461bcd60e51b81526004016104e09061476a565b846000611fb386610e3a565b905081811015611fc1578091505b611fd1818363ffffffff61253616565b9050611fdd8683613390565b80612081576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b179055600981015460019091015461202690889083906001600160a01b0316612b71565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd419061207790859061472d565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb70815906120b39085903390600401614968565b600060405180830381600087803b1580156120cd57600080fd5b505af11580156120e1573d6000803e3d6000fd5b505050506120ed612747565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561214957600080fd5b505afa15801561215d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121819190810190613955565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156121ba57600080fd5b505afa1580156121ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121f29190810190613955565b856040518463ffffffff1660e01b8152600401612211939291906146d8565b600060405180830381600087803b15801561222b57600080fd5b505af115801561223f573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf9061229890869033908790614983565b60405180910390a350506033548114610b745760405162461bcd60e51b81526004016104e09061490a565b60008060006040516122d49061466e565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106123b657fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561242b57602002820191906000526020600020905b815481526020019060010190808311612417575b50505050509050919050565b60006124416122c3565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b15801561247957600080fd5b505afa15801561248d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b99190810190613a6f565b60006124bb6122c3565b6001600160a01b0316633b668321836040518263ffffffff1660e01b81526004016124e69190614679565b60206040518083038186803b1580156124fe57600080fd5b505afa158015612512573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e629190810190613a6f565b600061257883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061344c565b90505b92915050565b6000826125905750600061257b565b8282028284828161259d57fe5b04146125785760405162461bcd60e51b81526004016104e09061484a565b600061257883836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061347d565b6126056136e5565b6000828152606d60205260408120600901549080612622856134b4565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b60006126586122c3565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b15801561269057600080fd5b505afa1580156126a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506126c89190810190613aab565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b81526004016126f59291906146f3565b602060405180830381600087803b15801561270f57600080fd5b505af1158015612723573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610e629190810190613955565b60006127516122c3565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b15801561278957600080fd5b505afa15801561279d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506111b99190810190613aab565b6127c9610c4b565b156127e65760405162461bcd60e51b81526004016104e09061491a565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b602082015261282d906001600160a01b0386169063ffffffff6134d816565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f4144445245535300000000602082015261287b906001600160a01b0385169063ffffffff6134d816565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f41444452455353000000000060208201526128c9906001600160a01b0384169063ffffffff6134d816565b6128d281613505565b50606980546001600160a01b039485166001600160a01b031991821617909155606a805493851693821693909317909255606b8054919093169116179055565b606654612925908263ffffffff61296b16565b6066556000828152606d602052604090206009015461294a908263ffffffff61296b16565b6000928352606d602052604090922060098101929092555042600a90910155565b6000828201838110156125785760405162461bcd60e51b81526004016104e0906147aa565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708181148015906129c457508115155b949350505050565b6129d683836135b7565b8190611eb75760405162461bcd60e51b81526004016104e09190614749565b600080612a0183610e3a565b6000848152606d60205260409020600401549091506129c461271061080e848463ffffffff61258116565b600080612ac6606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a8057600080fd5b505afa158015612a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612ab89190810190613955565b6001600160a01b03166135c9565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b158015612b1857600080fd5b505afa158015612b2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612b509190810190613a8d565b90506000612b688361080e878563ffffffff61258116565b95945050505050565b606654612b84908363ffffffff61253616565b6066556000838152606d6020526040902060090154612ba9908363ffffffff61253616565b6000848152606d60205260408082206009019290925590516001600160a01b0383169184156108fc02918591818181858888f19350505050158015611eb7573d6000803e3d6000fd5b303b1590565b600080612c036122c3565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612c3b57600080fd5b505afa158015612c4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612c739190810190613aab565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612ccf57600080fd5b505afa158015612ce3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d079190810190613955565b6067546040516001600160e01b031960e085901b168152612d3592916001600160a01b0316906004016146bd565b60206040518083038186803b158015612d4d57600080fd5b505afa158015612d61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612d859190810190613955565b90506001600160a01b038116612dad5760405162461bcd60e51b81526004016104e09061488a565b604051632319178560e11b81526000906001600160a01b038316906346322f0a90612deb906b14dd5c1c1b1e551bd119589d60a21b9060040161472d565b60206040518083038186803b158015612e0357600080fd5b505afa158015612e17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e3b9190810190613a8d565b90506000612e47612747565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612ea357600080fd5b505afa158015612eb7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612edb9190810190613955565b6067546040516001600160e01b031960e085901b168152612f0b92916001600160a01b0316908a906004016146d8565b60206040518083038186803b158015612f2357600080fd5b505afa158015612f37573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f5b9190810190613a8d565b9190911115949350505050565b606854612f7c81600163ffffffff61296b16565b60685590565b612f8a61370f565b6000612f946122c3565b6001600160a01b031663269012a0612faa6122c3565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015612fe257600080fd5b505afa158015612ff6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061301a9190810190613aab565b6001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b15801561305257600080fd5b505afa158015613066573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061308a9190810190613a8d565b6040518263ffffffff1660e01b81526004016130a6919061472d565b60206040518083038186803b1580156130be57600080fd5b505afa1580156130d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506130f69190810190613a8d565b9050600061310a428363ffffffff61296b16565b90506040518061018001604052808981526020016040518060c001604052808a600001516001600160a01b031681526020018a602001516001600160a01b031681526020018981526020018881526020018781526020018a60a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600160038111156131bb57fe5b8152600060209091015298975050505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f81526020019081526020016000206007015460405161323f959493929190614a56565b60405180910390a480156132945784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c8360405161328b919061472d565b60405180910390a35b505050505050565b6000806132f0606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612a8057600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561334257600080fd5b505afa158015613356573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061337a9190810190613a8d565b90506129c48161080e868563ffffffff61258116565b6000828152606d60205260409020600b0154811115613413576000828152606d60205260409020600b015481906133ce90829063ffffffff61253616565b6000848152606d60205260408120600b810191909155600c01549091506133fb908263ffffffff61253616565b6000848152606d60205260409020600c015550613448565b6000828152606d60205260409020600b0154613435908263ffffffff61253616565b6000838152606d60205260409020600b01555b5050565b600081848411156134705760405162461bcd60e51b81526004016104e09190614749565b50508183035b9392505050565b6000818361349e5760405162461bcd60e51b81526004016104e09190614749565b5060008385816134aa57fe5b0495945050505050565b60008060006134c2846129f5565b9050806134ce82612a2c565b9250925050915091565b6134e18261364a565b81906135005760405162461bcd60e51b81526004016104e09190614749565b505050565b61350d610c4b565b1561352a5760405162461bcd60e51b81526004016104e09061491a565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f5649444544000000000000006020820152613578906001600160a01b0383169063ffffffff6134d816565b61358a816001600160a01b0316612990565b6135a65760405162461bcd60e51b81526004016104e0906147ea565b6135ae613658565b61145c81613676565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561360557600080fd5b505afa158015613619573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061363d9190810190613bd3565b60ff16600a0a9392505050565b6001600160a01b0316151590565b600060405161366690614663565b6040519081900390206001905550565b61368f6136816122c3565b6001600160a01b031661364a565b156136995761145c565b6136ab816001600160a01b0316612990565b6136c75760405162461bcd60e51b81526004016104e0906147ea565b60006040516136d59061466e565b6040519081900390208290555050565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b6040518061018001604052806000815260200161372a61378a565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b031681526020016000600381111561377d57fe5b8152600060209091015290565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b803561257b81614ba4565b805161257b81614ba4565b60008083601f8401126137fa57600080fd5b50813567ffffffffffffffff81111561381257600080fd5b6020830191508361014082028301111561382b57600080fd5b9250929050565b805161257b81614bb8565b803561257b81614bc1565b805161257b81614bc1565b805161257b81614bca565b600060e0828403121561387057600080fd5b50919050565b600060e0828403121561388857600080fd5b61389260e0614aa2565b905060006138a084846137d2565b82525060206138b1848483016137d2565b60208301525060406138c5848285016137d2565b60408301525060606138d98482850161383d565b60608301525060806138ed8482850161383d565b60808301525060a06139018482850161383d565b60a08301525060c06139158482850161383d565b60c08301525092915050565b803561257b81614bd3565b805161257b81614bd3565b60006020828403121561394957600080fd5b60006129c484846137d2565b60006020828403121561396757600080fd5b60006129c484846137dd565b600080600080600060a0868803121561398b57600080fd5b600061399788886137d2565b95505060206139a8888289016137d2565b94505060406139b9888289016137d2565b93505060606139ca888289016137d2565b92505060806139db888289016137d2565b9150509295509295909350565b600080604083850312156139fb57600080fd5b6000613a0785856137d2565b9250506020613a188582860161383d565b9150509250929050565b600080600060608486031215613a3757600080fd5b6000613a4386866137d2565b9350506020613a548682870161383d565b9250506040613a658682870161383d565b9150509250925092565b600060208284031215613a8157600080fd5b60006129c48484613832565b600060208284031215613a9f57600080fd5b60006129c48484613848565b600060208284031215613abd57600080fd5b60006129c48484613853565b6000806000806101208587031215613ae057600080fd5b6000613aec878761385e565b94505060e085013567ffffffffffffffff811115613b0957600080fd5b613b15878288016137e8565b9350935050610100613b298782880161383d565b91505092959194509250565b600060e08284031215613b4757600080fd5b60006129c48484613876565b600060208284031215613b6557600080fd5b60006129c4848461383d565b60008060408385031215613b8457600080fd5b6000613a07858561383d565b600080600060608486031215613ba557600080fd5b6000613bb18686613848565b9350506020613bc286828701613848565b9250506040613a6586828701613848565b600060208284031215613be557600080fd5b60006129c4848461392c565b6000613bfd83836144c6565b50506101400190565b6000613c128383613ce1565b505060200190565b613c2381614b4e565b82525050565b613c2381614b17565b6000613c3e8385614add565b9350613c4982614ac9565b8060005b85811015613c7f57613c5f8284614b04565b613c698882613bf1565b9750613c7483614ad6565b925050600101613c4d565b509495945050505050565b6000613c9582614ad2565b613c9f8185614add565b9350613caa83614acc565b8060005b83811015613c7f578151613cc28882613c06565b9750613ccd83614acc565b925050600101613cae565b613c2381614b22565b613c2381614ac9565b613c2381614b27565b613c2381614b59565b6000613d0782614ad2565b613d118185614add565b9350613d21818560208601614b64565b613d2a81614b90565b9093019392505050565b6000613d41601d83614add565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000613d7a601c83610e65565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b6000613db3601583614add565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b6000613de4601683614add565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b6000613e16601983614add565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b6000613e4f601183614add565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b6000613e7c601b83614add565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b6000613eb5601983614add565b7f424f52524f5745525f4c4f414e5f49445f4d49534d4154434800000000000000815260200192915050565b6000613eee601483614add565b73125390d3d4949150d517d1551217d05353d5539560621b815260200192915050565b6000613f1e601683614add565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b6000613f50601b83614add565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000613f89601783614add565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000613fc2600f83614add565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b6000613fed601483614add565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b600061401d601283614add565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b600061404b601883614add565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000614084602183614add565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b60006140c7601d83614add565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b6000614100601283614add565b711313d05397d511549354d7d156141254915160721b815260200192915050565b600061412e602e83614add565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b600061417e601883614add565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b60006141b7601383614add565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b60006141e6601e83614add565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b600061421f601783614add565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b6000614258601683614add565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b600061428a601883610e65565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b60006142c3601a83614add565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b60006142fc601883614add565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614335600c83614add565b6b1313d05397d393d517d4d15560a21b815260200192915050565b600061435d601f83614add565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614396601c83614add565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b805160808301906143d38482613ce1565b5060208201516143e66020850182613ce1565b5060408201516143f96040850182613ce1565b506060820151611eb76060850182613cd8565b60e0820161441a8280614ae6565b6144248482613c29565b506144326020830183614ae6565b61443f6020850182613c29565b5061444d6040830183614ae6565b61445a6040850182613c29565b506144686060830183614af5565b6144756060850182613ce1565b506144836080830183614af5565b6144906080850182613ce1565b5061449e60a0830183614af5565b6144ab60a0850182613ce1565b506144b960c0830183614af5565b611eb760c0850182613ce1565b61014082016144d58280614ae6565b6144df8482613c29565b506144ed6020830183614ae6565b6144fa6020850182613c29565b506145086040830183614af5565b6145156040850182613ce1565b506145236060830183614af5565b6145306060850182613ce1565b5061453e6080830183614af5565b61454b6080850182613ce1565b5061455960a0830183614af5565b61456660a0850182613ce1565b5061457460c0830183614b04565b611eb760c08501826145f1565b805160c08301906145928482613c29565b5060208201516145a56020850182613c29565b5060408201516145b86040850182613ce1565b5060608201516145cb6060850182613ce1565b5060808201516145de6080850182613ce1565b5060a0820151611eb760a0850182613ce1565b608082016145ff8280614af5565b6146098482613ce1565b506146176020830183614b08565b614624602085018261465a565b506146326040830183614af5565b61463f6040850182613ce1565b5061464d6060830183614af5565b611eb76060850182613ce1565b613c2381614b48565b600061257b82613d6d565b600061257b8261427d565b6020810161257b8284613c29565b6020810161257b8284613c1a565b606081016146a38286613c1a565b6146b06020830185613ce1565b6129c46040830184613ce1565b604081016146cb8285613c29565b6134766020830184613c29565b606081016146e68286613c29565b6146b06020830185613c29565b604081016147018285613c29565b6134766020830184613ce1565b602080825281016125788184613c8a565b6020810161257b8284613cd8565b6020810161257b8284613ce1565b6020810161257b8284613cea565b602080825281016125788184613cfc565b60208082528101610e6281613d34565b60208082528101610e6281613da6565b60208082528101610e6281613dd7565b60208082528101610e6281613e09565b60208082528101610e6281613e42565b60208082528101610e6281613e6f565b60208082528101610e6281613ea8565b60208082528101610e6281613ee1565b60208082528101610e6281613f11565b60208082528101610e6281613f43565b60208082528101610e6281613f7c565b60208082528101610e6281613fb5565b60208082528101610e6281613fe0565b60208082528101610e6281614010565b60208082528101610e628161403e565b60208082528101610e6281614077565b60208082528101610e62816140ba565b60208082528101610e62816140f3565b60208082528101610e6281614121565b60208082528101610e6281614171565b60208082528101610e62816141aa565b60208082528101610e62816141d9565b60208082528101610e6281614212565b60208082528101610e628161424b565b60208082528101610e62816142b6565b60208082528101610e62816142ef565b60208082528101610e6281614328565b60208082528101610e6281614350565b60208082528101610e6281614389565b6080810161257b82846143c2565b6101008101614947828661440c565b81810360e0830152612b68818486613c32565b604081016146cb8285613ce1565b604081016149768285613ce1565b6134766020830184613c1a565b606081016149918286613ce1565b6146b06020830185613c1a565b61022081016149ad828f613ce1565b6149ba602083018e614581565b6149c760e083018d613ce1565b6149d561010083018c613ce1565b6149e361012083018b613ce1565b6149f161014083018a613ce1565b6149ff610160830189613ce1565b614a0d610180830188613ce1565b614a1b6101a0830187613ce1565b614a296101c0830186613c29565b614a376101e0830185613cf3565b614a45610200830184613cd8565b9d9c50505050505050505050505050565b60a08101614a648288613ce1565b614a716020830187613ce1565b614a7e6040830186613ce1565b614a8b6060830185613ce1565b614a986080830184613ce1565b9695505050505050565b60405181810167ffffffffffffffff81118282101715614ac157600080fd5b604052919050565b90565b60200190565b5190565b6101400190565b90815260200190565b600061257860208401846137d2565b6000612578602084018461383d565b5090565b60006125786020840184613921565b6000610e6282614b3c565b151590565b6000610e6282614b17565b80610e6581614b9a565b6001600160a01b031690565b60ff1690565b6000610e6282614b27565b6000610e6282614b32565b60005b83811015614b7f578181015183820152602001614b67565b83811115611eb75750506000910152565b601f01601f191690565b6004811061145c57fe5b614bad81614b17565b811461145c57600080fd5b614bad81614b22565b614bad81614ac9565b614bad81614b27565b614bad81614b4856fea365627a7a72315820e55f3dd0705a350feeddde15009289b8d6fefdaf03e3128df733a83ff5d5193d6c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "1347:3944:16:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1347:3944:16;;;;;;;",
  "deployedSourceMap": "1347:3944:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8415:2098:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8415:2098:22;;;;;;;;:::i;:::-;;4249:442:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4249:442:16;;;;;;;;:::i;1241:169:29:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;1577:700:16;;;;;;;;;:::i;2960:26:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2960:26:22;;;:::i;:::-;;;;;;;;14744:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14744:151:22;;;;;;;;:::i;:::-;;;;;;;;2783:30;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2783:30:22;;;:::i;2925:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2925:28:22;;;:::i;15597:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15597:518:22;;;;;;;;:::i;3039:53::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3039:53:22;;;:::i;:::-;;;;;;;;13773:761;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13773:761:22;;;;;;;;:::i;6568:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6568:94:22;;;:::i;6915:1153::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6915:1153:22;;;;;;;;:::i;769:214:131:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:131;;;:::i;15119:184:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15119:184:22;;;;;;;;:::i;:::-;;;;;;;;2993:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2993:39:22;;;:::i;2568:1258:16:-;;;;;;;;;:::i;6138:106:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6138:106:22;;;:::i;2820:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2820:30:22;;;:::i;6359:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6359:94:22;;;:::i;12362:1200::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12362:1200:22;;;;;;;;:::i;10700:1510::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10700:1510:22;;;;;;;;:::i;1259:263:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:263:11;;;:::i;3156:50:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3156:50:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3099;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3099:50:22;;;;;;;;:::i;5877:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5877:132:22;;;;;;;;:::i;:::-;;;;;;;;8415:2098;8512:6;4194:32;4170:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4170:20:22;;;;:56;;;;;;;;;4162:81;;;;-1:-1:-1;;;4162:81:22;;;;;;;;;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;8609:11:22;;-1:-1:-1;;;;;8609:11:22;2718:33:7;8609:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;;;:13;8665::22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;8665:32:22;3484:10;:22;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;8734:13;;;;:5;:13;;;;;:37;;;:53;-1:-1:-1;8734:53:22;8713:117;;;;-1:-1:-1;;;8713:117:22;;;;;;;;;8849:13;;;;:5;:13;;;;;:25;;;8878:3;-1:-1:-1;8849:32:22;8841:63;;;;-1:-1:-1;;;8841:63:22;;;;;;;;;8986:174;9015:10;:8;:10::i;:::-;-1:-1:-1;;;;;9015:34:22;;9075:10;:8;:10::i;:::-;-1:-1:-1;;;;;9075:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9075:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9075:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9075:19:22;;;;;;;;;-1:-1:-1;;;;;9075:43:22;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9075:45:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9075:45:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9075:45:22;;;;;;;;;9015:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9015:127:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9015:127:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9015:127:22;;;;;;;;;8986:3;;:174;:7;:174;:::i;:::-;8936:13;;;;:5;:13;;;;;:30;;;:224;;8915:300;;;;-1:-1:-1;;;8915:300:22;;;;;;;;;9226:13;;;;:5;:13;;;;;:28;;;:43;;;9279:27;;;:42;;;9445:32;;;;9390:36;;;;;9360:188;;2431:8;;9360:149;;2695:5;;9360:149;;9445:32;9360:67;;9257:12;;9360:67;:29;:67;:::i;:::-;:84;:118;:84;:118;:::i;:::-;:135;:149;:135;:149;:::i;:188::-;9331:13;;;;:5;:13;;;;;:26;;:217;9631:53;;:::i;:::-;9687:48;9719:6;9687:18;:48::i;:::-;9631:104;;9755:14;:37;;;9754:38;9746:75;;;;-1:-1:-1;;;9746:75:22;;;;;;;;;9832:13;;;;:5;:13;;;;;9862:3;9832:27;;;:33;9875:20;;:53;;-1:-1:-1;;;;9875:53:22;-1:-1:-1;;;9875:53:22;;;9961:21;9832:13;9961;:21::i;:::-;9938:13;;;;:5;:13;;;;;;;:20;;:44;;-1:-1:-1;;;;;;9938:44:22;-1:-1:-1;;;;;9938:44:22;;;;;;;;10054:11;;:58;;-1:-1:-1;;;10054:58:22;;:11;;;;:22;;:58;;10077:12;;10091:20;;10054:58;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10054:58:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10139:13:22;;;;:5;:13;;;;;;;:20;;;10123:71;;-1:-1:-1;;;10123:71:22;;-1:-1:-1;;;;;10139:20:22;;;;-1:-1:-1;10123:48:22;;:71;;10180:4;;10145:6;;10123:71;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10123:71:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10123:71:22;;;;10205:10;:8;:10::i;:::-;-1:-1:-1;;;;;10205:25:22;;10244:11;;;;;;;;;-1:-1:-1;;;;;10244:11:22;-1:-1:-1;;;;;10244:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10244:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10244:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10244:26:22;;;;;;;;;10284:4;-1:-1:-1;;;;;10284:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10284:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10284:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10284:22:22;;;;;;;;;10320:12;10205:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10205:137:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10450:13:22;;;;:5;:13;;;;;;;:20;;;;;10404:23;;;:32;10358:148;;-1:-1:-1;;;;;10450:20:22;;;;-1:-1:-1;10404:32:22;;;10456:6;;10358:148;;;;10484:12;;10358:148;;;;;;;;;;3544:1;1466::131;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;;2788:1:7;2391;8415:2098:22;;;:::o;4249:442:16:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;4478:153:16;4503:18;4535;4567:25;4606:15;4478:11;:153::i;:::-;4660:10;:8;:10::i;:::-;-1:-1:-1;;;;;4660:22:16;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4660:24:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4660:24:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4660:24:16;;;;;;;;;4642:15;:42;;-1:-1:-1;;;;;;4642:42:16;-1:-1:-1;;;;;4642:42:16;;;;;;;;;;-1:-1:-1;;;;;4249:442:16:o;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;1577:700:16:-;1741:6;4581:32:22;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;1838:11:16;;-1:-1:-1;;;;;1838:11:16;2718:33:7;1838:11:16;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1887:13:16;;;;:5;:13;;;;;:23;;:32;-1:-1:-1;;;;;1887:44:16;;;:32;;:44;1866:116;;;;-1:-1:-1;;;1866:116:16;;;;;;;;;2013:6;2000:9;:19;1992:52;;;;-1:-1:-1;;;1992:52:16;;;;;;;;;2074:1;2062:9;:13;2054:45;;;;-1:-1:-1;;;2054:45:16;;;;;;;;;2177:32;2194:6;2202;2177:16;:32::i;:::-;2253:8;-1:-1:-1;;;;;2225:45:16;2245:6;2225:45;2263:6;2225:45;;;;;;;;;;;;;;;2391:1:7;1577:700:16;;;;:::o;2960:26:22:-;;;-1:-1:-1;;;;;2960:26:22;;:::o;14744:151::-;14803:7;14860:13;;;:5;:13;;;;;:27;;;;14829:26;;;;;:59;;;:30;:59;:::i;:::-;14822:66;;14744:151;;;;:::o;2783:30::-;;;;:::o;2925:28::-;;;;:::o;15597:518::-;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;15785:27:22;:14;-1:-1:-1;;;;;15785:25:22;;:27::i;:::-;15777:70;;;;-1:-1:-1;;;15777:70:22;;;;;;;;;15890:11;;15912:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15890:11:22;;;;15912:79;;15890:11;;15945:14;;15912:79;:32;:79;:::i;:::-;16002:11;:28;;-1:-1:-1;;;;;;16002:28:22;-1:-1:-1;;;;;16002:28:22;;;;;;;;;16046:62;;16002:28;;16046:62;;;16065:10;;16046:62;;-1:-1:-1;;16046:62:22;1014:1:11;15597:518:22;:::o;3039:53::-;;;-1:-1:-1;;;;;3039:53:22;;:::o;13773:761::-;13836:4;13869:11;:9;:11::i;:::-;:62;;;-1:-1:-1;13918:11:22;;13896:35;;-1:-1:-1;;;;;13918:11:22;13896:13;:35::i;:::-;13869:132;;;-1:-1:-1;13971:30:22;13947:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;13947:20:22;;;;:54;;;;;;;;;;13869:132;13852:197;;;-1:-1:-1;14033:5:22;14026:12;;13852:197;14059:17;14079:13;;;:5;:13;;;;;:27;;;;14135:32;;;;;14079:27;;14220:3;14194:23;14079:27;14135:32;14194:23;:13;:23;:::i;:::-;:29;14177:46;;14237:9;14233:51;;;14269:4;14262:11;;;;;;;14233:51;14294:21;14318:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;14318:20:22;14352:29;;14348:113;;14420:13;-1:-1:-1;;;;;14404:44:22;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14404:46:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14404:46:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14404:46:22;;;;;;;;;14397:53;;;;;;;;14348:113;14478:26;14497:6;14478:18;:26::i;:::-;:49;;;;13773:761;-1:-1:-1;;;;;;13773:761:22:o;6568:94::-;6635:11;;:20;;;-1:-1:-1;;;6635:20:22;;;;6609:7;;-1:-1:-1;;;;;6635:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;6635:20:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6635:20:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6635:20:22;;;;;;;;;6628:27;;6568:94;:::o;6915:1153::-;7016:6;4581:32;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;7113:11:22;;-1:-1:-1;;;;;7113:11:22;2718:33:7;7113:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;;;-1:-1:-1;7186:13:22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;7186:32:22;7172:10;:46;7164:81;;;;-1:-1:-1;;;7164:81:22;;;;;;;;;7272:1;7263:6;:10;7255:43;;;;-1:-1:-1;;;7255:43:22;;;;;;;;;7396:29;7428:36;7457:6;7428:28;:36::i;:::-;7396:68;;7474:27;7504:41;7523:21;7504:18;:41::i;:::-;7635:24;7662:13;;;:5;:13;;;;;:24;;;7474:71;;-1:-1:-1;7635:24:22;7662:49;;7474:71;7662:49;:28;:49;:::i;:::-;7635:76;;7744:6;7725:16;:25;7721:81;;;-1:-1:-1;7785:6:22;7721:81;7816:20;;7812:177;;7923:55;7941:6;7949:16;7967:10;7923:17;:55::i;:::-;8032:10;-1:-1:-1;;;;;8004:57:22;8024:6;8004:57;8044:16;8004:57;;;;;;;;;;;;;;;1466:1:131;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;769:214;1024:12:132;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:132;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:132;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:132;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:131;959:13;:17;1264:55:132;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:132;;;1264:55;769:214:131;:::o;15119:184:22:-;15209:38;;:::i;:::-;15270:26;15289:6;15270:18;:26::i;2993:39::-;;;-1:-1:-1;;;;;2993:39:22;;:::o;2568:1258:16:-;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;2844:16:16;;;;:7;:16;;;3484:10:22;-1:-1:-1;;;;;3484:22:22;;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;5074:679;;;;;;;2891:7:16;5074:679:22;;;5159:23;5185:10;:8;:10::i;:::-;-1:-1:-1;;;;;5185:34:22;;5233:10;:8;:10::i;:::-;-1:-1:-1;;;;;5233:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:19:22;;;;;;;;;-1:-1:-1;;;;;5233:49:22;;:51;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:51:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:51:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:51:22;;;;;;;;;5185:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5185:109:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5185:109:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5185:109:22;;;;;;;;;5159:135;;5331:11;:20;;;5312:15;:39;;5304:81;;;;-1:-1:-1;;;5304:81:22;;;;;;;;;5396:25;5424:10;:8;:10::i;:::-;-1:-1:-1;;;;;5424:31:22;;5469:11;;;;;;;;;-1:-1:-1;;;;;5469:11:22;-1:-1:-1;;;;;5469:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5469:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5469:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5469:26:22;;;;;;;;;5509:11;:18;;;5424:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5424:113:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5424:113:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5424:113:22;;;;;;;;;5396:141;;5556:20;5555:21;5547:59;;;;-1:-1:-1;;;5547:59:22;;;;;;;;;5638:45;5664:11;:18;;;5638:25;:45::i;:::-;5617:118;;;;-1:-1:-1;;;5617:118:22;;;;;;;;;2935:16:16;2922:9;:29;2914:62;;;;-1:-1:-1;;;2914:62:16;;;;;;;;;2987:14;3004:23;:21;:23::i;:::-;3156:18;;:53;;-1:-1:-1;;;3156:53:16;;2987:40;;-1:-1:-1;3051:20:16;;;;;;-1:-1:-1;;;;;3156:18:16;;;;:33;;:53;;3190:7;;3199:9;;;;3156:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3156:53:16;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3156:53:16;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3156:53:16;;;;;;;;;3037:172;;-1:-1:-1;3037:172:16;-1:-1:-1;3037:172:16;-1:-1:-1;3236:143:16;3260:6;3236:143;;;;;;;3280:7;3236:143;;;3301:12;3327:15;3356:13;3236:10;:143::i;:::-;3220:13;;;;:5;:13;;;;;;;;;:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3220:159:16;;;-1:-1:-1;;;;;3220:159:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:159;;;-1:-1:-1;;;;3220:159:16;;;;-1:-1:-1;;;3220:159:16;;;;;;;;;;;;;;-1:-1:-1;3220:159:16;;;;;;;;;;;;;;;-1:-1:-1;;;3220:159:16;-1:-1:-1;;;;3220:159:16;;;;;;;;;3394:9;:13;3390:151;;3495:35;3512:6;3520:9;3495:16;:35::i;:::-;3551:13;:31;3565:16;;;;:7;:16;;;-1:-1:-1;;;;;3551:31:16;;;;;;;;;;;;;-1:-1:-1;3551:31:16;;;27:10:-1;;39:1;23:18;;45:23;;3551:44:16;;;;;;;;;;3606:213;3588:6;3606:213;;;;;;;3697:7;3606:213;;;3718:12;3744:15;3773:13;3800:9;3606:57;:213::i;:::-;5745:1:22;;;;3544;;;2391::7;2568:1258:16;;;;:::o;6138:106:22:-;6211:11;;:26;;;-1:-1:-1;;;6211:26:22;;;;6185:7;;-1:-1:-1;;;;;6211:11:22;;:24;;:26;;;;;;;;;;;;;;:11;:26;;;5:2:-1;;;;30:1;27;20:12;2820:30:22;;;-1:-1:-1;;;;;2820:30:22;;:::o;6359:94::-;6426:11;;:20;;;-1:-1:-1;;;6426:20:22;;;;6400:7;;-1:-1:-1;;;;;6426:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;12362:1200:22;12437:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;12534:11:22;;-1:-1:-1;;;;;12534:11:22;2718:33:7;12534:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;12593:24:22;12610:6;12593:16;:24::i;:::-;12585:60;;;;-1:-1:-1;;;12585:60:22;;;;;;;;;12656:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;12656:53:22;-1:-1:-1;;;12656:53:22;-1:-1:-1;;;;12719:31:22;-1:-1:-1;;;12719:31:22;;;12782:24;;;;12845:30;12782:24;12845:18;:30::i;:::-;12816:59;;12942:49;12960:6;12968:10;12980;12942:17;:49::i;:::-;13002:25;13030:10;:8;:10::i;:::-;-1:-1:-1;;;;;13030:34:22;;13078:10;:8;:10::i;:::-;-1:-1:-1;;;;;13078:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13078:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13078:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13078:19:22;;;;;;;;;-1:-1:-1;;;;;13078:47:22;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13078:49:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13078:49:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13078:49:22;;;;;;;;;13030:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13030:107:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13030:107:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13030:107:22;;;;;;;;;13002:135;-1:-1:-1;13147:20:22;13170:81;2695:5;13170:41;:18;13002:135;13170:41;:22;:41;:::i;:81::-;13319:11;;:56;;-1:-1:-1;;;13319:56:22;;13147:104;;-1:-1:-1;;;;;;13319:11:22;;:30;;:56;;13147:104;;13364:10;;13319:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13319:56:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;13439:13:22;;;;:5;:13;;;;;;;:23;;:32;13391:164;;-1:-1:-1;;;;;13439:32:22;;;;-1:-1:-1;13445:6:22;;13391:164;;;;13485:10;;13509;;13533:12;;13391:164;;;;;;;;;;1466:1:131;;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;;2788:1:7;2391;12362:1200:22;;:::o;10700:1510::-;10783:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;10880:11:22;;-1:-1:-1;;;;;10880:11:22;2718:33:7;10880:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;10939:10:22;10931:44;;;;-1:-1:-1;;;10931:44:22;;;;;;;;;11049:6;11033:13;11085:20;11098:6;11085:12;:20::i;:::-;11065:40;;11131:5;11119:9;:17;11115:65;;;11160:9;11152:17;;11115:65;11248:20;:9;11262:5;11248:20;:13;:20;:::i;:::-;11236:32;;11278:23;11287:6;11295:5;11278:8;:23::i;:::-;11389:14;11385:416;;11419:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;11419:53:22;-1:-1:-1;;;11419:53:22;;;11514:24;;;;-1:-1:-1;11596:23:22;;;:32;11552:77;;11419:13;;11514:24;;-1:-1:-1;;;;;11596:32:22;11552:17;:77::i;:::-;11710:13;;;;:5;:13;;;;;;;:23;;:32;11649:141;;-1:-1:-1;;;;;11710:32:22;;;;11716:6;;11649:141;;;;11760:16;;11649:141;;;;;;;;;;11385:416;;11855:11;;:36;;-1:-1:-1;;;11855:36:22;;-1:-1:-1;;;;;11855:11:22;;;;:17;;:36;;11873:5;;11880:10;;11855:36;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11855:36:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11855:36:22;;;;11902:10;:8;:10::i;:::-;-1:-1:-1;;;;;11902:28:22;;11944:11;;;;;;;;;-1:-1:-1;;;;;11944:11:22;-1:-1:-1;;;;;11944:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11944:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11944:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11944:26:22;;;;;;;;;11984:4;-1:-1:-1;;;;;11984:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11984:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11984:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11984:22:22;;;;;;;;;12020:5;11902:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11902:133:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;12095:13:22;;;;:5;:13;;;;;;;:23;;:32;12051:152;;-1:-1:-1;;;;;12095:32:22;;;;-1:-1:-1;12101:6:22;;12051:152;;;;12141:5;;12160:10;;12184:9;;12051:152;;;;;;;;;;1466:1:131;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;1259:263:11;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;3156:50:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3156:50:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3156:50:22;;;;;-1:-1:-1;;;3156:50:22;;;;:::o;3099:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5877:132::-;-1:-1:-1;;;;;5979:23:22;;;;;;:13;:23;;;;;;;;;5972:30;;;;;;;;;;;;;;;;;5944:16;;5972:30;;;5979:23;5972:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:132;;;:::o;4524:95:7:-;4568:4;4591:10;:8;:10::i;:::-;-1:-1:-1;;;;;4591:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4591:21:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4591:21:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4591:21:7;;;;;;;;4237:138;4304:4;4327:10;:8;:10::i;:::-;-1:-1:-1;;;;;4327:28:7;;4356:11;4327:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4327:41:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4327:41:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4327:41:7;;;;;;;;1274:134:122;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:122;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:122;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;16768:624:22:-;16859:38;;:::i;:::-;16913:18;16934:13;;;:5;:13;;;;;:24;;;;16913:18;17024:54;16940:6;17024:24;:54::i;:::-;17107:278;;;;;;;;;;;;;;;;;;;;;;;17339:31;;;;17107:278;;;;-1:-1:-1;17107:278:22;;16768:624;-1:-1:-1;;;16768:624:22:o;26537:152::-;26594:7;26620:10;:8;:10::i;:::-;-1:-1:-1;;;;;26620:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26620:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26620:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26620:26:22;;;;;;;;;-1:-1:-1;;;;;26620:39:22;;26668:4;26675:6;26620:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26620:62:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26620:62:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26620:62:22;;;;;;;;4625:115:7;4668:21;4708:10;:8;:10::i;:::-;-1:-1:-1;;;;;4708:23:7;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4708:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4708:25:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4708:25:7;;;;;;;;18557:669:22;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;18770:60:22;;;;;;;;;;;;-1:-1:-1;;;18770:60:22;;;;;;-1:-1:-1;;;;;18770:34:22;;;:60;:34;:60;:::i;:::-;18840:66;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18840:34:22;;;:66;:34;:66;:::i;:::-;18916:72;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18916:41:22;;;:72;:41;:72;:::i;:::-;18999:28;19011:15;18999:11;:28::i;:::-;-1:-1:-1;19038:11:22;:32;;-1:-1:-1;;;;;19038:32:22;;;-1:-1:-1;;;;;;19038:32:22;;;;;;;19080:11;:54;;;;;;;;;;;;;;;19144:18;:75;;;;;;;;;;;18557:669::o;19428:248::-;19523:15;;:27;;19543:6;19523:27;:19;:27;:::i;:::-;19505:15;:45;19587:13;;;;:5;:13;;;;;:24;;;:36;;19616:6;19587:36;:28;:36;:::i;:::-;19560:13;;;;:5;:13;;;;;;:24;;;:63;;;;-1:-1:-1;19666:3:22;19633:30;;;;:36;19428:248::o;834:176:122:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:122;;;;;;;;686:610:129;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:129;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:129:o;2749:183:101:-;2890:25;2903:4;2909:5;2890:12;:25::i;:::-;2917:7;2882:43;;;;;-1:-1:-1;;;2882:43:101;;;;;;;;;20582:313:22;20683:7;20706:18;20727:20;20740:6;20727:12;:20::i;:::-;20757:23;20783:13;;;:5;:13;;;;;:39;;;20706:41;;-1:-1:-1;20839:49:22;2695:5;20839:31;20706:41;20783:39;20839:31;:14;:31;:::i;21873:637::-;21945:7;22134:26;22163:71;22177:11;;;;;;;;;-1:-1:-1;;;;;22177:11:22;-1:-1:-1;;;;;22177:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22177:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22177:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22177:26:22;;;;;;;;;-1:-1:-1;;;;;22163:69:22;;:71::i;:::-;22134:100;;22244:31;22323:11;;;;;;;;;-1:-1:-1;;;;;22323:11:22;-1:-1:-1;;;;;22299:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22299:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22299:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22299:54:22;;;;;;;;;22244:119;-1:-1:-1;22373:16:22;22392:86;22450:18;22392:40;:11;22244:119;22392:40;:15;:40;:::i;:86::-;22373:105;21873:637;-1:-1:-1;;;;;21873:637:22:o;4993:296:16:-;5146:15;;:27;;5166:6;5146:27;:19;:27;:::i;:::-;5128:15;:45;5210:13;;;;:5;:13;;;;;:24;;;:36;;5239:6;5210:36;:28;:36;:::i;:::-;5183:13;;;;:5;:13;;;;;;:24;;:63;;;;5256:26;;-1:-1:-1;;;;;5256:18:16;;;:26;;;;;5275:6;;5256:26;5183:13;5256:26;5275:6;5256:18;:26;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;1409:498:132;1820:4;1864:17;1895:7;1409:498;:::o;25566:759:22:-;25671:4;25691:27;25721:10;:8;:10::i;:::-;-1:-1:-1;;;;;25721:22:22;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25721:24:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25721:24:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25721:24:22;;;;;;;;;-1:-1:-1;;;;;25721:40:22;;25775:11;;;;;;;;;-1:-1:-1;;;;;25775:11:22;-1:-1:-1;;;;;25775:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25775:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25775:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25775:26:22;;;;;;;;;25815:15;;25721:119;;-1:-1:-1;;;;;;25721:119:22;;;;;;;;;;-1:-1:-1;;;;;25815:15:22;;25721:119;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25721:119:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25721:119:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25721:119:22;;;;;;;;;25691:149;-1:-1:-1;;;;;;25858:35:22;;25850:72;;;;-1:-1:-1;;;25850:72:22;;;;;;;;;25966:102;;-1:-1:-1;;;25966:102:22;;25932:31;;-1:-1:-1;;;;;25966:74:22;;;;;:102;;-1:-1:-1;;;26041:26:22;25966:102;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25966:102:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25966:102:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25966:102:22;;;;;;;;;25932:136;;26078:33;26114:10;:8;:10::i;:::-;-1:-1:-1;;;;;26114:29:22;;26157:11;;;;;;;;;-1:-1:-1;;;;;26157:11:22;-1:-1:-1;;;;;26157:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26157:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26157:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26157:26:22;;;;;;;;;26197:15;;26114:135;;-1:-1:-1;;;;;;26114:135:22;;;;;;;;;;-1:-1:-1;;;;;26197:15:22;;26226:13;;26114:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26114:135:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26114:135:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26114:135:22;;;;;;;;;26266:52;;;;;;25566:759;-1:-1:-1;;;;25566:759:22:o;22663:158::-;22755:13;;22794:20;22755:13;22812:1;22794:20;:17;:20;:::i;:::-;22778:13;:36;22663:158;:::o;23322:1282::-;23538:24;;:::i;:::-;23574:23;23600:10;:8;:10::i;:::-;-1:-1:-1;;;;;23600:34:22;;23648:10;:8;:10::i;:::-;-1:-1:-1;;;;;23648:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23648:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23648:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23648:19:22;;;;;;;;;-1:-1:-1;;;;;23648:45:22;;:47;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23648:47:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23648:47:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23648:47:22;;;;;;;;;23600:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23600:105:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23600:105:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23600:105:22;;;;;;;;;23574:131;-1:-1:-1;23715:19:22;23737:24;:3;23574:131;23737:24;:7;:24;:::i;:::-;23715:46;;23790:807;;;;;;;;23830:6;23790:807;;;;23865:340;;;;;;;;23920:7;:16;;;-1:-1:-1;;;;;23865:340:22;;;;;23969:7;:17;;;-1:-1:-1;;;;;23865:340:22;;;;;24022:12;23865:340;;;;24073:15;23865:340;;;;24125:13;23865:340;;;;24170:7;:16;;;23865:340;;;23790:807;;;;24236:11;23790:807;;;;24280:1;23790:807;;;;24311:1;23790:807;;;;24348:1;23790:807;;;;24382:1;23790:807;;;;24415:1;23790:807;;;;24450:1;23790:807;;;;24485:3;-1:-1:-1;;;;;23790:807:22;;;;;24515:32;23790:807;;;;;;;;;;24577:5;23790:807;;;;;23771:826;23322:1282;-1:-1:-1;;;;;;;;23322:1282:22:o;24610:684::-;24983:7;:17;;;-1:-1:-1;;;;;24907:254:22;24953:7;:16;;;-1:-1:-1;;;;;24907:254:22;24933:6;24907:254;25014:12;25040:15;25069:13;25096:7;:16;;;25126:5;:13;25132:6;25126:13;;;;;;;;;;;:25;;;24907:254;;;;;;;;;;;;;;;;;;;25175:19;;25171:117;;25243:7;:16;;;-1:-1:-1;;;;;25215:62:22;25235:6;25215:62;25261:15;25215:62;;;;;;;;;;;;;;;25171:117;24610:684;;;;;;:::o;21131:485::-;21201:7;21301:26;21330:71;21344:11;;;;;;;;;-1:-1:-1;;;;;21344:11:22;-1:-1:-1;;;;;21344:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;21330:71:22;21301:100;;21411:31;21490:11;;;;;;;;;-1:-1:-1;;;;;21490:11:22;-1:-1:-1;;;;;21466:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21466:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21466:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21466:54:22;;;;;;;;;21411:119;-1:-1:-1;21547:62:22;21411:119;21547:33;:9;21561:18;21547:33;:13;:33;:::i;19906:461::-;19986:13;;;;:5;:13;;;;;:27;;;19978:35;;19974:387;;;20029:17;20094:13;;;:5;:13;;;;;:27;;;20049:5;;20080:42;;20049:5;;20080:42;:13;:42;:::i;:::-;20166:1;20136:13;;;:5;:13;;;;;:27;;;:31;;;;20210:26;;;20068:54;;-1:-1:-1;20210:41:22;;20068:54;20210:41;:30;:41;:::i;:::-;20181:13;;;;:5;:13;;;;;:26;;:70;-1:-1:-1;19974:387:22;;;20312:13;;;;:5;:13;;;;;:27;;;:38;;20344:5;20312:38;:31;:38;:::i;:::-;20282:13;;;;:5;:13;;;;;:27;;:68;19974:387;19906:461;;:::o;1732:187:122:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:122;;;;;;;;;;-1:-1:-1;;1888:5:122;;;1732:187;;;;;;:::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:122;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:122:o;17674:460:22:-;17771:29;17802:32;17902:29;17934:36;17963:6;17934:28;:36::i;:::-;17902:68;;18062:21;18085:41;18104:21;18085:18;:41::i;:::-;18054:73;;;;;17674:460;;;:::o;1583:127:101:-;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:101;;;;;;;;;;;1583:127;;:::o;3702:292:7:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;3786:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3786:31:7;;;:60;:31;:60;:::i;:::-;3864:28;:15;-1:-1:-1;;;;;3864:26:7;;:28::i;:::-;3856:68;;;;-1:-1:-1;;;3856:68:7;;;;;;;;;3935:13;:11;:13::i;:::-;3958:29;3971:15;3958:12;:29::i;1018:117:101:-;-1:-1:-1;;;;;1115:13:101;;;;;;;;1018:117::o;710:155:103:-;777:7;796:14;813:4;-1:-1:-1;;;;;813:13:103;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:15:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:15:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;813:15:103;;;;;;;;;845:13;;514:2;845:13;;710:155;-1:-1:-1;;;710:155:103:o;1288:108:101:-;-1:-1:-1;;;;;1368:21:101;;;;1288:108::o;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;:::o;1347:3944:16:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1347:3944:16;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;1347:3944:16;;;;;;-1:-1:-1;;;;;1347:3944:16;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;479:383;;;638:3;631:4;623:6;619:17;615:27;605:2;;656:1;653;646:12;605:2;-1:-1;676:20;;716:18;705:30;;702:2;;;748:1;745;738:12;702:2;782:4;774:6;770:17;758:29;;835:3;825:6;817;813:19;803:8;799:34;796:43;793:2;;;852:1;849;842:12;793:2;598:264;;;;;;870:128;945:13;;963:30;945:13;963:30;;1005:130;1072:20;;1097:33;1072:20;1097:33;;1142:134;1220:13;;1238:33;1220:13;1238:33;;1283:196;1392:13;;1410:64;1392:13;1410:64;;2242:164;;2358:3;2349:6;2344:3;2340:16;2336:26;2333:2;;;2375:1;2372;2365:12;2333:2;-1:-1;2394:6;2326:80;-1:-1;2326:80;2451:1245;;2570:4;2558:9;2553:3;2549:19;2545:30;2542:2;;;2588:1;2585;2578:12;2542:2;2606:20;2621:4;2606:20;;;2597:29;-1:-1;2680:1;2712:57;2765:3;2745:9;2712:57;;;2687:83;;-1:-1;2836:2;2869:49;2914:3;2890:22;;;2869:49;;;2862:4;2855:5;2851:16;2844:75;2791:139;2992:2;3025:49;3070:3;3061:6;3050:9;3046:22;3025:49;;;3018:4;3011:5;3007:16;3000:75;2940:146;3144:2;3177:49;3222:3;3213:6;3202:9;3198:22;3177:49;;;3170:4;3163:5;3159:16;3152:75;3096:142;3290:3;3324:49;3369:3;3360:6;3349:9;3345:22;3324:49;;;3317:4;3310:5;3306:16;3299:75;3248:137;3439:3;3473:49;3518:3;3509:6;3498:9;3494:22;3473:49;;;3466:4;3459:5;3455:16;3448:75;3395:139;3591:3;3625:49;3670:3;3661:6;3650:9;3646:22;3625:49;;;3618:4;3611:5;3607:16;3600:75;3544:142;2536:1160;;;;;3981:126;4046:20;;4071:31;4046:20;4071:31;;4114:130;4190:13;;4208:31;4190:13;4208:31;;4251:241;;4355:2;4343:9;4334:7;4330:23;4326:32;4323:2;;;4371:1;4368;4361:12;4323:2;4406:1;4423:53;4468:7;4448:9;4423:53;;4499:263;;4614:2;4602:9;4593:7;4589:23;4585:32;4582:2;;;4630:1;4627;4620:12;4582:2;4665:1;4682:64;4738:7;4718:9;4682:64;;5033:743;;;;;;5205:3;5193:9;5184:7;5180:23;5176:33;5173:2;;;5222:1;5219;5212:12;5173:2;5257:1;5274:53;5319:7;5299:9;5274:53;;;5264:63;;5236:97;5364:2;5382:53;5427:7;5418:6;5407:9;5403:22;5382:53;;;5372:63;;5343:98;5472:2;5490:53;5535:7;5526:6;5515:9;5511:22;5490:53;;;5480:63;;5451:98;5580:2;5598:53;5643:7;5634:6;5623:9;5619:22;5598:53;;;5588:63;;5559:98;5688:3;5707:53;5752:7;5743:6;5732:9;5728:22;5707:53;;;5697:63;;5667:99;5167:609;;;;;;;;;5783:366;;;5904:2;5892:9;5883:7;5879:23;5875:32;5872:2;;;5920:1;5917;5910:12;5872:2;5955:1;5972:53;6017:7;5997:9;5972:53;;;5962:63;;5934:97;6062:2;6080:53;6125:7;6116:6;6105:9;6101:22;6080:53;;;6070:63;;6041:98;5866:283;;;;;;6156:491;;;;6294:2;6282:9;6273:7;6269:23;6265:32;6262:2;;;6310:1;6307;6300:12;6262:2;6345:1;6362:53;6407:7;6387:9;6362:53;;;6352:63;;6324:97;6452:2;6470:53;6515:7;6506:6;6495:9;6491:22;6470:53;;;6460:63;;6431:98;6560:2;6578:53;6623:7;6614:6;6603:9;6599:22;6578:53;;;6568:63;;6539:98;6256:391;;;;;;6654:257;;6766:2;6754:9;6745:7;6741:23;6737:32;6734:2;;;6782:1;6779;6772:12;6734:2;6817:1;6834:61;6887:7;6867:9;6834:61;;6918:263;;7033:2;7021:9;7012:7;7008:23;7004:32;7001:2;;;7049:1;7046;7039:12;7001:2;7084:1;7101:64;7157:7;7137:9;7101:64;;7188:325;;7334:2;7322:9;7313:7;7309:23;7305:32;7302:2;;;7350:1;7347;7340:12;7302:2;7385:1;7402:95;7489:7;7469:9;7402:95;;8752:772;;;;;8986:3;8974:9;8965:7;8961:23;8957:33;8954:2;;;9003:1;9000;8993:12;8954:2;9038:1;9055:85;9132:7;9112:9;9055:85;;;9045:95;;9017:129;9205:3;9194:9;9190:19;9177:33;9230:18;9222:6;9219:30;9216:2;;;9262:1;9259;9252:12;9216:2;9290:109;9391:7;9382:6;9371:9;9367:22;9290:109;;;9280:119;;;;9156:249;9436:3;9455:53;9500:7;9491:6;9480:9;9476:22;9455:53;;;9445:63;;9415:99;8948:576;;;;;;;;9531:302;;9665:3;9653:9;9644:7;9640:23;9636:33;9633:2;;;9682:1;9679;9672:12;9633:2;9717:1;9734:83;9809:7;9789:9;9734:83;;9840:241;;9944:2;9932:9;9923:7;9919:23;9915:32;9912:2;;;9960:1;9957;9950:12;9912:2;9995:1;10012:53;10057:7;10037:9;10012:53;;10358:366;;;10479:2;10467:9;10458:7;10454:23;10450:32;10447:2;;;10495:1;10492;10485:12;10447:2;10530:1;10547:53;10592:7;10572:9;10547:53;;10731:535;;;;10880:2;10868:9;10859:7;10855:23;10851:32;10848:2;;;10896:1;10893;10886:12;10848:2;10931:1;10948:64;11004:7;10984:9;10948:64;;;10938:74;;10910:108;11049:2;11067:64;11123:7;11114:6;11103:9;11099:22;11067:64;;;11057:74;;11028:109;11168:2;11186:64;11242:7;11233:6;11222:9;11218:22;11186:64;;11273:259;;11386:2;11374:9;11365:7;11361:23;11357:32;11354:2;;;11402:1;11399;11392:12;11354:2;11437:1;11454:62;11508:7;11488:9;11454:62;;11540:291;;11683:106;11785:3;11777:6;11683:106;;;-1:-1;;11818:6;11809:16;;11676:155;11840:173;;11927:46;11969:3;11961:6;11927:46;;;-1:-1;;12002:4;11993:14;;11920:93;12021:142;12112:45;12151:5;12112:45;;;12107:3;12100:58;12094:69;;;12170:127;12259:32;12285:5;12259:32;;12615:891;;12825:113;12931:6;12926:3;12825:113;;;12818:120;;12959:87;13040:5;12959:87;;;13066:7;13094:1;13079:405;13104:6;13101:1;13098:13;13079:405;;;13165:71;13229:6;13220:7;13165:71;;;13250:119;13365:3;13350:13;13250:119;;;13243:126;;13386:91;13470:6;13386:91;;;13376:101;-1:-1;;13126:1;13119:9;13079:405;;;-1:-1;13497:3;;12805:701;-1:-1;;;;;12805:701;13545:690;;13690:54;13738:5;13690:54;;;13757:86;13836:6;13831:3;13757:86;;;13750:93;;13864:56;13914:5;13864:56;;;13940:7;13968:1;13953:260;13978:6;13975:1;13972:13;13953:260;;;14045:6;14039:13;14066:63;14125:3;14110:13;14066:63;;;14059:70;;14146:60;14199:6;14146:60;;;14136:70;-1:-1;;14000:1;13993:9;13953:260;;14243:94;14310:21;14325:5;14310:21;;14455:103;14528:24;14546:5;14528:24;;14685:186;14798:67;14859:5;14798:67;;15272:154;15369:51;15414:5;15369:51;;15433:347;;15545:39;15578:5;15545:39;;;15596:71;15660:6;15655:3;15596:71;;;15589:78;;15672:52;15717:6;15712:3;15705:4;15698:5;15694:16;15672:52;;;15745:29;15767:6;15745:29;;;15736:39;;;;15525:255;-1:-1;;;15525:255;15788:329;;15948:67;16012:2;16007:3;15948:67;;;16048:31;16028:52;;16108:2;16099:12;;15934:183;-1:-1;;15934:183;16126:364;;16304:85;16386:2;16381:3;16304:85;;;16422:30;16402:51;;16481:2;16472:12;;16290:200;-1:-1;;16290:200;16499:321;;16659:67;16723:2;16718:3;16659:67;;;-1:-1;;;16739:44;;16811:2;16802:12;;16645:175;-1:-1;;16645:175;16829:322;;16989:67;17053:2;17048:3;16989:67;;;-1:-1;;;17069:45;;17142:2;17133:12;;16975:176;-1:-1;;16975:176;17160:325;;17320:67;17384:2;17379:3;17320:67;;;17420:27;17400:48;;17476:2;17467:12;;17306:179;-1:-1;;17306:179;17494:317;;17654:67;17718:2;17713:3;17654:67;;;-1:-1;;;17734:40;;17802:2;17793:12;;17640:171;-1:-1;;17640:171;17820:327;;17980:67;18044:2;18039:3;17980:67;;;18080:29;18060:50;;18138:2;18129:12;;17966:181;-1:-1;;17966:181;18156:325;;18316:67;18380:2;18375:3;18316:67;;;18416:27;18396:48;;18472:2;18463:12;;18302:179;-1:-1;;18302:179;18490:320;;18650:67;18714:2;18709:3;18650:67;;;-1:-1;;;18730:43;;18801:2;18792:12;;18636:174;-1:-1;;18636:174;18819:322;;18979:67;19043:2;19038:3;18979:67;;;-1:-1;;;19059:45;;19132:2;19123:12;;18965:176;-1:-1;;18965:176;19150:327;;19310:67;19374:2;19369:3;19310:67;;;19410:29;19390:50;;19468:2;19459:12;;19296:181;-1:-1;;19296:181;19486:323;;19646:67;19710:2;19705:3;19646:67;;;19746:25;19726:46;;19800:2;19791:12;;19632:177;-1:-1;;19632:177;19818:315;;19978:67;20042:2;20037:3;19978:67;;;-1:-1;;;20058:38;;20124:2;20115:12;;19964:169;-1:-1;;19964:169;20142:320;;20302:67;20366:2;20361:3;20302:67;;;-1:-1;;;20382:43;;20453:2;20444:12;;20288:174;-1:-1;;20288:174;20471:318;;20631:67;20695:2;20690:3;20631:67;;;-1:-1;;;20711:41;;20780:2;20771:12;;20617:172;-1:-1;;20617:172;20798:324;;20958:67;21022:2;21017:3;20958:67;;;21058:26;21038:47;;21113:2;21104:12;;20944:178;-1:-1;;20944:178;21131:370;;21291:67;21355:2;21350:3;21291:67;;;21391:34;21371:55;;-1:-1;;;21455:2;21446:12;;21439:25;21492:2;21483:12;;21277:224;-1:-1;;21277:224;21510:329;;21670:67;21734:2;21729:3;21670:67;;;21770:31;21750:52;;21830:2;21821:12;;21656:183;-1:-1;;21656:183;21848:318;;22008:67;22072:2;22067:3;22008:67;;;-1:-1;;;22088:41;;22157:2;22148:12;;21994:172;-1:-1;;21994:172;22175:383;;22335:67;22399:2;22394:3;22335:67;;;22435:34;22415:55;;-1:-1;;;22499:2;22490:12;;22483:38;22549:2;22540:12;;22321:237;-1:-1;;22321:237;22567:324;;22727:67;22791:2;22786:3;22727:67;;;22827:26;22807:47;;22882:2;22873:12;;22713:178;-1:-1;;22713:178;22900:319;;23060:67;23124:2;23119:3;23060:67;;;-1:-1;;;23140:42;;23210:2;23201:12;;23046:173;-1:-1;;23046:173;23228:330;;23388:67;23452:2;23447:3;23388:67;;;23488:32;23468:53;;23549:2;23540:12;;23374:184;-1:-1;;23374:184;23567:323;;23727:67;23791:2;23786:3;23727:67;;;23827:25;23807:46;;23881:2;23872:12;;23713:177;-1:-1;;23713:177;23899:322;;24059:67;24123:2;24118:3;24059:67;;;-1:-1;;;24139:45;;24212:2;24203:12;;24045:176;-1:-1;;24045:176;24230:360;;24408:85;24490:2;24485:3;24408:85;;;24526:26;24506:47;;24581:2;24572:12;;24394:196;-1:-1;;24394:196;24599:326;;24759:67;24823:2;24818:3;24759:67;;;24859:28;24839:49;;24916:2;24907:12;;24745:180;-1:-1;;24745:180;24934:324;;25094:67;25158:2;25153:3;25094:67;;;25194:26;25174:47;;25249:2;25240:12;;25080:178;-1:-1;;25080:178;25267:312;;25427:67;25491:2;25486:3;25427:67;;;-1:-1;;;25507:35;;25570:2;25561:12;;25413:166;-1:-1;;25413:166;25588:331;;25748:67;25812:2;25807:3;25748:67;;;25848:33;25828:54;;25910:2;25901:12;;25734:185;-1:-1;;25734:185;25928:328;;26088:67;26152:2;26147:3;26088:67;;;26188:30;26168:51;;26247:2;26238:12;;26074:182;-1:-1;;26074:182;26351:863;26590:23;;26518:4;26509:14;;;26619:63;26513:3;26590:23;26619:63;;;26538:150;26778:4;26771:5;26767:16;26761:23;26790:63;26847:4;26842:3;26838:14;26824:12;26790:63;;;26698:161;26952:4;26945:5;26941:16;26935:23;26964:63;27021:4;27016:3;27012:14;26998:12;26964:63;;;26869:164;27124:4;27117:5;27113:16;27107:23;27136:57;27187:4;27182:3;27178:14;27164:12;27136:57;;27294:1513;27449:4;27440:14;;27519:58;27564:5;;27519:58;;;27583:79;27651:3;27633:12;27583:79;;;27469:199;27729:50;27773:4;27766:5;27762:16;27755:5;27729:50;;;27785:63;27842:4;27837:3;27833:14;27819:12;27785:63;;;27678:176;27922:50;27966:4;27959:5;27955:16;27948:5;27922:50;;;27978:63;28035:4;28030:3;28026:14;28012:12;27978:63;;;27864:183;28111:50;28155:4;28148:5;28144:16;28137:5;28111:50;;;28167:63;28224:4;28219:3;28215:14;28201:12;28167:63;;;28057:179;28294:50;28338:4;28331:5;28327:16;28320:5;28294:50;;;28350:63;28407:4;28402:3;28398:14;28384:12;28350:63;;;28246:173;28479:50;28523:4;28516:5;28512:16;28505:5;28479:50;;;28535:63;28592:4;28587:3;28583:14;28569:12;28535:63;;;28429:175;28667:50;28711:4;28704:5;28700:16;28693:5;28667:50;;;28723:63;28780:4;28775:3;28771:14;28757:12;28723:63;;28889:1572;29032:6;29023:16;;29102:50;29139:5;;29102:50;;;29158:63;29210:3;29192:12;29158:63;;;29054:173;29295:50;29339:4;29332:5;29328:16;29321:5;29295:50;;;29351:63;29408:4;29403:3;29399:14;29385:12;29351:63;;;29237:183;29484:50;29528:4;29521:5;29517:16;29510:5;29484:50;;;29540:63;29597:4;29592:3;29588:14;29574:12;29540:63;;;29430:179;29673:50;29717:4;29710:5;29706:16;29699:5;29673:50;;;29729:63;29786:4;29781:3;29777:14;29763:12;29729:63;;;29619:179;29865:50;29909:4;29902:5;29898:16;29891:5;29865:50;;;29921:63;29978:4;29973:3;29969:14;29955:12;29921:63;;;29808:182;30055:50;30099:4;30092:5;30088:16;30081:5;30055:50;;;30111:63;30168:4;30163:3;30159:14;30145:12;30111:63;;;30000:180;30241:76;30311:4;30304:5;30300:16;30293:5;30241:76;;;30323:117;30434:4;30429:3;30425:14;30411:12;30323:117;;30537:1151;30752:23;;30682:4;30673:14;;;30781:79;30677:3;30752:23;30781:79;;;30702:164;30944:4;30937:5;30933:16;30927:23;30956:63;31013:4;31008:3;31004:14;30990:12;30956:63;;;30876:149;31106:4;31099:5;31095:16;31089:23;31118:63;31175:4;31170:3;31166:14;31152:12;31118:63;;;31035:152;31271:4;31264:5;31260:16;31254:23;31283:63;31340:4;31335:3;31331:14;31317:12;31283:63;;;31197:155;31434:4;31427:5;31423:16;31417:23;31446:63;31503:4;31498:3;31494:14;31480:12;31446:63;;;31362:153;31592:4;31585:5;31581:16;31575:23;31604:63;31661:4;31656:3;31652:14;31638:12;31604:63;;31764:878;31901:4;31892:14;;31974:50;32011:5;;31974:50;;;32030:63;32082:3;32064:12;32030:63;;;31921:178;32152:48;32194:4;32187:5;32183:16;32176:5;32152:48;;;32206:59;32259:4;32254:3;32250:14;32236:12;32206:59;;;32109:162;32324:50;32368:4;32361:5;32357:16;32350:5;32324:50;;;32380:63;32437:4;32432:3;32428:14;32414:12;32380:63;;;32281:168;32502:50;32546:4;32539:5;32535:16;32528:5;32502:50;;;32558:63;32615:4;32610:3;32606:14;32592:12;32558:63;;32879:97;32948:22;32964:5;32948:22;;32983:372;;33182:148;33326:3;33182:148;;33362:372;;33561:148;33705:3;33561:148;;33741:213;33859:2;33844:18;;33873:71;33848:9;33917:6;33873:71;;33961:229;34087:2;34072:18;;34101:79;34076:9;34153:6;34101:79;;34197:451;34379:2;34364:18;;34393:79;34368:9;34445:6;34393:79;;;34483:72;34551:2;34540:9;34536:18;34527:6;34483:72;;;34566;34634:2;34623:9;34619:18;34610:6;34566:72;;34655:324;34801:2;34786:18;;34815:71;34790:9;34859:6;34815:71;;;34897:72;34965:2;34954:9;34950:18;34941:6;34897:72;;34986:435;35160:2;35145:18;;35174:71;35149:9;35218:6;35174:71;;;35256:72;35324:2;35313:9;35309:18;35300:6;35256:72;;35428:324;35574:2;35559:18;;35588:71;35563:9;35632:6;35588:71;;;35670:72;35738:2;35727:9;35723:18;35714:6;35670:72;;35759:361;35927:2;35941:47;;;35912:18;;36002:108;35912:18;36096:6;36002:108;;36127:201;36239:2;36224:18;;36253:65;36228:9;36291:6;36253:65;;36335:213;36453:2;36438:18;;36467:71;36442:9;36511:6;36467:71;;36555:273;36703:2;36688:18;;36717:101;36692:9;36791:6;36717:101;;37403:301;37541:2;37555:47;;;37526:18;;37616:78;37526:18;37680:6;37616:78;;37711:407;37902:2;37916:47;;;37887:18;;37977:131;37887:18;37977:131;;38125:407;38316:2;38330:47;;;38301:18;;38391:131;38301:18;38391:131;;38539:407;38730:2;38744:47;;;38715:18;;38805:131;38715:18;38805:131;;38953:407;39144:2;39158:47;;;39129:18;;39219:131;39129:18;39219:131;;39367:407;39558:2;39572:47;;;39543:18;;39633:131;39543:18;39633:131;;39781:407;39972:2;39986:47;;;39957:18;;40047:131;39957:18;40047:131;;40195:407;40386:2;40400:47;;;40371:18;;40461:131;40371:18;40461:131;;40609:407;40800:2;40814:47;;;40785:18;;40875:131;40785:18;40875:131;;41023:407;41214:2;41228:47;;;41199:18;;41289:131;41199:18;41289:131;;41437:407;41628:2;41642:47;;;41613:18;;41703:131;41613:18;41703:131;;41851:407;42042:2;42056:47;;;42027:18;;42117:131;42027:18;42117:131;;42265:407;42456:2;42470:47;;;42441:18;;42531:131;42441:18;42531:131;;42679:407;42870:2;42884:47;;;42855:18;;42945:131;42855:18;42945:131;;43093:407;43284:2;43298:47;;;43269:18;;43359:131;43269:18;43359:131;;43507:407;43698:2;43712:47;;;43683:18;;43773:131;43683:18;43773:131;;43921:407;44112:2;44126:47;;;44097:18;;44187:131;44097:18;44187:131;;44335:407;44526:2;44540:47;;;44511:18;;44601:131;44511:18;44601:131;;44749:407;44940:2;44954:47;;;44925:18;;45015:131;44925:18;45015:131;;45163:407;45354:2;45368:47;;;45339:18;;45429:131;45339:18;45429:131;;45577:407;45768:2;45782:47;;;45753:18;;45843:131;45753:18;45843:131;;45991:407;46182:2;46196:47;;;46167:18;;46257:131;46167:18;46257:131;;46405:407;46596:2;46610:47;;;46581:18;;46671:131;46581:18;46671:131;;46819:407;47010:2;47024:47;;;46995:18;;47085:131;46995:18;47085:131;;47233:407;47424:2;47438:47;;;47409:18;;47499:131;47409:18;47499:131;;47647:407;47838:2;47852:47;;;47823:18;;47913:131;47823:18;47913:131;;48061:407;48252:2;48266:47;;;48237:18;;48327:131;48237:18;48327:131;;48475:407;48666:2;48680:47;;;48651:18;;48741:131;48651:18;48741:131;;48889:407;49080:2;49094:47;;;49065:18;;49155:131;49065:18;49155:131;;49303:407;49494:2;49508:47;;;49479:18;;49569:131;49479:18;49569:131;;49717:362;49909:3;49894:19;;49924:145;49898:9;50042:6;49924:145;;50086:730;50410:3;50395:19;;50425:133;50399:9;50531:6;50425:133;;;50607:9;50601:4;50597:20;50591:3;50580:9;50576:19;50569:49;50632:174;50801:4;50792:6;50784;50632:174;;51043:324;51189:2;51174:18;;51203:71;51178:9;51247:6;51203:71;;51374:340;51528:2;51513:18;;51542:71;51517:9;51586:6;51542:71;;;51624:80;51700:2;51689:9;51685:18;51676:6;51624:80;;51721:451;51903:2;51888:18;;51917:71;51892:9;51961:6;51917:71;;;51999:80;52075:2;52064:9;52060:18;52051:6;51999:80;;52179:1569;52667:3;52652:19;;52682:71;52656:9;52726:6;52682:71;;;52764:124;52884:2;52873:9;52869:18;52860:6;52764:124;;;52899:73;52967:3;52956:9;52952:19;52943:6;52899:73;;;52983;53051:3;53040:9;53036:19;53027:6;52983:73;;;53067;53135:3;53124:9;53120:19;53111:6;53067:73;;;53151;53219:3;53208:9;53204:19;53195:6;53151:73;;;53235;53303:3;53292:9;53288:19;53279:6;53235:73;;;53319;53387:3;53376:9;53372:19;53363:6;53319:73;;;53403;53471:3;53460:9;53456:19;53447:6;53403:73;;;53487;53555:3;53544:9;53540:19;53531:6;53487:73;;;53571:88;53654:3;53643:9;53639:19;53629:7;53571:88;;;53670:68;53733:3;53722:9;53718:19;53708:7;53670:68;;;52638:1110;;;;;;;;;;;;;;;;53755:659;53985:3;53970:19;;54000:71;53974:9;54044:6;54000:71;;;54082:72;54150:2;54139:9;54135:18;54126:6;54082:72;;;54165;54233:2;54222:9;54218:18;54209:6;54165:72;;;54248;54316:2;54305:9;54301:18;54292:6;54248:72;;;54331:73;54399:3;54388:9;54384:19;54375:6;54331:73;;;53956:458;;;;;;;;;54421:256;54483:2;54477:9;54509:17;;;54584:18;54569:34;;54605:22;;;54566:62;54563:2;;;54641:1;54638;54631:12;54563:2;54657;54650:22;54461:216;;-1:-1;54461:216;54684:147;54801:3;54787:44;54838:151;54962:4;54953:14;;54910:79;54996:137;55099:12;;55070:63;55269:141;55398:6;55389:16;;55375:35;55533:205;55678:19;;;55727:4;55718:14;;55671:67;56260:119;;56334:39;56369:2;56364:3;56360:12;56355:3;56334:39;;56532:119;;56606:39;56641:2;56636:3;56632:12;56627:3;56606:39;;56660:112;-1:-1;56763:3;56747:25;57027:115;;57099:37;57132:2;57127:3;57123:12;57118:3;57099:37;;57150:91;;57212:24;57230:5;57212:24;;57354:85;57420:13;57413:21;;57396:43;57525:122;;57618:24;57636:5;57618:24;;58025:138;58103:5;58109:49;58103:5;58109:49;;58248:121;-1:-1;;;;;58310:54;;58293:76;58455:81;58526:4;58515:16;;58498:38;58543:129;;58630:37;58661:5;58630:37;;59690:138;;59783:40;59817:5;59783:40;;60079:268;60144:1;60151:101;60165:6;60162:1;60159:13;60151:101;;;60232:11;;;60226:18;60213:11;;;60206:39;60187:2;60180:10;60151:101;;;60267:6;60264:1;60261:13;60258:2;;;-1:-1;;60332:1;60314:16;;60307:27;60128:219;60355:97;60443:2;60423:14;-1:-1;;60419:28;;60403:49;60460:107;60545:1;60538:5;60535:12;60525:2;;60551:9;60574:117;60643:24;60661:5;60643:24;;;60636:5;60633:35;60623:2;;60682:1;60679;60672:12;60838:111;60904:21;60919:5;60904:21;;60956:117;61025:24;61043:5;61025:24;;61080:179;61180:55;61229:5;61180:55;;62038:113;62105:22;62121:5;62105:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\n// Contracts\nimport \"./LoansBase.sol\";\n\n/*****************************************************************************************************/\n/**                                             WARNING                                             **/\n/**                                  THIS CONTRACT IS UPGRADEABLE!                                  **/\n/**  ---------------------------------------------------------------------------------------------  **/\n/**  Do NOT change the order of or PREPEND any storage variables to this or new versions of this    **/\n/**  contract as this will cause the the storage slots to be overwritten on the proxy contract!!    **/\n/**                                                                                                 **/\n/**  Visit https://docs.openzeppelin.com/upgrades/2.6/proxies#upgrading-via-the-proxy-pattern for   **/\n/**  more information.                                                                              **/\n/*****************************************************************************************************/\n/**\n    @notice This contract is used as a basis for the creation of Ether based loans across the platform\n    @notice It implements the LoansBase contract from Teller\n\n    @author develop@teller.finance\n */\ncontract EtherCollateralLoans is LoansBase {\n    /**\n     * @notice Deposit collateral into a loan\n     * @param borrower The address of the loan borrower.\n     * @param loanID The ID of the loan the collateral is for\n     */\n    function depositCollateral(\n        address borrower,\n        uint256 loanID,\n        uint256 amount\n    )\n        external\n        payable\n        loanActiveOrSet(loanID)\n        isInitialized()\n        whenNotPaused()\n        whenLendingPoolNotPaused(address(lendingPool))\n    {\n        require(\n            loans[loanID].loanTerms.borrower == borrower,\n            \"BORROWER_LOAN_ID_MISMATCH\"\n        );\n        require(msg.value == amount, \"INCORRECT_ETH_AMOUNT\");\n        require(msg.value > 0, \"CANNOT_DEPOSIT_ZERO\");\n\n        // Update the contract total and the loan collateral total\n        _payInCollateral(loanID, amount);\n\n        emit CollateralDeposited(loanID, borrower, amount);\n    }\n\n    /**\n        @notice Creates a loan with the loan request and terms\n        @param request Struct of the protocol loan request\n        @param responses List of structs of the protocol loan responses\n        @param collateralAmount Amount of collateral required for the loan\n     */\n    function createLoanWithTerms(\n        TellerCommon.LoanRequest calldata request,\n        TellerCommon.LoanResponse[] calldata responses,\n        uint256 collateralAmount\n    )\n        external\n        payable\n        isInitialized()\n        whenNotPaused()\n        isBorrower(request.borrower)\n        withValidLoanRequest(request)\n    {\n        require(msg.value == collateralAmount, \"INCORRECT_ETH_AMOUNT\");\n\n        uint256 loanID = getAndIncrementLoanID();\n        (\n            uint256 interestRate,\n            uint256 collateralRatio,\n            uint256 maxLoanAmount\n        ) = loanTermsConsensus.processRequest(request, responses);\n\n        loans[loanID] = createLoan(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount\n        );\n\n        if (msg.value > 0) {\n            // Update collateral, totalCollateral, and lastCollateralIn\n            _payInCollateral(loanID, msg.value);\n        }\n\n        borrowerLoans[request.borrower].push(loanID);\n\n        _emitLoanTermsSetAndCollateralDepositedEventsIfApplicable(\n            loanID,\n            request,\n            interestRate,\n            collateralRatio,\n            maxLoanAmount,\n            msg.value\n        );\n    }\n\n    /**\n        @notice Initializes the current contract instance setting the required parameters\n        @param priceOracleAddress Contract address of the price oracle\n        @param lendingPoolAddress Contract address of the lending pool\n        @param loanTermsConsensusAddress Contract adddress for loan term consensus\n        @param settingsAddress Contract address for the configuration of the platform\n     */\n    function initialize(\n        address priceOracleAddress,\n        address lendingPoolAddress,\n        address loanTermsConsensusAddress,\n        address settingsAddress,\n        address\n    ) external isNotInitialized() {\n        _initialize(\n            priceOracleAddress,\n            lendingPoolAddress,\n            loanTermsConsensusAddress,\n            settingsAddress\n        );\n\n        collateralToken = settings().ETH_ADDRESS();\n    }\n\n    /** Internal Functions */\n    /**\n        @notice Pays out collateral for the associated loan\n        @param loanID The ID of the loan the collateral is for\n        @param amount The amount of collateral to be paid\n        @param recipient address that will receive the given amount.\n     */\n    function _payOutCollateral(\n        uint256 loanID,\n        uint256 amount,\n        address payable recipient\n    ) internal {\n        totalCollateral = totalCollateral.sub(amount);\n        loans[loanID].collateral = loans[loanID].collateral.sub(amount);\n        recipient.transfer(amount);\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol",
    "exportedSymbols": {
      "EtherCollateralLoans": [
        3873
      ]
    },
    "id": 3874,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3653,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "id": 3654,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:16"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 3655,
        "nodeType": "ImportDirective",
        "scope": 3874,
        "sourceUnit": 6827,
        "src": "72:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3656,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6826,
              "src": "1380:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$6826",
                "typeString": "contract LoansBase"
              }
            },
            "id": 3657,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:9:16"
          }
        ],
        "contractDependencies": [
          2343,
          2634,
          6826,
          8853,
          10469,
          20866,
          20935
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of Ether based loans across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 3873,
        "linearizedBaseContracts": [
          3873,
          6826,
          2343,
          20866,
          20935,
          2634,
          8853,
          10469
        ],
        "name": "EtherCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3716,
              "nodeType": "Block",
              "src": "1856:421:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3679,
                                "name": "loans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5439,
                                "src": "1887:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                  "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                                }
                              },
                              "id": 3681,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3680,
                                "name": "loanID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3661,
                                "src": "1893:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1887:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$17535_storage",
                                "typeString": "struct TellerCommon.Loan storage ref"
                              }
                            },
                            "id": 3682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loanTerms",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17514,
                            "src": "1887:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$17510_storage",
                              "typeString": "struct TellerCommon.LoanTerms storage ref"
                            }
                          },
                          "id": 3683,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17499,
                          "src": "1887:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3684,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3659,
                          "src": "1923:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1887:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 3686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:27:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "id": 3678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1866:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:116:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3688,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:116:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3690,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "2000:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3692,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3663,
                          "src": "2013:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2000:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1992:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:52:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3696,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:52:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3698,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "2062:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2062:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2074:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2062:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 3702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:21:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 3697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2054:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3704,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3706,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3661,
                        "src": "2194:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3707,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3663,
                        "src": "2202:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3705,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6452,
                      "src": "2177:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3709,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:32:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3711,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3661,
                        "src": "2245:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3712,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3659,
                        "src": "2253:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3713,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3663,
                        "src": "2263:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3710,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10256,
                      "src": "2225:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 3714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3715,
                  "nodeType": "EmitStatement",
                  "src": "2220:50:16"
                }
              ]
            },
            "documentation": "@notice Deposit collateral into a loan\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for",
            "id": 3717,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3666,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3661,
                    "src": "1741:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3667,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3665,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5516,
                  "src": "1725:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:23:16"
              },
              {
                "arguments": [],
                "id": 3669,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3668,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "1757:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1757:15:16"
              },
              {
                "arguments": [],
                "id": 3671,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3670,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "1781:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3674,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "1838:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 3673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1830:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3676,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3672,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2244,
                  "src": "1805:24:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:46:16"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3659,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "1613:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3661,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "1639:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3663,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "1663:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:80:16"
            },
            "returnParameters": {
              "id": 3677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1856:0:16"
            },
            "scope": 3873,
            "src": "1577:700:16",
            "stateMutability": "payable",
            "superFunction": 10348,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3805,
              "nodeType": "Block",
              "src": "2904:922:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3739,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "2922:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2922:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3741,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "2935:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2922:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2914:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:62:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3745,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:62:16"
                },
                {
                  "assignments": [
                    3747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3747,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "2987:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2987:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3750,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3748,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6639,
                      "src": "3004:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 3749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2987:40:16"
                },
                {
                  "assignments": [
                    3752,
                    3754,
                    3756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3752,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "3051:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3051:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3754,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "3085:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3085:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3756,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "3122:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3122:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3762,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3759,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3719,
                        "src": "3190:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3760,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3722,
                        "src": "3199:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3757,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5430,
                        "src": "3156:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10243",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 3758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10233,
                      "src": "3156:33:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17490_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:53:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:172:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3763,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5439,
                        "src": "3220:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 3765,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3764,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3747,
                        "src": "3226:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3220:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3767,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3747,
                          "src": "3260:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3768,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3719,
                          "src": "3280:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3769,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3752,
                          "src": "3301:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3770,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3754,
                          "src": "3327:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3771,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3756,
                          "src": "3356:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3766,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6706,
                        "src": "3236:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17535_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 3772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3236:143:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3220:159:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17535_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 3774,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:159:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3775,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21065,
                        "src": "3394:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3394:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3406:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3394:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3786,
                  "nodeType": "IfStatement",
                  "src": "3390:151:16",
                  "trueBody": {
                    "id": 3785,
                    "nodeType": "Block",
                    "src": "3409:132:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3780,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3747,
                              "src": "3512:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3781,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21065,
                                "src": "3520:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3520:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3779,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6452,
                            "src": "3495:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 3783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3495:35:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3784,
                        "nodeType": "ExpressionStatement",
                        "src": "3495:35:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3792,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3747,
                        "src": "3588:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3787,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "3551:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 3790,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3788,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3719,
                            "src": "3565:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 3789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17462,
                          "src": "3565:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3551:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 3791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3551:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 3793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3794,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:44:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3796,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3747,
                        "src": "3677:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3797,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3719,
                        "src": "3697:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3798,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3752,
                        "src": "3718:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3799,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3754,
                        "src": "3744:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3800,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3756,
                        "src": "3773:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "3800:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3800:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3795,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6751,
                      "src": "3606:57:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:213:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3804,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:213:16"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 3806,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3727,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3726,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2785:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:15:16"
              },
              {
                "arguments": [],
                "id": 3729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3728,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "2809:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3731,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3719,
                      "src": "2844:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 3732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17462,
                    "src": "2844:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3733,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3730,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5453,
                  "src": "2833:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:28:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3735,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3719,
                    "src": "2891:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 3736,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3734,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5569,
                  "src": "2870:20:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17475_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2870:29:16"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3719,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "2606:41:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3718,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17475,
                    "src": "2606:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3722,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "2657:46:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3720,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17490,
                      "src": "2657:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17490_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 3721,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2657:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3724,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "2713:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:147:16"
            },
            "returnParameters": {
              "id": 3737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:16"
            },
            "scope": 3873,
            "src": "2568:1258:16",
            "stateMutability": "payable",
            "superFunction": 10365,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3835,
              "nodeType": "Block",
              "src": "4468:223:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3822,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3808,
                        "src": "4503:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3823,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3810,
                        "src": "4535:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3824,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "4567:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3825,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3814,
                        "src": "4606:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3821,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6417,
                        2295,
                        8852
                      ],
                      "referencedDeclaration": 6417,
                      "src": "4478:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 3826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:153:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3827,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:153:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3828,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "4642:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3829,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2565,
                            "src": "4660:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11063_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 3830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4660:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11063",
                            "typeString": "contract SettingsInterface"
                          }
                        },
                        "id": 3831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ETH_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11062,
                        "src": "4660:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 3832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4660:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4642:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3834,
                  "nodeType": "ExpressionStatement",
                  "src": "4642:42:16"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform",
            "id": 3836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3818,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8818,
                  "src": "4449:16:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4449:18:16"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3808,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4278:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3810,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4314:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3812,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4350:33:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4350:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3814,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4393:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3816,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4426:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4268:171:16"
            },
            "returnParameters": {
              "id": 3820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4468:0:16"
            },
            "scope": 3873,
            "src": "4249:442:16",
            "stateMutability": "nonpayable",
            "superFunction": 10458,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3871,
              "nodeType": "Block",
              "src": "5118:171:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3845,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "5128:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3848,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3840,
                          "src": "5166:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3846,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5420,
                          "src": "5146:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5146:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5146:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3851,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3852,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5439,
                          "src": "5183:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 3854,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3853,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3838,
                          "src": "5189:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5183:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17535_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 3855,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17520,
                      "src": "5183:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3861,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3840,
                          "src": "5239:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3856,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5439,
                              "src": "5210:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 3858,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3857,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3838,
                              "src": "5216:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5210:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17535_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 3859,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17520,
                          "src": "5210:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5210:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5210:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5183:63:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3864,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:63:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3868,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3840,
                        "src": "5275:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3865,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3842,
                        "src": "5256:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5256:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3870,
                  "nodeType": "ExpressionStatement",
                  "src": "5256:26:16"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid\n@param recipient address that will receive the given amount.",
            "id": 3872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3838,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "5029:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3840,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "5053:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3842,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "5077:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:15:16",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5019:89:16"
            },
            "returnParameters": {
              "id": 3844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5118:0:16"
            },
            "scope": 3873,
            "src": "4993:296:16",
            "stateMutability": "nonpayable",
            "superFunction": 6310,
            "visibility": "internal"
          }
        ],
        "scope": 3874,
        "src": "1347:3944:16"
      }
    ],
    "src": "0:5292:16"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/EtherCollateralLoans.sol",
    "exportedSymbols": {
      "EtherCollateralLoans": [
        3873
      ]
    },
    "id": 3874,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3653,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:16"
      },
      {
        "id": 3654,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:16"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol",
        "file": "./LoansBase.sol",
        "id": 3655,
        "nodeType": "ImportDirective",
        "scope": 3874,
        "sourceUnit": 6827,
        "src": "72:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3656,
              "name": "LoansBase",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6826,
              "src": "1380:9:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LoansBase_$6826",
                "typeString": "contract LoansBase"
              }
            },
            "id": 3657,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:9:16"
          }
        ],
        "contractDependencies": [
          2343,
          2634,
          6826,
          8853,
          10469,
          20866,
          20935
        ],
        "contractKind": "contract",
        "documentation": "@notice This contract is used as a basis for the creation of Ether based loans across the platform\n@notice It implements the LoansBase contract from Teller\n@author develop@teller.finance",
        "fullyImplemented": true,
        "id": 3873,
        "linearizedBaseContracts": [
          3873,
          6826,
          2343,
          20866,
          20935,
          2634,
          8853,
          10469
        ],
        "name": "EtherCollateralLoans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3716,
              "nodeType": "Block",
              "src": "1856:421:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 3679,
                                "name": "loans",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5439,
                                "src": "1887:5:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                  "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                                }
                              },
                              "id": 3681,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 3680,
                                "name": "loanID",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3661,
                                "src": "1893:6:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1887:13:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Loan_$17535_storage",
                                "typeString": "struct TellerCommon.Loan storage ref"
                              }
                            },
                            "id": 3682,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loanTerms",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 17514,
                            "src": "1887:23:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$17510_storage",
                              "typeString": "struct TellerCommon.LoanTerms storage ref"
                            }
                          },
                          "id": 3683,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17499,
                          "src": "1887:32:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3684,
                          "name": "borrower",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3659,
                          "src": "1923:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1887:44:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745525f4c4f414e5f49445f4d49534d41544348",
                        "id": 3686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:27:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        },
                        "value": "BORROWER_LOAN_ID_MISMATCH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_31400c93e7612a426f62305c72af12a1f3526754fc3306d2a79308add48964f3",
                          "typeString": "literal_string \"BORROWER_LOAN_ID_MISMATCH\""
                        }
                      ],
                      "id": 3678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1866:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1866:116:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3688,
                  "nodeType": "ExpressionStatement",
                  "src": "1866:116:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3690,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "2000:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2000:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3692,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3663,
                          "src": "2013:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2000:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2021:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3689,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1992:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:52:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3696,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:52:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3698,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "2062:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2062:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2074:1:16",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2062:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43414e4e4f545f4445504f5349545f5a45524f",
                        "id": 3702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:21:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        },
                        "value": "CANNOT_DEPOSIT_ZERO"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c128870acac43b43729c24f5fadb31dc103e9b8212ed4397661fcb83bce477ea",
                          "typeString": "literal_string \"CANNOT_DEPOSIT_ZERO\""
                        }
                      ],
                      "id": 3697,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2054:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2054:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3704,
                  "nodeType": "ExpressionStatement",
                  "src": "2054:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3706,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3661,
                        "src": "2194:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3707,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3663,
                        "src": "2202:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3705,
                      "name": "_payInCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6452,
                      "src": "2177:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:32:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3709,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:32:16"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3711,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3661,
                        "src": "2245:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3712,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3659,
                        "src": "2253:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3713,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3663,
                        "src": "2263:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3710,
                      "name": "CollateralDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10256,
                      "src": "2225:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,address,uint256)"
                      }
                    },
                    "id": 3714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2225:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3715,
                  "nodeType": "EmitStatement",
                  "src": "2220:50:16"
                }
              ]
            },
            "documentation": "@notice Deposit collateral into a loan\n@param borrower The address of the loan borrower.\n@param loanID The ID of the loan the collateral is for",
            "id": 3717,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3666,
                    "name": "loanID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3661,
                    "src": "1741:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3667,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3665,
                  "name": "loanActiveOrSet",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5516,
                  "src": "1725:15:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1725:23:16"
              },
              {
                "arguments": [],
                "id": 3669,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3668,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "1757:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1757:15:16"
              },
              {
                "arguments": [],
                "id": 3671,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3670,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "1781:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1781:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3674,
                        "name": "lendingPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5428,
                        "src": "1838:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LendingPoolInterface_$10189",
                          "typeString": "contract LendingPoolInterface"
                        }
                      ],
                      "id": 3673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1830:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 3675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1830:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3676,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3672,
                  "name": "whenLendingPoolNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2244,
                  "src": "1805:24:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1805:46:16"
              }
            ],
            "name": "depositCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3659,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "1613:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3658,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1613:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3661,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "1639:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1639:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3663,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3717,
                  "src": "1663:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1663:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1603:80:16"
            },
            "returnParameters": {
              "id": 3677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1856:0:16"
            },
            "scope": 3873,
            "src": "1577:700:16",
            "stateMutability": "payable",
            "superFunction": 10348,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3805,
              "nodeType": "Block",
              "src": "2904:922:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3742,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3739,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21065,
                            "src": "2922:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2922:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 3741,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3724,
                          "src": "2935:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2922:29:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "494e434f52524543545f4554485f414d4f554e54",
                        "id": 3743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2953:22:16",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        },
                        "value": "INCORRECT_ETH_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_378aefa29da1d99d75a1f1d0d4cef8eff2153911d8af8f0e1da33698030796f7",
                          "typeString": "literal_string \"INCORRECT_ETH_AMOUNT\""
                        }
                      ],
                      "id": 3738,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "2914:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:62:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3745,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:62:16"
                },
                {
                  "assignments": [
                    3747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3747,
                      "name": "loanID",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "2987:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3746,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2987:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3750,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3748,
                      "name": "getAndIncrementLoanID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6639,
                      "src": "3004:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
                        "typeString": "function () returns (uint256)"
                      }
                    },
                    "id": 3749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3004:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2987:40:16"
                },
                {
                  "assignments": [
                    3752,
                    3754,
                    3756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3752,
                      "name": "interestRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "3051:20:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3051:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3754,
                      "name": "collateralRatio",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "3085:23:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3085:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 3756,
                      "name": "maxLoanAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 3805,
                      "src": "3122:21:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 3755,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3122:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 3762,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3759,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3719,
                        "src": "3190:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3760,
                        "name": "responses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3722,
                        "src": "3199:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanResponse calldata[] calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3757,
                        "name": "loanTermsConsensus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5430,
                        "src": "3156:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LoanTermsConsensusInterface_$10243",
                          "typeString": "contract LoanTermsConsensusInterface"
                        }
                      },
                      "id": 3758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "processRequest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10233,
                      "src": "3156:33:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_array$_t_struct$_LoanResponse_$17490_memory_$dyn_memory_ptr_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (struct TellerCommon.LoanRequest memory,struct TellerCommon.LoanResponse memory[] memory) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3156:53:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3037:172:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3763,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5439,
                        "src": "3220:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 3765,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3764,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3747,
                        "src": "3226:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3220:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3767,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3747,
                          "src": "3260:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3768,
                          "name": "request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3719,
                          "src": "3280:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3769,
                          "name": "interestRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3752,
                          "src": "3301:12:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3770,
                          "name": "collateralRatio",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3754,
                          "src": "3327:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 3771,
                          "name": "maxLoanAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3756,
                          "src": "3356:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanRequest calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 3766,
                        "name": "createLoan",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6706,
                        "src": "3236:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_struct$_Loan_$17535_memory_ptr_$",
                          "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256) view returns (struct TellerCommon.Loan memory)"
                        }
                      },
                      "id": 3772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3236:143:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_memory_ptr",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "3220:159:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17535_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 3774,
                  "nodeType": "ExpressionStatement",
                  "src": "3220:159:16"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 3775,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21065,
                        "src": "3394:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3394:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3406:1:16",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3394:13:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3786,
                  "nodeType": "IfStatement",
                  "src": "3390:151:16",
                  "trueBody": {
                    "id": 3785,
                    "nodeType": "Block",
                    "src": "3409:132:16",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 3780,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3747,
                              "src": "3512:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 3781,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21065,
                                "src": "3520:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 3782,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3520:9:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 3779,
                            "name": "_payInCollateral",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6452,
                            "src": "3495:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 3783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3495:35:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3784,
                        "nodeType": "ExpressionStatement",
                        "src": "3495:35:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3792,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3747,
                        "src": "3588:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3787,
                          "name": "borrowerLoans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5435,
                          "src": "3551:13:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                            "typeString": "mapping(address => uint256[] storage ref)"
                          }
                        },
                        "id": 3790,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3788,
                            "name": "request",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3719,
                            "src": "3565:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanRequest calldata"
                            }
                          },
                          "id": 3789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "borrower",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17462,
                          "src": "3565:16:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3551:31:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 3791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3551:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 3793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3551:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3794,
                  "nodeType": "ExpressionStatement",
                  "src": "3551:44:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3796,
                        "name": "loanID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3747,
                        "src": "3677:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3797,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3719,
                        "src": "3697:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3798,
                        "name": "interestRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3752,
                        "src": "3718:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3799,
                        "name": "collateralRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3754,
                        "src": "3744:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3800,
                        "name": "maxLoanAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3756,
                        "src": "3773:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3801,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21065,
                          "src": "3800:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3800:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                          "typeString": "struct TellerCommon.LoanRequest calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3795,
                      "name": "_emitLoanTermsSetAndCollateralDepositedEventsIfApplicable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6751,
                      "src": "3606:57:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_LoanRequest_$17475_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,struct TellerCommon.LoanRequest memory,uint256,uint256,uint256,uint256)"
                      }
                    },
                    "id": 3803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3606:213:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3804,
                  "nodeType": "ExpressionStatement",
                  "src": "3606:213:16"
                }
              ]
            },
            "documentation": "@notice Creates a loan with the loan request and terms\n@param request Struct of the protocol loan request\n@param responses List of structs of the protocol loan responses\n@param collateralAmount Amount of collateral required for the loan",
            "id": 3806,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3727,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3726,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8828,
                  "src": "2785:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2785:15:16"
              },
              {
                "arguments": [],
                "id": 3729,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3728,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2230,
                  "src": "2809:13:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2809:15:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 3731,
                      "name": "request",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3719,
                      "src": "2844:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                        "typeString": "struct TellerCommon.LoanRequest calldata"
                      }
                    },
                    "id": 3732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "borrower",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 17462,
                    "src": "2844:16:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3733,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3730,
                  "name": "isBorrower",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5453,
                  "src": "2833:10:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_address_$",
                    "typeString": "modifier (address)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2833:28:16"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3735,
                    "name": "request",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3719,
                    "src": "2891:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                      "typeString": "struct TellerCommon.LoanRequest calldata"
                    }
                  }
                ],
                "id": 3736,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3734,
                  "name": "withValidLoanRequest",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 5569,
                  "src": "2870:20:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_struct$_LoanRequest_$17475_memory_ptr_$",
                    "typeString": "modifier (struct TellerCommon.LoanRequest memory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2870:29:16"
              }
            ],
            "name": "createLoanWithTerms",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3719,
                  "name": "request",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "2606:41:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanRequest_$17475_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanRequest"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3718,
                    "name": "TellerCommon.LoanRequest",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17475,
                    "src": "2606:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanRequest_$17475_storage_ptr",
                      "typeString": "struct TellerCommon.LoanRequest"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3722,
                  "name": "responses",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "2657:46:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_calldata_$dyn_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanResponse[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 3720,
                      "name": "TellerCommon.LoanResponse",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 17490,
                      "src": "2657:25:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LoanResponse_$17490_storage_ptr",
                        "typeString": "struct TellerCommon.LoanResponse"
                      }
                    },
                    "id": 3721,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2657:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_LoanResponse_$17490_storage_$dyn_storage_ptr",
                      "typeString": "struct TellerCommon.LoanResponse[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3724,
                  "name": "collateralAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3806,
                  "src": "2713:24:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2596:147:16"
            },
            "returnParameters": {
              "id": 3737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2904:0:16"
            },
            "scope": 3873,
            "src": "2568:1258:16",
            "stateMutability": "payable",
            "superFunction": 10365,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3835,
              "nodeType": "Block",
              "src": "4468:223:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3822,
                        "name": "priceOracleAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3808,
                        "src": "4503:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3823,
                        "name": "lendingPoolAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3810,
                        "src": "4535:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3824,
                        "name": "loanTermsConsensusAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3812,
                        "src": "4567:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3825,
                        "name": "settingsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3814,
                        "src": "4606:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3821,
                      "name": "_initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6417,
                        2295,
                        8852
                      ],
                      "referencedDeclaration": 6417,
                      "src": "4478:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 3826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4478:153:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3827,
                  "nodeType": "ExpressionStatement",
                  "src": "4478:153:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3828,
                      "name": "collateralToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "4642:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3829,
                            "name": "settings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2565,
                            "src": "4660:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_SettingsInterface_$11063_$",
                              "typeString": "function () view returns (contract SettingsInterface)"
                            }
                          },
                          "id": 3830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4660:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_SettingsInterface_$11063",
                            "typeString": "contract SettingsInterface"
                          }
                        },
                        "id": 3831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ETH_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11062,
                        "src": "4660:22:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 3832,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4660:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4642:42:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3834,
                  "nodeType": "ExpressionStatement",
                  "src": "4642:42:16"
                }
              ]
            },
            "documentation": "@notice Initializes the current contract instance setting the required parameters\n@param priceOracleAddress Contract address of the price oracle\n@param lendingPoolAddress Contract address of the lending pool\n@param loanTermsConsensusAddress Contract adddress for loan term consensus\n@param settingsAddress Contract address for the configuration of the platform",
            "id": 3836,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 3819,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3818,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8818,
                  "src": "4449:16:16",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4449:18:16"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3808,
                  "name": "priceOracleAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4278:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4278:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3810,
                  "name": "lendingPoolAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4314:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3812,
                  "name": "loanTermsConsensusAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4350:33:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4350:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3814,
                  "name": "settingsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4393:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3816,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3836,
                  "src": "4426:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3815,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4268:171:16"
            },
            "returnParameters": {
              "id": 3820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4468:0:16"
            },
            "scope": 3873,
            "src": "4249:442:16",
            "stateMutability": "nonpayable",
            "superFunction": 10458,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3871,
              "nodeType": "Block",
              "src": "5118:171:16",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3845,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "5128:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3848,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3840,
                          "src": "5166:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 3846,
                          "name": "totalCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5420,
                          "src": "5146:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5146:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5146:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:45:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3851,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:45:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 3852,
                          "name": "loans",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5439,
                          "src": "5183:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                            "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                          }
                        },
                        "id": 3854,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 3853,
                          "name": "loanID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3838,
                          "src": "5189:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5183:13:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Loan_$17535_storage",
                          "typeString": "struct TellerCommon.Loan storage ref"
                        }
                      },
                      "id": 3855,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17520,
                      "src": "5183:24:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 3861,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3840,
                          "src": "5239:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3856,
                              "name": "loans",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5439,
                              "src": "5210:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                                "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                              }
                            },
                            "id": 3858,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3857,
                              "name": "loanID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3838,
                              "src": "5216:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5210:13:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Loan_$17535_storage",
                              "typeString": "struct TellerCommon.Loan storage ref"
                            }
                          },
                          "id": 3859,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17520,
                          "src": "5210:24:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 3860,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19761,
                        "src": "5210:28:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 3862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5210:36:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5183:63:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3864,
                  "nodeType": "ExpressionStatement",
                  "src": "5183:63:16"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3868,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3840,
                        "src": "5275:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3865,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3842,
                        "src": "5256:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5256:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5256:26:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3870,
                  "nodeType": "ExpressionStatement",
                  "src": "5256:26:16"
                }
              ]
            },
            "documentation": "@notice Pays out collateral for the associated loan\n@param loanID The ID of the loan the collateral is for\n@param amount The amount of collateral to be paid\n@param recipient address that will receive the given amount.",
            "id": 3872,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_payOutCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3838,
                  "name": "loanID",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "5029:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5029:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3840,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "5053:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3839,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5053:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3842,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 3872,
                  "src": "5077:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5077:15:16",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5019:89:16"
            },
            "returnParameters": {
              "id": 3844,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5118:0:16"
            },
            "scope": 3873,
            "src": "4993:296:16",
            "stateMutability": "nonpayable",
            "superFunction": 6310,
            "visibility": "internal"
          }
        ],
        "scope": 3874,
        "src": "1347:3944:16"
      }
    ],
    "src": "0:5292:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-16T17:44:36.523Z",
  "devdoc": {
    "author": "develop@teller.finance",
    "methods": {
      "cToken()": {
        "return": "Address of the cToken"
      },
      "canLiquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to check"
        },
        "return": "bool weather the loan can be liquidated"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "params": {
          "collateralAmount": "Amount of collateral required for the loan",
          "request": "Struct of the protocol loan request",
          "responses": "List of structs of the protocol loan responses"
        }
      },
      "depositCollateral(address,uint256,uint256)": {
        "params": {
          "borrower": "The address of the loan borrower.",
          "loanID": "The ID of the loan the collateral is for"
        }
      },
      "getBorrowerLoans(address)": {
        "params": {
          "borrower": "The borrower's address"
        }
      },
      "getCollateralInfo(uint256)": {
        "params": {
          "loanID": "of the loan to get info for"
        },
        "return": "memory TellerCommon.LoanCollateralInfo Collateral information of the loan"
      },
      "getTotalOwed(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be queried"
        },
        "return": "uint256 The total amount owed remaining"
      },
      "initialize(address,address,address,address,address)": {
        "params": {
          "lendingPoolAddress": "Contract address of the lending pool",
          "loanTermsConsensusAddress": "Contract adddress for loan term consensus",
          "priceOracleAddress": "Contract address of the price oracle",
          "settingsAddress": "Contract address for the configuration of the platform"
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "lendingToken()": {
        "return": "Address of the lending token"
      },
      "liquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be liquidated"
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens to pay back to the loan",
          "loanID": "The ID of the loan the payment is for"
        }
      },
      "setPriceOracle(address)": {
        "details": "It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.",
        "params": {
          "newPriceOracle": "the new price oracle address."
        }
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "tToken()": {
        "return": "Address of the tToken"
      },
      "takeOutLoan(uint256,uint256)": {
        "details": "collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points."
      },
      "withdrawCollateral(uint256,uint256)": {
        "params": {
          "amount": "The amount of collateral token or ether the caller is hoping to withdraw.",
          "loanID": "The ID of the loan the collateral is for"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "cToken()": {
        "notice": "Returns the cToken in the lending pool"
      },
      "canLiquidateLoan(uint256)": {
        "notice": "A loan can be liquidated if it is: under collateralized or expired"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "notice": "Creates a loan with the loan request and terms"
      },
      "depositCollateral(address,uint256,uint256)": {
        "notice": "Deposit collateral into a loan"
      },
      "getBorrowerLoans(address)": {
        "notice": "Get a list of all loans for a borrower"
      },
      "getCollateralInfo(uint256)": {
        "notice": "Get collateral information of a specific loan"
      },
      "getTotalOwed(uint256)": {
        "notice": "Returns the total owed amount remaining for a specified loan"
      },
      "initialize(address,address,address,address,address)": {
        "notice": "Initializes the current contract instance setting the required parameters"
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "lendingToken()": {
        "notice": "Returns the lending token in the lending pool"
      },
      "liquidateLoan(uint256)": {
        "notice": "Liquidate a loan if it is expired or under collateralized"
      },
      "repay(uint256,uint256)": {
        "notice": "Make a payment to a loan"
      },
      "setPriceOracle(address)": {
        "notice": "Updates the current price oracle instance."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "tToken()": {
        "notice": "Returns the tToken in the lending pool"
      },
      "takeOutLoan(uint256,uint256)": {
        "notice": "Take out a loan"
      },
      "withdrawCollateral(uint256,uint256)": {
        "notice": "Withdraw collateral from a loan, unless this isn't allowed"
      }
    },
    "notice": "This contract is used as a basis for the creation of Ether based loans across the platformIt implements the LoansBase contract from Teller"
  }
}