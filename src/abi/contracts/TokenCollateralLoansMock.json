{
  "contractName": "TokenCollateralLoansMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "depositAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        }
      ],
      "name": "CollateralWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralOut",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensIn",
          "type": "uint256"
        }
      ],
      "name": "LoanLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalOwed",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountBorrowed",
          "type": "uint256"
        }
      ],
      "name": "LoanTakenOut",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxLoanAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        }
      ],
      "name": "LoanTermsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "PriceOracleUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "borrowerLoans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "canLiquidateLoan",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "collateralToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "requestNonce",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "requestTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanRequest",
          "name": "request",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "consensusAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "responseTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "signerNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "internalType": "struct TellerCommon.Signature",
              "name": "signature",
              "type": "tuple"
            }
          ],
          "internalType": "struct TellerCommon.LoanResponse[]",
          "name": "responses",
          "type": "tuple[]"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "createLoanWithTerms",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "getBorrowerLoans",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getCollateralInfo",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "collateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInLendingTokens",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "neededInCollateralTokens",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "moreCollateralRequired",
              "type": "bool"
            }
          ],
          "internalType": "struct TellerCommon.LoanCollateralInfo",
          "name": "",
          "type": "tuple"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "getTotalOwed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "priceOracleAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingPoolAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loanTermsConsensusAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "settingsAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "collateralTokenAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "value",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingPool",
      "outputs": [
        {
          "internalType": "contract LendingPoolInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "liquidateLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanIDCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loanTermsConsensus",
      "outputs": [
        {
          "internalType": "contract LoanTermsConsensusInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "loans",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "escrow",
          "type": "address"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "mockTokenFunctions",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "priceOracle",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "setPriceOracle",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "settings",
      "outputs": [
        {
          "internalType": "contract SettingsInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBorrow",
          "type": "uint256"
        }
      ],
      "name": "takeOutLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanID",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "newMockTokenFunctions",
          "type": "bool"
        }
      ],
      "name": "setMockTokenFunctions",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLoanIdCounter",
          "type": "uint256"
        }
      ],
      "name": "setLoanIDCounter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "loanIDs",
          "type": "uint256[]"
        }
      ],
      "name": "setBorrowerLoans",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setTotalCollateral",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "borrower",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "interestRate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "collateralRatio",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "maxLoanAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            }
          ],
          "internalType": "struct TellerCommon.LoanTerms",
          "name": "loanTerms",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "termsExpiry",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanStartTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastCollateralIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "principalOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interestOwed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum TellerCommon.LoanStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "liquidated",
          "type": "bool"
        }
      ],
      "name": "setLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensIn\",\"type\":\"uint256\"}],\"name\":\"LoanLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalOwed\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountBorrowed\",\"type\":\"uint256\"}],\"name\":\"LoanTakenOut\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"}],\"name\":\"LoanTermsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"borrowerLoans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"canLiquidateLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"collateralToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanRequest\",\"name\":\"request\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"consensusAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"responseTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"signerNonce\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct TellerCommon.Signature\",\"name\":\"signature\",\"type\":\"tuple\"}],\"internalType\":\"struct TellerCommon.LoanResponse[]\",\"name\":\"responses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"createLoanWithTerms\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"getBorrowerLoans\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getCollateralInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInLendingTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"neededInCollateralTokens\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"moreCollateralRequired\",\"type\":\"bool\"}],\"internalType\":\"struct TellerCommon.LoanCollateralInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"getTotalOwed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceOracleAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingPoolAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanTermsConsensusAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"settingsAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"collateralTokenAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract LendingPoolInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"liquidateLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanIDCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loanTermsConsensus\",\"outputs\":[{\"internalType\":\"contract LoanTermsConsensusInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"escrow\",\"type\":\"address\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"mockTokenFunctions\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"priceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"loanIDs\",\"type\":\"uint256[]\"}],\"name\":\"setBorrowerLoans\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxLoanAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"internalType\":\"struct TellerCommon.LoanTerms\",\"name\":\"loanTerms\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"termsExpiry\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanStartTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastCollateralIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"principalOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestOwed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum TellerCommon.LoanStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"liquidated\",\"type\":\"bool\"}],\"name\":\"setLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLoanIdCounter\",\"type\":\"uint256\"}],\"name\":\"setLoanIDCounter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"newMockTokenFunctions\",\"type\":\"bool\"}],\"name\":\"setMockTokenFunctions\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setTotalCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"settings\",\"outputs\":[{\"internalType\":\"contract SettingsInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBorrow\",\"type\":\"uint256\"}],\"name\":\"takeOutLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanID\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"cToken()\":{\"return\":\"Address of the cToken\"},\"canLiquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to check\"},\"return\":\"bool weather the loan can be liquidated\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"params\":{\"collateralAmount\":\"Amount of collateral required for the loan\",\"request\":\"Struct of the protocol loan request\",\"responses\":\"List of structs of the protocol loan responses\"}},\"depositCollateral(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount to deposit as collateral.\",\"borrower\":\"The address of the loan borrower.\",\"loanID\":\"The ID of the loan the collateral is for\"}},\"getBorrowerLoans(address)\":{\"params\":{\"borrower\":\"The borrower's address\"}},\"getCollateralInfo(uint256)\":{\"params\":{\"loanID\":\"of the loan to get info for\"},\"return\":\"memory TellerCommon.LoanCollateralInfo Collateral information of the loan\"},\"getTotalOwed(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be queried\"},\"return\":\"uint256 The total amount owed remaining\"},\"initialize(address,address,address,address,address)\":{\"params\":{\"collateralTokenAddress\":\"Contract address for the collateral token.\",\"lendingPoolAddress\":\"Contract address of the lending pool\",\"loanTermsConsensusAddress\":\"Contract adddress for loan term consensus\",\"priceOracleAddress\":\"Contract address of the price oracle\",\"settingsAddress\":\"Contract address for the configuration of the platform\"}},\"initialized()\":{\"return\":\"true if contract is initialized. Otherwise it returns false.\"},\"lendingToken()\":{\"return\":\"Address of the lending token\"},\"liquidateLoan(uint256)\":{\"params\":{\"loanID\":\"The ID of the loan to be liquidated\"}},\"repay(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of tokens to pay back to the loan\",\"loanID\":\"The ID of the loan the payment is for\"}},\"setPriceOracle(address)\":{\"details\":\"It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.\",\"params\":{\"newPriceOracle\":\"the new price oracle address.\"}},\"settings()\":{\"details\":\"This address should NOT change over the time. See details in the _setSettings(...) function.\"},\"tToken()\":{\"return\":\"Address of the tToken\"},\"takeOutLoan(uint256,uint256)\":{\"details\":\"collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points.\"},\"withdrawCollateral(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral token or ether the caller is hoping to withdraw.\",\"loanID\":\"The ID of the loan the collateral is for\"}}}},\"userdoc\":{\"methods\":{\"cToken()\":{\"notice\":\"Returns the cToken in the lending pool\"},\"canLiquidateLoan(uint256)\":{\"notice\":\"A loan can be liquidated if it is: under collateralized or expired\"},\"createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)\":{\"notice\":\"Creates a loan with the loan request and terms\"},\"depositCollateral(address,uint256,uint256)\":{\"notice\":\"Deposit collateral tokens into a loan.\"},\"getBorrowerLoans(address)\":{\"notice\":\"Get a list of all loans for a borrower\"},\"getCollateralInfo(uint256)\":{\"notice\":\"Get collateral information of a specific loan\"},\"getTotalOwed(uint256)\":{\"notice\":\"Returns the total owed amount remaining for a specified loan\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the current contract instance setting the required parameters, if allowed\"},\"initialized()\":{\"notice\":\"Gets if the contract is initialized.\"},\"lendingToken()\":{\"notice\":\"Returns the lending token in the lending pool\"},\"liquidateLoan(uint256)\":{\"notice\":\"Liquidate a loan if it is expired or under collateralized\"},\"repay(uint256,uint256)\":{\"notice\":\"Make a payment to a loan\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the current price oracle instance.\"},\"settings()\":{\"notice\":\"The gets the settings contract address from the SETTINGS_SLOT.\"},\"tToken()\":{\"notice\":\"Returns the tToken in the lending pool\"},\"takeOutLoan(uint256,uint256)\":{\"notice\":\"Take out a loan\"},\"withdrawCollateral(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a loan, unless this isn't allowed\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/TokenCollateralLoansMock.sol\":\"TokenCollateralLoansMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/atm/ATMGovernanceInterface.sol\":{\"keccak256\":\"0x941d294aa385de623880428e08bf2e8ed4ef4e0f64b64297711748bbcf1e3e62\",\"urls\":[\"bzz-raw://e25e5830eb12b06fc560d5fc77112201fe6cce29a397ce32a982fffe1f0ea88d\",\"dweb:/ipfs/QmUoHemMNYziKTm9b7FwxQvZrtDYpLDw1HyUFchpwdbdw1\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/Base.sol\":{\"keccak256\":\"0x23e85149613cbc80bec3de065d969b361d19c61177f426199d10667769f97a49\",\"urls\":[\"bzz-raw://1fbac7f12b453df42a3bd1632962e5c8e0738f9dd65fbc070ab35099ef1ad89b\",\"dweb:/ipfs/QmW8NR5CdGkDfiE9QouSCUznPQde3gNZhjRNnLCCPbJX1Z\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseUpgradeable.sol\":{\"keccak256\":\"0x0f0baf7e7aa38b47e749a28ab674cc94a97ca92244a9b2e919c372c1b06546cf\",\"urls\":[\"bzz-raw://4b05a358a1273734f3143d46309239b36c9dd933a7011b8bc408fb040c6c8486\",\"dweb:/ipfs/QmPrUGETWEMAafXcU528oW6A9rBDCy5qqS24xEYLntevYU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/LoansBase.sol\":{\"keccak256\":\"0x677d9fb130652827f2edc7203b1587b3250b5a50885a00e8f66177b718c58cf5\",\"urls\":[\"bzz-raw://ee3ffe7d965cbe295c725d975f16b99e4b9e63321da9621199aa488d3690f6e3\",\"dweb:/ipfs/QmanwDEqyiVGLymYPrwGNWXF19zE7gmgepFE8mHvifzkAA\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TInitializable.sol\":{\"keccak256\":\"0xfd04f8b08548b7a4aacbf26eaf65f64628c38f9fc34c363317daa593c7c25917\",\"urls\":[\"bzz-raw://025bbb10f643ebec3bc77303bca1585c572c76f8261ce42ed816b3c2a7799d20\",\"dweb:/ipfs/QmYS3L6u6f7ucRxGoap3RSD1jeJERnZk3XQRden1fEDQMs\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol\":{\"keccak256\":\"0x9101fd7b3e9a06c39a70513c9d4eaec804c40924ec3ee276d9a6377058b609fe\",\"urls\":[\"bzz-raw://d74a480eb7888f45fd4d23253d28878793eba6237ecb73f6e79f0e9b00459e92\",\"dweb:/ipfs/QmYRdSpemBwFfdEwbS8dSsqBEF211EPhXHCKVQp5rqJLVV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowFactoryInterface.sol\":{\"keccak256\":\"0xb5b2225e4f6db57d59d5292f542acc0675e9f95b3e3094d9be4cf6ec079cb86e\",\"urls\":[\"bzz-raw://f0c822f79ebb3f775b4fea591a5555c3efacba6719d4adbab83571dd35f059e3\",\"dweb:/ipfs/QmYiHmtPJsJD67g7Pk7kM72hsHS7BVVJtciKjCoUioW4gS\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/EscrowInterface.sol\":{\"keccak256\":\"0x65c08f6f62a51becac639418b7ebe9781decdc89e1f0bc21acfa609418dfa8cb\",\"urls\":[\"bzz-raw://dabc828f30fae14e7d70643480cb1202ec2c85cf654517f18440a0f5b8062101\",\"dweb:/ipfs/QmP3LXe9upby2uN3KunXhBeKm1Mj9xqf31sqDFEMYnwXYt\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/InterestValidatorInterface.sol\":{\"keccak256\":\"0x91250ee3c1d73b5d1720f7b41f18072eb347d73e4d3de464537ece49e1fa1d93\",\"urls\":[\"bzz-raw://f11ce1d70152f6d19f9c23788b4458631df3fd748a52849b899183ce2dabc52b\",\"dweb:/ipfs/QmaNQybwKYW5BfT3h6z6P1SSUwYEyXQviisYjUr7cHLzQR\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0xcfa109416508b53f1e67f11040e0187ed8089d361cd1fdaec7f671058fc00168\",\"urls\":[\"bzz-raw://c9f0fcc3736ed10d81abae971b8702b08f14377dbc4c098c4f788ec8328ac666\",\"dweb:/ipfs/QmV3Dr9zyL5957GpWePJEBn5YewmRQTdr7T8vhxXXHPUFq\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoanTermsConsensusInterface.sol\":{\"keccak256\":\"0x93381688f1f920d3c445cd373603eb0aedea609c1827d4341a504ffc9f05e53a\",\"urls\":[\"bzz-raw://bb98e5e3728055be581c59ca924e7e194f81332dd8cdaf527c07ffd35d93b64c\",\"dweb:/ipfs/QmSccwLhRNdgF5x6f1fwF77pHyWJrCDAsaCqKCECpa4FsD\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LoansInterface.sol\":{\"keccak256\":\"0xfaaa0507db64689112f9435a97793cbff9b8a281309c55560f16fa3bf52f5a20\",\"urls\":[\"bzz-raw://4cd433e2560f8e577fbe6ba5e4946d7d95d49cd7f6d926ea7fa33f77e2289093\",\"dweb:/ipfs/QmdJkFSvx4KpTquDo6xFQzEWz3EenX6D8iGEY51T87tzGW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/LogicVersionsRegistryInterface.sol\":{\"keccak256\":\"0x871da1c39455ad829fdff0eb86a3d069e041f03b9dfab82136719c2c2923b926\",\"urls\":[\"bzz-raw://aca54977104d1152ecfecf39465a34148236b1d973a339c442963dabf68dd05b\",\"dweb:/ipfs/QmeKnxn9hB3aLqgWPLFhCEuxySTUF1LA1tbCo8tGyhppxV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/MarketsStateInterface.sol\":{\"keccak256\":\"0xf51bd2d361d9cf448f2c2a5bb37c2699b0d9605a8f1b6a8719f90d8f536f2a05\",\"urls\":[\"bzz-raw://415a4444e8f9aca25132f492b226b8d500081a4ba5be8e45b401a68e73e1895b\",\"dweb:/ipfs/QmUPGgnqUjidxeEpkgu4yYzhfuykgtNKehEwbps97nAAzZ\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/PairAggregatorInterface.sol\":{\"keccak256\":\"0x4331fd21591542fda69505ce457c03f9ef66f2b8fea50db669864f517c4f95a1\",\"urls\":[\"bzz-raw://3cd373c888a2b4f6d1a93f540e9a0f4982316f743c0891d310a5e712c0f8eb78\",\"dweb:/ipfs/QmYA6Z3HFYj8MZSJwKP7NjawaD5TehE6Lmtx2VbTfqEHfb\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/interfaces/SettingsInterface.sol\":{\"keccak256\":\"0xe6e8bac5c0ba6e8d1e1416ac4303be41e8290f4a25f69b7e799ef6ef63434de4\",\"urls\":[\"bzz-raw://a2368205a629bb19220cda5c34a1077856a0c477f08409fd1f9759778dec6b96\",\"dweb:/ipfs/QmX55YjR6Rq1ZUwdoUtLjcH7ZtPQsXu9mb4F6xmuWPVq3H\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/TokenCollateralLoansMock.sol\":{\"keccak256\":\"0x2f178f178c06562f9b1c618bc2d448bf3d2a43bbea2a3ec23174327b805c59de\",\"urls\":[\"bzz-raw://5525ed7e37b3473a94aecc020e6999a12a285f5613e6b1bc6156e9e6cd4c307b\",\"dweb:/ipfs/QmR6yRCegwedgdXeg3J1qeBCcRZCZcaRybpXG47EiAZFwj\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/chainlink/IChainlinkPairAggregatorRegistry.sol\":{\"keccak256\":\"0xed52aaafc7e15756431c0c847e5f7e1d52578b0f3b7f8b02674ec5d5d5a44c29\",\"urls\":[\"bzz-raw://76821662fa9a0918b355bc969deadef055737d90067658791dbc13e843958b64\",\"dweb:/ipfs/QmQzKEJiQjxRyNED8aABw62KQys3StiGwEnMXiF8P8ZQcV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/settings/IATMSettings.sol\":{\"keccak256\":\"0xc5453e6f1a43327a37db250dedb65561c4deb0f3eb3cad490a64fc56e0b6f7b7\",\"urls\":[\"bzz-raw://f6edcab27eebecb576c9a884a173a1a5fcf0c129c76b992ec77ca24518d92f91\",\"dweb:/ipfs/QmW3q6w39dg9RnxsQdfrFVudmiZh5asRnkWQVkrap9hnJf\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AssetSettingsLib.sol\":{\"keccak256\":\"0x9c67a3de3bb62fdfbd5c116016e0693300bb9d71fe055bb6aa12da305aba3bf4\",\"urls\":[\"bzz-raw://a3c9ffdd1496a6192abb62b72625e5778db231656f2c8fffd09a83d089996aa6\",\"dweb:/ipfs/QmevJ5ojFaqG363CrnJZ9x3YvGMWKfUaFoUVbCsaSzqPfe\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/ERC20DetailedLib.sol\":{\"keccak256\":\"0x9d40e0f2512901e6f3dcb2d95756724e4a71d418e755730a9828435c2b5ce204\",\"urls\":[\"bzz-raw://31d1541bf87c9356b4b43decc8b55479a00ebacd1beb0377b0a04200eed278c7\",\"dweb:/ipfs/QmcRJk2JfYzp9HFpTeW1BKWQALF7cpYW3Bj3G7QyosVmRV\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionLib.sol\":{\"keccak256\":\"0xf4caad9e4d96afe2721124eaf7203bb4e3a97beb3664c63297c4e68523f5bd65\",\"urls\":[\"bzz-raw://dcd6f564423c2cf83f3a56120f43eb6fd9f6e852cbb615be657f89e5114debf4\",\"dweb:/ipfs/QmRZStVoa5KbYRCHpzC7h998NnRhbFHfUZ71TRTiLzMTcX\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/LogicVersionsConsts.sol\":{\"keccak256\":\"0xe49711d0c8193559f76dc5f399344c8f5f5e6a8b99bf78c6bcfd9aa1c456c306\",\"urls\":[\"bzz-raw://c6432c082145470691dfde04bf5c4220ccc32a5dccf6520c3122e47e470e6c22\",\"dweb:/ipfs/Qmd97DA5SB3d8Cuwf5M6vLtfDLHYXrMj5d3cXkYPP7iPpU\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/MarketStateLib.sol\":{\"keccak256\":\"0x760fff7588382659571b8fd078b5e332e010d7e97278895fc226e8ed551cb0c6\",\"urls\":[\"bzz-raw://ff9cf8b14a780c989b2f641bf8faaf8066e586245ede58196274f8f03789c0d4\",\"dweb:/ipfs/QmVnRsrQFuRXM1c4NFVz1iUaAywq73uHVsUzemn1x5fVgF\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/NumbersList.sol\":{\"keccak256\":\"0xa397bcb75a4e7d80fd1043b7dc3c3a69f8c12435d26d843e4be40e875b71e134\",\"urls\":[\"bzz-raw://aabd466bea9e95a2585d597ebf62025f7ab4f38d1d4fe1c9fa5be1d98d131789\",\"dweb:/ipfs/QmcRGMg8X5teSF3Ga8ECPH2HvenViySkdnzvpUWvMDWXJL\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/PlatformSettingsLib.sol\":{\"keccak256\":\"0x0c6a7e0de89e1017166ef4f593b33c8d0bfc6bcf3cd3db0bb5c1610ce260b659\",\"urls\":[\"bzz-raw://926108ace9152ed12d86a74ccb98d8c0aa698bd48fd3b4bfedacf976a8dd59d3\",\"dweb:/ipfs/QmVYjChMWZJdpPoBNheHMfyoTVsAarfLJ6SxPHhEsd6kUB\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/SettingsConsts.sol\":{\"keccak256\":\"0xa1d17d7507cae083530ce51d4c503ca657ddecf3d3fc23cec9c566d7253e59e6\",\"urls\":[\"bzz-raw://6f14f64aa1d37bef1d4e7051f1733cbe52a1d5af9165faaf4b0336a68c6eb239\",\"dweb:/ipfs/QmcJE8USECc54etjpCBUGTCF5VvMLqLjo9DbkQ64Xf2R4T\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/TellerCommon.sol\":{\"keccak256\":\"0x9574ec7b6ec8d2072b6276a0873ec2e27fc8262ed61ccbb7a3ffc20ac7dfc323\",\"urls\":[\"bzz-raw://25ba0147fb05f281e7d0b601f116e805d563a516223041ff5660b43a5f448385\",\"dweb:/ipfs/QmcvfSjqEZpd7gfXFvBm39sV8RFtzJA81X59StgMgdc21t\"]},\"@openzeppelin/contracts-ethereum-package/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x704e0cb521f0b571096a72266a34d9a2a59a89853b5b271bc97fa307a4cc4dcc\",\"urls\":[\"bzz-raw://96317e95d4c301e54ff42f2b6dede996ac4d714e50a6b5552c68fbb378330dcf\",\"dweb:/ipfs/QmawKJQVK7yXeBhGcvkmujYpo8n7CWQJizDV2dWzsxupnh\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xb2fbd0f9a0bd0d99ace5603f1ce5388ed7d81031a188f5f4667e702fe690e61a\",\"urls\":[\"bzz-raw://b5a018485e3e184d24fabf939a2ca2b82a95b55ad7fcb109f2005d755ddedd29\",\"dweb:/ipfs/QmbpUfNbKjnVhARJRwMvD4h5z6ajYcdAB5Up6m1V3Rf2Ee\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c80637214056511610102578063c35d64ea11610095578063e1ec3c6811610064578063e1ec3c6814610516578063e3ed19021461054e578063eee8b7ff1461056e578063fe15d70f1461059b576101e3565b8063c35d64ea146104ac578063ccdd9f5d146104c1578063d8aed145146104e1578063e06174e414610501576101e3565b8063a59a9973116100d1578063a59a99731461045a578063a5c5c7b21461046f578063aaaca55814610482578063b2016bd414610497576101e3565b806372140565146103d8578063767a7b05146103f85780638129fc1c14610418578063934b5d131461042d576101e3565b806342c3c0fb1161017a57806358895e3d1161014957806358895e3d1461036157806364794459146103835780636948f32b146103a357806369e527da146103c3576101e3565b806342c3c0fb146102f75780634ac8eb5f14610317578063513484541461032c578063530e784f14610341576101e3565b806319e8b2b3116101b657806319e8b2b3146102755780631a74856b146102955780632630c12f146102a85780633b929300146102ca576101e3565b806302bc2cdb146101e85780630cc2c0fb1461020a5780631459457a1461022a578063158ef93e1461024a575b600080fd5b3480156101f457600080fd5b50610208610203366004614669565b6105b0565b005b34801561021657600080fd5b50610208610225366004614438565b610c92565b34801561023657600080fd5b506102086102453660046142e6565b610ca5565b34801561025657600080fd5b5061025f610d4a565b60405161026c919061536f565b60405180910390f35b34801561028157600080fd5b5061020861029036600461435b565b610d69565b6102086102a33660046143eb565b610d92565b3480156102b457600080fd5b506102bd610f7d565b60405161026c91906152c9565b3480156102d657600080fd5b506102ea6102e5366004614558565b610f8c565b60405161026c919061537d565b34801561030357600080fd5b50610208610312366004614558565b610fbc565b34801561032357600080fd5b506102ea610fc1565b34801561033857600080fd5b506102ea610fc7565b34801561034d57600080fd5b5061020861035c3660046142aa565b610fcd565b34801561036d57600080fd5b5061037661112b565b60405161026c919061538b565b34801561038f57600080fd5b5061020861039e366004614558565b61113a565b3480156103af57600080fd5b5061025f6103be366004614558565b61113f565b3480156103cf57600080fd5b506102bd611298565b3480156103e457600080fd5b506102086103f3366004614576565b61131b565b34801561040457600080fd5b50610208610413366004614669565b6114f1565b34801561042457600080fd5b5061020861170a565b34801561043957600080fd5b5061044d610448366004614558565b611792565b60405161026c91906155da565b34801561046657600080fd5b506103766117a3565b61020861047d3660046144b0565b6117b2565b34801561048e57600080fd5b506102bd611da6565b3480156104a357600080fd5b506102bd611deb565b3480156104b857600080fd5b506102bd611dfa565b3480156104cd57600080fd5b506102086104dc366004614558565b611e3f565b3480156104ed57600080fd5b506102086104fc366004614669565b6121e9565b34801561050d57600080fd5b506103766125ef565b34801561052257600080fd5b50610536610531366004614558565b612611565b60405161026c9c9b9a9998979695949392919061564e565b34801561055a57600080fd5b506102ea6105693660046143b1565b6126c9565b34801561057a57600080fd5b5061058e6105893660046142aa565b6126f7565b60405161026c919061535e565b3480156105a757600080fd5b5061025f612763565b8160016000828152606d60205260409020600e0154600160a01b900460ff1660038111156105da57fe5b146106005760405162461bcd60e51b81526004016105f79061558a565b60405180910390fd5b610608610d4a565b6106245760405162461bcd60e51b81526004016105f79061557a565b61062c61276c565b156106495760405162461bcd60e51b81526004016105f79061547a565b606a546001600160a01b031661065e816127e6565b1561067b5760405162461bcd60e51b81526004016105f7906153ca565b603380546001908101918290556000868152606d6020526040902001546001600160a01b03163381146106c05760405162461bcd60e51b81526004016105f79061552a565b6000868152606d60205260409020600501548511156106f15760405162461bcd60e51b81526004016105f7906153fa565b6000868152606d60205260409020600701544211156107225760405162461bcd60e51b81526004016105f7906154ca565b61089c61072d6125ef565b6001600160a01b031663269012a06107436125ef565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b15801561077b57600080fd5b505afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506107b39190810190614492565b6001600160a01b03166311880cc86040518163ffffffff1660e01b815260040160206040518083038186803b1580156107eb57600080fd5b505afa1580156107ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506108239190810190614474565b6040518263ffffffff1660e01b815260040161083f919061537d565b60206040518083038186803b15801561085757600080fd5b505afa15801561086b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061088f9190810190614474565b429063ffffffff61286b16565b6000878152606d60205260409020600a015411156108cc5760405162461bcd60e51b81526004016105f7906154aa565b6000868152606d60205260409020600d8101869055600b81018690556006810154600390910154610931916301e13380916109259161271091839190610919908c9063ffffffff6128b616565b9063ffffffff6128b616565b9063ffffffff6128f016565b6000878152606d60205260409020600c015561094b613ef2565b61095487612932565b90508060600151156109785760405162461bcd60e51b81526004016105f79061548a565b6000878152606d60205260409020426008820155600e01805460ff60a01b1916600160a11b1790556109a987612983565b6000888152606d602052604090819020600e0180546001600160a01b0319166001600160a01b039384161790819055606a549151631397424760e11b81529183169263272e848e92610a01928b92169060040161560a565b600060405180830381600087803b158015610a1b57600080fd5b505af1158015610a2f573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e0154905163cd6dc68760e01b81526001600160a01b03909116915063cd6dc68790610a759030908b90600401615343565b600060405180830381600087803b158015610a8f57600080fd5b505af1158015610aa3573d6000803e3d6000fd5b50505050610aaf612a7c565b6001600160a01b031663c7bbb113606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015610b0b57600080fd5b505afa158015610b1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610b4391908101906142c8565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7c57600080fd5b505afa158015610b90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610bb491908101906142c8565b896040518463ffffffff1660e01b8152600401610bd393929190615328565b600060405180830381600087803b158015610bed57600080fd5b505af1158015610c01573d6000803e3d6000fd5b5050506000888152606d602052604090819020600e81015460019091015491516001600160a01b03918216935091169089907f85b5516a17ce775661a4b967b1fb30c852678f6598d86d9f3c99b7b60ff2d0ce90610c60908b9061537d565b60405180910390a450506033548114610c8b5760405162461bcd60e51b81526004016105f7906155aa565b5050505050565b606e805460ff1916911515919091179055565b610cad610d4a565b15610cca5760405162461bcd60e51b81526004016105f7906155ba565b60408051808201909152601a81527f50524f564944455f434f4c4c5f544f4b454e5f414444524553530000000000006020820152610d18906001600160a01b0383169063ffffffff612af616565b610d2485858585612b23565b606780546001600160a01b0319166001600160a01b039290921691909117905550505050565b600080604051610d59906152b3565b6040519081900390205492915050565b6001600160a01b0383166000908152606c60205260409020610d8c908383613f1c565b50505050565b3415610db05760405162461bcd60e51b81526004016105f7906153ea565b8160016000828152606d60205260409020600e0154600160a01b900460ff166003811115610dda57fe5b1480610e0c575060026000828152606d60205260409020600e0154600160a01b900460ff166003811115610e0a57fe5b145b610e285760405162461bcd60e51b81526004016105f79061541a565b610e30610d4a565b610e4c5760405162461bcd60e51b81526004016105f79061557a565b610e5461276c565b15610e715760405162461bcd60e51b81526004016105f79061547a565b606a546001600160a01b0316610e86816127e6565b15610ea35760405162461bcd60e51b81526004016105f7906153ca565b6000848152606d6020908152604091829020600101548251808401909352601983527f424f52524f5745525f4c4f414e5f49445f4d49534d415443480000000000000091830191909152610f0a916001600160a01b0388811692169063ffffffff612c7416565b60008311610f2a5760405162461bcd60e51b81526004016105f79061550a565b610f348484612c9d565b846001600160a01b0316847feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c85604051610f6e919061537d565b60405180910390a35050505050565b6069546001600160a01b031681565b6000818152606d60205260408120600b810154600c90910154610fb49163ffffffff612cb516565b90505b919050565b606855565b60665481565b60685481565b610fd5610d4a565b610ff15760405162461bcd60e51b81526004016105f79061557a565b610ff96125ef565b6001600160a01b031663c095ea27336040518263ffffffff1660e01b815260040161102491906152d7565b60006040518083038186803b15801561103c57600080fd5b505afa158015611050573d6000803e3d6000fd5b50505050611066816001600160a01b0316612cda565b6110825760405162461bcd60e51b81526004016105f79061551a565b60695460408051808201909152601b81527f4e45575f4f5241434c455f4d5553545f42455f50524f5649444544000000000060208201526001600160a01b03909116906110d8908290849063ffffffff612d1616565b606980546001600160a01b0319166001600160a01b03848116918217909255604051909183169033907ff51f0fffc8121ee3747e0536c487d894894cdba960ccfb4ab385a88d51b16fed90600090a45050565b606b546001600160a01b031681565b606655565b600061114961276c565b806111645750606a54611164906001600160a01b03166127e6565b80611196575060026000838152606d60205260409020600e0154600160a01b900460ff16600381111561119357fe5b14155b156111a357506000610fb7565b6000828152606d6020526040812060088101546006909101549091426111cf848463ffffffff612cb516565b10905080156111e45760019350505050610fb7565b6000858152606d60205260409020600e01546001600160a01b0316801561128157806001600160a01b031663415dfa5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561123e57600080fd5b505afa158015611252573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112769190810190614456565b945050505050610fb7565b61128a86612932565b606001519695505050505050565b606a54604080516334f293ed60e11b815290516000926001600160a01b0316916369e527da916004808301926020929190829003018186803b1580156112dd57600080fd5b505afa1580156112f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061131591908101906142c8565b90505b90565b828a60800135101561133f5760405162461bcd60e51b81526004016105f79061545a565b60668054880190556040805161018081019091528b815260208101611369368d90038d018d61453a565b81526020018a815260200189815260200188815260200187815260200186815260200185815260200184815260200160006001600160a01b031681526020018360038111156113b457fe5b815282151560209182015260008d8152606d8252604090819020835181558383015180516001830180546001600160a01b03199081166001600160a01b0393841617909155948201516002840180548716918316919091179055818401516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155958801516007860155870151600885015593860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e830180549095169116178084556101408501519193919260ff60a01b1990911690600160a01b9084908111156114b857fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790555050505050505050505050565b8060016000828152606d60205260409020600e0154600160a01b900460ff16600381111561151b57fe5b148061154d575060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561154b57fe5b145b6115695760405162461bcd60e51b81526004016105f79061541a565b611571610d4a565b61158d5760405162461bcd60e51b81526004016105f79061557a565b61159561276c565b156115b25760405162461bcd60e51b81526004016105f79061547a565b606a546001600160a01b03166115c7816127e6565b156115e45760405162461bcd60e51b81526004016105f7906153ca565b603380546001908101918290556000858152606d6020526040902001546001600160a01b031633146116285760405162461bcd60e51b81526004016105f79061553a565b600085116116485760405162461bcd60e51b81526004016105f79061546a565b600061165385612d20565b9050600061166082612d57565b6000878152606d602052604081206009015491925090611686908363ffffffff61286b16565b9050878111156116935750865b80156116a4576116a4878233612e9c565b336001600160a01b0316877f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41836040516116de919061537d565b60405180910390a35050506033548114610c8b5760405162461bcd60e51b81526004016105f7906155aa565b600054610100900460ff16806117235750611723612ef0565b80611731575060005460ff16155b61174d5760405162461bcd60e51b81526004016105f7906154da565b600054610100900460ff16158015611778576000805460ff1961ff0019909116610100171660011790555b6001603355801561178f576000805461ff00191690555b50565b61179a613ef2565b610fb482612932565b606a546001600160a01b031681565b34156117d05760405162461bcd60e51b81526004016105f7906153ea565b6117d8610d4a565b6117f45760405162461bcd60e51b81526004016105f79061557a565b6117fc61276c565b156118195760405162461bcd60e51b81526004016105f79061547a565b61182660208501856142aa565b336001600160a01b0382161461184e5760405162461bcd60e51b81526004016105f79061552a565b61185d3686900386018661451c565b60006118676125ef565b6001600160a01b031663269012a061187d6125ef565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156118b557600080fd5b505afa1580156118c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118ed9190810190614492565b6001600160a01b031663cc44cadb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561192557600080fd5b505afa158015611939573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061195d9190810190614474565b6040518263ffffffff1660e01b8152600401611979919061537d565b60206040518083038186803b15801561199157600080fd5b505afa1580156119a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506119c99190810190614474565b90508160a001518110156119ef5760405162461bcd60e51b81526004016105f7906153aa565b60006119f96125ef565b6001600160a01b03166369ff7744606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015611a5557600080fd5b505afa158015611a69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611a8d91908101906142c8565b85608001516040518363ffffffff1660e01b8152600401611aaf929190615343565b60206040518083038186803b158015611ac757600080fd5b505afa158015611adb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611aff9190810190614456565b90508015611b1f5760405162461bcd60e51b81526004016105f7906153da565b611b2c8360800151612ef6565b611b485760405162461bcd60e51b81526004016105f79061555a565b6000611b52613266565b606b5460405163064e5d4960e01b8152919250600091829182916001600160a01b039091169063064e5d4990611b90908f908f908f906004016155e8565b606060405180830381600087803b158015611baa57600080fd5b505af1158015611bbe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611be29190810190614688565b91945092509050611c0484611bfc368f90038f018f61451c565b858585613280565b6000858152606d6020908152604091829020835181558382015180516001830180546001600160a01b03199081166001600160a01b0393841617909155938201516002840180548616918316919091179055818501516003808501919091556060808401516004860155608080850151600587015560a0948501516006870155968801516007860155870151600885015594860151600984015590850151600a83015560c0850151600b83015560e0850151600c830155610100850151600d830155610120850151600e83018054909416911617808355610140850151919391929160ff60a01b1990911690600160a01b908490811115611d0157fe5b02179055506101609190910151600e9091018054911515600160a81b0260ff60a81b199092169190911790558815611d3d57611d3d848a612c9d565b606c6000611d4e60208f018f6142aa565b6001600160a01b031681526020808201929092526040016000908120805460018101825590825291902001849055611d9884611d8f368f90038f018f61451c565b8585858e6134cf565b505050505050505050505050565b606a546040805163155594ab60e31b815290516000926001600160a01b03169163aaaca558916004808301926020929190829003018186803b1580156112dd57600080fd5b6067546001600160a01b031681565b606a54604080516361aeb27560e11b815290516000926001600160a01b03169163c35d64ea916004808301926020929190829003018186803b1580156112dd57600080fd5b8060026000828152606d60205260409020600e0154600160a01b900460ff166003811115611e6957fe5b14611e865760405162461bcd60e51b81526004016105f79061544a565b611e8e610d4a565b611eaa5760405162461bcd60e51b81526004016105f79061557a565b611eb261276c565b15611ecf5760405162461bcd60e51b81526004016105f79061547a565b606a546001600160a01b0316611ee4816127e6565b15611f015760405162461bcd60e51b81526004016105f7906153ca565b6033805460010190819055611f158461113f565b611f315760405162461bcd60e51b81526004016105f79061543a565b6000848152606d60205260408120600e8101805460ff60a01b1916600360a01b1760ff60a81b1916600160a81b1790556009015490611f6f8261359a565b9050611f7c868333612e9c565b6000611f866125ef565b6001600160a01b031663269012a0611f9c6125ef565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b158015611fd457600080fd5b505afa158015611fe8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061200c9190810190614492565b6001600160a01b0316631139087a6040518163ffffffff1660e01b815260040160206040518083038186803b15801561204457600080fd5b505afa158015612058573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061207c9190810190614474565b6040518263ffffffff1660e01b8152600401612098919061537d565b60206040518083038186803b1580156120b057600080fd5b505afa1580156120c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120e89190810190614474565b90506000612102612710610925858563ffffffff6128b616565b606a546040516382f7b02760e01b81529192506001600160a01b0316906382f7b027906121359084903390600401615618565b600060405180830381600087803b15801561214f57600080fd5b505af1158015612163573d6000803e3d6000fd5b5050506000898152606d6020526040908190206001015490516001600160a01b03909116915089907f9950a0562c02382e2e840daa73082d5be7660ce37601f28fa4c84089c11e8a06906121bc903390899087906152e5565b60405180910390a3505050506033548114610d8c5760405162461bcd60e51b81526004016105f7906155aa565b8060026000828152606d60205260409020600e0154600160a01b900460ff16600381111561221357fe5b146122305760405162461bcd60e51b81526004016105f79061544a565b612238610d4a565b6122545760405162461bcd60e51b81526004016105f79061557a565b61225c61276c565b156122795760405162461bcd60e51b81526004016105f79061547a565b606a546001600160a01b031661228e816127e6565b156122ab5760405162461bcd60e51b81526004016105f7906153ca565b6033805460010190819055846122d35760405162461bcd60e51b81526004016105f7906153ba565b8460006122df86610f8c565b9050818110156122ed578091505b6122fd818363ffffffff61286b16565b9050612309868361368e565b806123ad576000868152606d60205260409020600e8101805460ff60a01b1916600360a01b179055600981015460019091015461235290889083906001600160a01b0316612e9c565b6000878152606d6020526040908190206001015490516001600160a01b039091169088907f7c5e5cb62e5ed3caf3764e4b0afedfedef533e27809d43367799787ad2abcd41906123a390859061537d565b60405180910390a3505b606a5460405163acb7081560e01b81526001600160a01b039091169063acb70815906123df9085903390600401615618565b600060405180830381600087803b1580156123f957600080fd5b505af115801561240d573d6000803e3d6000fd5b50505050612419612a7c565b6001600160a01b03166362e269ef606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b15801561247557600080fd5b505afa158015612489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506124ad91908101906142c8565b306001600160a01b031663b2016bd46040518163ffffffff1660e01b815260040160206040518083038186803b1580156124e657600080fd5b505afa1580156124fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061251e91908101906142c8565b856040518463ffffffff1660e01b815260040161253d93929190615328565b600060405180830381600087803b15801561255757600080fd5b505af115801561256b573d6000803e3d6000fd5b5050506000878152606d6020526040908190206001015490516001600160a01b03909116915087907f20a1f2ec363af45dc5ee7d9d622f2dd68b52501c382126c7f04b53663c4c69bf906125c490869033908790615633565b60405180910390a350506033548114610c8b5760405162461bcd60e51b81526004016105f7906155aa565b6000806000604051612600906152be565b604051908190039020549250505090565b606d602090815260009182526040918290208054835160c08101855260018301546001600160a01b03908116825260028401548116948201949094526003830154948101949094526004820154606085015260058201546080850152600682015460a0850152600782015460088301546009840154600a850154600b860154600c870154600d880154600e9098015496999895979496939592949193909281169060ff600160a01b8204811691600160a81b9004168c565b606c60205281600052604060002081815481106126e257fe5b90600052602060002001600091509150505481565b6001600160a01b0381166000908152606c602090815260409182902080548351818402810184019094528084526060939283018282801561275757602002820191906000526020600020905b815481526020019060010190808311612743575b50505050509050919050565b606e5460ff1681565b60006127766125ef565b6001600160a01b031663b187bd266040518163ffffffff1660e01b815260040160206040518083038186803b1580156127ae57600080fd5b505afa1580156127c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113159190810190614456565b60006127f06125ef565b6001600160a01b0316633b668321836040518263ffffffff1660e01b815260040161281b91906152c9565b60206040518083038186803b15801561283357600080fd5b505afa158015612847573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fb49190810190614456565b60006128ad83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613749565b90505b92915050565b6000826128c5575060006128b0565b828202828482816128d257fe5b04146128ad5760405162461bcd60e51b81526004016105f79061549a565b60006128ad83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525061377a565b61293a613ef2565b6000828152606d60205260408120600901549080612957856137b1565b604080516080810182528681526020810193909352820181905293909311606084015250909392505050565b600061298d6125ef565b6001600160a01b031663bdd1daaa6040518163ffffffff1660e01b815260040160206040518083038186803b1580156129c557600080fd5b505afa1580156129d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506129fd9190810190614492565b6001600160a01b0316634614874e30846040518363ffffffff1660e01b8152600401612a2a929190615343565b602060405180830381600087803b158015612a4457600080fd5b505af1158015612a58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610fb491908101906142c8565b6000612a866125ef565b6001600160a01b0316631390f8d76040518163ffffffff1660e01b815260040160206040518083038186803b158015612abe57600080fd5b505afa158015612ad2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506113159190810190614492565b612aff826137d5565b8190612b1e5760405162461bcd60e51b81526004016105f79190615399565b505050565b612b2b610d4a565b15612b485760405162461bcd60e51b81526004016105f7906155ba565b60408051808201909152601681527550524f564944455f4f5241434c455f4144445245535360501b6020820152612b8f906001600160a01b0386169063ffffffff612af616565b60408051808201909152601c81527f50524f564944455f4c454e44494e475f504f4f4c5f41444452455353000000006020820152612bdd906001600160a01b0385169063ffffffff612af616565b60408051808201909152601b81527f50524f56494445445f4c4f414e5f5445524d535f4144445245535300000000006020820152612c2b906001600160a01b0384169063ffffffff612af616565b612c34816137e3565b50606980546001600160a01b039485166001600160a01b031991821617909155606a805493851693821693909317909255606b8054919093169116179055565b612c7e8383613895565b8190610d8c5760405162461bcd60e51b81526004016105f79190615399565b612ca782826138a6565b612cb133826138ff565b5050565b6000828201838110156128ad5760405162461bcd60e51b81526004016105f79061540a565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590612d0e57508115155b949350505050565b612c7e8383613913565b600080612d2c83610f8c565b6000848152606d6020526040902060040154909150612d0e612710610925848463ffffffff6128b616565b600080612df1606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612dab57600080fd5b505afa158015612dbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612de391908101906142c8565b6001600160a01b0316613925565b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b158015612e4357600080fd5b505afa158015612e57573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612e7b9190810190614474565b90506000612e9383610925878563ffffffff6128b616565b95945050505050565b606654612eaf908363ffffffff61286b16565b6066556000838152606d6020526040902060090154612ed4908363ffffffff61286b16565b6000848152606d6020526040902060090155612b1e81836139a6565b303b1590565b600080612f016125ef565b6001600160a01b031663dc21a6a06040518163ffffffff1660e01b815260040160206040518083038186803b158015612f3957600080fd5b505afa158015612f4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612f719190810190614492565b6001600160a01b0316631fb7cec9606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612fcd57600080fd5b505afa158015612fe1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061300591908101906142c8565b6067546040516001600160e01b031960e085901b16815261303392916001600160a01b03169060040161530d565b60206040518083038186803b15801561304b57600080fd5b505afa15801561305f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061308391908101906142c8565b90506001600160a01b0381166130ab5760405162461bcd60e51b81526004016105f7906154ea565b604051632319178560e11b81526000906001600160a01b038316906346322f0a906130e9906b14dd5c1c1b1e551bd119589d60a21b9060040161537d565b60206040518083038186803b15801561310157600080fd5b505afa158015613115573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131399190810190614474565b90506000613145612a7c565b6001600160a01b031663db63323e606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b1580156131a157600080fd5b505afa1580156131b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506131d991908101906142c8565b6067546040516001600160e01b031960e085901b16815261320992916001600160a01b0316908a90600401615328565b60206040518083038186803b15801561322157600080fd5b505afa158015613235573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506132599190810190614474565b9190911115949350505050565b60685461327a81600163ffffffff612cb516565b60685590565b613288613f67565b60006132926125ef565b6001600160a01b031663269012a06132a86125ef565b6001600160a01b031663d86d744e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156132e057600080fd5b505afa1580156132f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133189190810190614492565b6001600160a01b031663e00a46156040518163ffffffff1660e01b815260040160206040518083038186803b15801561335057600080fd5b505afa158015613364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133889190810190614474565b6040518263ffffffff1660e01b81526004016133a4919061537d565b60206040518083038186803b1580156133bc57600080fd5b505afa1580156133d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506133f49190810190614474565b90506000613408428363ffffffff612cb516565b90506040518061018001604052808981526020016040518060c001604052808a600001516001600160a01b031681526020018a602001516001600160a01b031681526020018981526020018881526020018781526020018a60a00151815250815260200182815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b03168152602001600160038111156134b957fe5b8152600060209091015298975050505050505050565b84602001516001600160a01b031685600001516001600160a01b0316877f0358f509931cba53bbb6a94b7f05a5178220a0c7ddb54b1a1722df9e6ed6aa098787878b60a00151606d60008f81526020019081526020016000206007015460405161353d959493929190615706565b60405180910390a480156135925784600001516001600160a01b0316867feec2f3feb835e2f2fd44281034b04700a1ddda63dd402949d470a25a7c40b36c83604051613589919061537d565b60405180910390a35b505050505050565b6000806135ee606a60009054906101000a90046001600160a01b03166001600160a01b031663aaaca5586040518163ffffffff1660e01b815260040160206040518083038186803b158015612dab57600080fd5b90506000606960009054906101000a90046001600160a01b03166001600160a01b03166396237c026040518163ffffffff1660e01b815260040160206040518083038186803b15801561364057600080fd5b505afa158015613654573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506136789190810190614474565b9050612d0e81610925868563ffffffff6128b616565b6000828152606d60205260409020600b0154811115613711576000828152606d60205260409020600b015481906136cc90829063ffffffff61286b16565b6000848152606d60205260408120600b810191909155600c01549091506136f9908263ffffffff61286b16565b6000848152606d60205260409020600c015550612cb1565b6000828152606d60205260409020600b0154613733908263ffffffff61286b16565b6000838152606d60205260409020600b01555050565b6000818484111561376d5760405162461bcd60e51b81526004016105f79190615399565b50508183035b9392505050565b6000818361379b5760405162461bcd60e51b81526004016105f79190615399565b5060008385816137a757fe5b0495945050505050565b60008060006137bf84612d20565b9050806137cb82612d57565b9250925050915091565b6001600160a01b0316151590565b6137eb610d4a565b156138085760405162461bcd60e51b81526004016105f7906155ba565b60408051808201909152601981527f53455454494e47535f4d5553545f42455f50524f5649444544000000000000006020820152613856906001600160a01b0383169063ffffffff612af616565b613868816001600160a01b0316612cda565b6138845760405162461bcd60e51b81526004016105f79061542a565b61388c6139ba565b61178f816139d8565b6001600160a01b0390811691161490565b6066546138b9908263ffffffff612cb516565b6066556000828152606d60205260409020600901546138de908263ffffffff612cb516565b6000928352606d602052604090922060098101929092555042600a90910155565b606e5460ff16612cb157612cb18282613a47565b6001600160a01b039081169116141590565b600080826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561396157600080fd5b505afa158015613975573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061399991908101906146cb565b60ff16600a0a9392505050565b606e5460ff16612cb157612cb18282613a64565b60006040516139c8906152b3565b6040519081900390206001905550565b6139f16139e36125ef565b6001600160a01b03166137d5565b156139fb5761178f565b613a0d816001600160a01b0316612cda565b613a295760405162461bcd60e51b81526004016105f79061542a565b6000604051613a37906152be565b6040519081900390208290555050565b606754612cb1906001600160a01b0316838363ffffffff613a8116565b606754612cb1906001600160a01b0316838363ffffffff613d0016565b604051636eb1769f60e11b81526000906001600160a01b0385169063dd62ed3e90613ab2908690309060040161530d565b60206040518083038186803b158015613aca57600080fd5b505afa158015613ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613b029190810190614474565b905081811015613b245760405162461bcd60e51b81526004016105f79061559a565b6040516370a0823160e01b81526000906001600160a01b038616906370a0823190613b539030906004016152c9565b60206040518083038186803b158015613b6b57600080fd5b505afa158015613b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ba39190810190614474565b90506000856001600160a01b03166323b872dd8630876040518463ffffffff1660e01b8152600401613bd793929190615328565b602060405180830381600087803b158015613bf157600080fd5b505af1158015613c05573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613c299190810190614456565b905080613c485760405162461bcd60e51b81526004016105f7906154ba565b6040516370a0823160e01b81526000906001600160a01b038816906370a0823190613c779030906004016152c9565b60206040518083038186803b158015613c8f57600080fd5b505afa158015613ca3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613cc79190810190614474565b905084613cda828563ffffffff61286b16565b14613cf75760405162461bcd60e51b81526004016105f7906154fa565b50505050505050565b6040516370a0823160e01b81526000906001600160a01b038516906370a0823190613d2f9030906004016152c9565b60206040518083038186803b158015613d4757600080fd5b505afa158015613d5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613d7f9190810190614474565b905081811015613da15760405162461bcd60e51b81526004016105f79061554a565b60405163a9059cbb60e01b81526000906001600160a01b0386169063a9059cbb90613dd29087908790600401615343565b602060405180830381600087803b158015613dec57600080fd5b505af1158015613e00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613e249190810190614456565b905080613e435760405162461bcd60e51b81526004016105f79061556a565b6040516370a0823160e01b81526000906001600160a01b038716906370a0823190613e729030906004016152c9565b60206040518083038186803b158015613e8a57600080fd5b505afa158015613e9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250613ec29190810190614474565b905083613ed5848363ffffffff61286b16565b146135925760405162461bcd60e51b81526004016105f7906155ca565b60405180608001604052806000815260200160008152602001600081526020016000151581525090565b828054828255906000526020600020908101928215613f57579160200282015b82811115613f57578235825591602001919060010190613f3c565b50613f63929150613fe2565b5090565b60405180610180016040528060008152602001613f82613ffc565b81526020016000815260200160008152602001600081526020016000815260200160008152602001600081526020016000815260200160006001600160a01b0316815260200160006003811115613fd557fe5b8152600060209091015290565b61131891905b80821115613f635760008155600101613fe8565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b80356128b08161584d565b80516128b08161584d565b60008083601f84011261406c57600080fd5b50813567ffffffffffffffff81111561408457600080fd5b6020830191508361014082028301111561409d57600080fd5b9250929050565b60008083601f8401126140b657600080fd5b50813567ffffffffffffffff8111156140ce57600080fd5b60208301915083602082028301111561409d57600080fd5b80356128b081615861565b80516128b081615861565b80356128b08161586a565b80516128b08161586a565b80516128b081615873565b80356128b08161587c565b600060e0828403121561413a57600080fd5b50919050565b600060e0828403121561415257600080fd5b61415c60e0615752565b9050600061416a8484614044565b825250602061417b84848301614044565b602083015250604061418f84828501614044565b60408301525060606141a3848285016140fc565b60608301525060806141b7848285016140fc565b60808301525060a06141cb848285016140fc565b60a08301525060c06141df848285016140fc565b60c08301525092915050565b600060c0828403121561413a57600080fd5b600060c0828403121561420f57600080fd5b61421960c0615752565b905060006142278484614044565b825250602061423884848301614044565b602083015250604061424c848285016140fc565b6040830152506060614260848285016140fc565b6060830152506080614274848285016140fc565b60808301525060a0614288848285016140fc565b60a08301525092915050565b80356128b081615889565b80516128b081615889565b6000602082840312156142bc57600080fd5b6000612d0e8484614044565b6000602082840312156142da57600080fd5b6000612d0e848461404f565b600080600080600060a086880312156142fe57600080fd5b600061430a8888614044565b955050602061431b88828901614044565b945050604061432c88828901614044565b935050606061433d88828901614044565b925050608061434e88828901614044565b9150509295509295909350565b60008060006040848603121561437057600080fd5b600061437c8686614044565b935050602084013567ffffffffffffffff81111561439957600080fd5b6143a5868287016140a4565b92509250509250925092565b600080604083850312156143c457600080fd5b60006143d08585614044565b92505060206143e1858286016140fc565b9150509250929050565b60008060006060848603121561440057600080fd5b600061440c8686614044565b935050602061441d868287016140fc565b925050604061442e868287016140fc565b9150509250925092565b60006020828403121561444a57600080fd5b6000612d0e84846140e6565b60006020828403121561446857600080fd5b6000612d0e84846140f1565b60006020828403121561448657600080fd5b6000612d0e8484614107565b6000602082840312156144a457600080fd5b6000612d0e8484614112565b60008060008061012085870312156144c757600080fd5b60006144d38787614128565b94505060e085013567ffffffffffffffff8111156144f057600080fd5b6144fc8782880161405a565b9350935050610100614510878288016140fc565b91505092959194509250565b600060e0828403121561452e57600080fd5b6000612d0e8484614140565b600060c0828403121561454c57600080fd5b6000612d0e84846141fd565b60006020828403121561456a57600080fd5b6000612d0e84846140fc565b60008060008060008060008060008060006102008c8e03121561459857600080fd5b60006145a48e8e6140fc565b9b505060206145b58e828f016141eb565b9a505060e06145c68e828f016140fc565b9950506101006145d88e828f016140fc565b9850506101206145ea8e828f016140fc565b9750506101406145fc8e828f016140fc565b96505061016061460e8e828f016140fc565b9550506101806146208e828f016140fc565b9450506101a06146328e828f016140fc565b9350506101c06146448e828f0161411d565b9250506101e06146568e828f016140e6565b9150509295989b509295989b9093969950565b6000806040838503121561467c57600080fd5b60006143d085856140fc565b60008060006060848603121561469d57600080fd5b60006146a98686614107565b93505060206146ba86828701614107565b925050604061442e86828701614107565b6000602082840312156146dd57600080fd5b6000612d0e848461429f565b60006146f58383615116565b50506101400190565b600061470a83836147d9565b505060200190565b61471b816157f7565b82525050565b61471b816157c0565b6000614736838561578a565b935061474182611318565b8060005b85811015614777576147578284613f63565b61476188826146e9565b975061476c83615783565b925050600101614745565b509495945050505050565b600061478d8261577f565b614797818561578a565b93506147a283615779565b8060005b838110156147775781516147ba88826146fe565b97506147c583615779565b9250506001016147a6565b61471b816157cb565b61471b81611318565b61471b816157d0565b61471b81615802565b60006147ff8261577f565b614809818561578a565b935061481981856020860161580d565b61482281615839565b9093019392505050565b6000614839601d8361578a565b7f4455524154494f4e5f455843454544535f4d41585f4455524154494f4e000000815260200192915050565b6000614872601c83610fb7565b7f54496e697469616c697a61626c652e6973496e697469616c697a6564000000008152601c0192915050565b60006148ab60158361578a565b74105353d5539517d59053155157d491545552549151605a1b815260200192915050565b60006148dc60168361578a565b7513115391125391d7d413d3d317d254d7d4105554d15160521b815260200192915050565b600061490e60198361578a565b7f414d4f554e545f455843454544535f4d41585f414d4f554e5400000000000000815260200192915050565b6000614947601e8361578a565b7f544f4b454e5f4c4f414e535f56414c55455f4d5553545f42455f5a45524f0000815260200192915050565b600061498060118361578a565b7013505617d313d05397d15610d151511151607a1b815260200192915050565b60006149ad601b8361578a565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000815260200192915050565b60006149e660168361578a565b751313d05397d393d517d050d512559157d3d497d4d15560521b815260200192915050565b6000614a18601b8361578a565b7f53455454494e47535f4d5553545f42455f415f434f4e54524143540000000000815260200192915050565b6000614a5160178361578a565b7f444f45534e545f4e4545445f4c49515549444154494f4e000000000000000000815260200192915050565b6000614a8a600f8361578a565b6e4c4f414e5f4e4f545f41435449564560881b815260200192915050565b6000614ab5601b8361578a565b7f424f52524f5745445f414d4f554e545f455843454544535f4d41580000000000815260200192915050565b6000614aee60148361578a565b7343414e4e4f545f57495448445241575f5a45524f60601b815260200192915050565b6000614b1e60128361578a565b71141310551193d49357d254d7d4105554d15160721b815260200192915050565b6000614b4c60188361578a565b7f4d4f52455f434f4c4c41544552414c5f52455155495245440000000000000000815260200192915050565b6000614b8560218361578a565b7f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f8152607760f81b602082015260400192915050565b6000614bc8601d8361578a565b7f434f4c4c41544552414c5f4445504f53495445445f524543454e544c59000000815260200192915050565b6000614c01601b8361578a565b7f544f4b454e535f5452414e534645525f46524f4d5f4641494c45440000000000815260200192915050565b6000614c3a60128361578a565b711313d05397d511549354d7d156141254915160721b815260200192915050565b6000614c68602e8361578a565b7f436f6e747261637420696e7374616e63652068617320616c726561647920626581526d195b881a5b9a5d1a585b1a5e995960921b602082015260400192915050565b6000614cb860188361578a565b7f41544d5f4e4f545f464f554e445f464f525f4d41524b45540000000000000000815260200192915050565b6000614cf1601f8361578a565b7f494e565f42414c414e43455f41465445525f5452414e534645525f46524f4d00815260200192915050565b6000614d2a60138361578a565b7243414e4e4f545f4445504f5349545f5a45524f60681b815260200192915050565b6000614d59601e8361578a565b7f4f5241434c455f4d5553545f434f4e54524143545f4e4f545f454d5054590000815260200192915050565b6000614d9260178361578a565b7f424f52524f5745525f4d5553545f42455f53454e444552000000000000000000815260200192915050565b6000614dcb60168361578a565b7521a0a62622a92fa227a2a9a72a2fa7aba72fa627a0a760511b815260200192915050565b6000614dfd60198361578a565b7f4e4f545f454e4f5547485f544f4b454e535f42414c414e434500000000000000815260200192915050565b6000614e36601883610fb7565b7f426173655570677261646561626c652e73657474696e67730000000000000000815260180192915050565b6000614e6f601a8361578a565b7f535550504c595f544f5f444542545f455843454544535f4d4158000000000000815260200192915050565b6000614ea860168361578a565b751513d2d15394d7d514905394d1915497d1905253115160521b815260200192915050565b6000614eda60188361578a565b7f434f4e54524143545f4e4f545f494e495449414c495a45440000000000000000815260200192915050565b6000614f13600c8361578a565b6b1313d05397d393d517d4d15560a21b815260200192915050565b6000614f3b601b8361578a565b7f4e4f545f454e4f5547485f544f4b454e535f414c4c4f57414e43450000000000815260200192915050565b6000614f74601f8361578a565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00815260200192915050565b6000614fad601c8361578a565b7f434f4e54524143545f414c52454144595f494e495449414c495a454400000000815260200192915050565b6000614fe6601a8361578a565b7f494e565f42414c414e43455f41465445525f5452414e53464552000000000000815260200192915050565b8051608083019061502384826147d9565b50602082015161503660208501826147d9565b50604082015161504960408501826147d9565b506060820151610d8c60608501826147d0565b60e0820161506a8280615793565b6150748482614721565b506150826020830183615793565b61508f6020850182614721565b5061509d6040830183615793565b6150aa6040850182614721565b506150b860608301836157a2565b6150c560608501826147d9565b506150d360808301836157a2565b6150e060808501826147d9565b506150ee60a08301836157a2565b6150fb60a08501826147d9565b5061510960c08301836157a2565b610d8c60c08501826147d9565b61014082016151258280615793565b61512f8482614721565b5061513d6020830183615793565b61514a6020850182614721565b5061515860408301836157a2565b61516560408501826147d9565b5061517360608301836157a2565b61518060608501826147d9565b5061518e60808301836157a2565b61519b60808501826147d9565b506151a960a08301836157a2565b6151b660a08501826147d9565b506151c460c0830183613f63565b610d8c60c0850182615241565b805160c08301906151e28482614721565b5060208201516151f56020850182614721565b50604082015161520860408501826147d9565b50606082015161521b60608501826147d9565b50608082015161522e60808501826147d9565b5060a0820151610d8c60a08501826147d9565b6080820161524f82806157a2565b61525984826147d9565b5061526760208301836157b1565b61527460208501826152aa565b5061528260408301836157a2565b61528f60408501826147d9565b5061529d60608301836157a2565b610d8c60608501826147d9565b61471b816157f1565b60006128b082614865565b60006128b082614e29565b602081016128b08284614721565b602081016128b08284614712565b606081016152f38286614712565b61530060208301856147d9565b612d0e60408301846147d9565b6040810161531b8285614721565b6137736020830184614721565b606081016153368286614721565b6153006020830185614721565b604081016153518285614721565b61377360208301846147d9565b602080825281016128ad8184614782565b602081016128b082846147d0565b602081016128b082846147d9565b602081016128b082846147e2565b602080825281016128ad81846147f4565b60208082528101610fb48161482c565b60208082528101610fb48161489e565b60208082528101610fb4816148cf565b60208082528101610fb481614901565b60208082528101610fb48161493a565b60208082528101610fb481614973565b60208082528101610fb4816149a0565b60208082528101610fb4816149d9565b60208082528101610fb481614a0b565b60208082528101610fb481614a44565b60208082528101610fb481614a7d565b60208082528101610fb481614aa8565b60208082528101610fb481614ae1565b60208082528101610fb481614b11565b60208082528101610fb481614b3f565b60208082528101610fb481614b78565b60208082528101610fb481614bbb565b60208082528101610fb481614bf4565b60208082528101610fb481614c2d565b60208082528101610fb481614c5b565b60208082528101610fb481614cab565b60208082528101610fb481614ce4565b60208082528101610fb481614d1d565b60208082528101610fb481614d4c565b60208082528101610fb481614d85565b60208082528101610fb481614dbe565b60208082528101610fb481614df0565b60208082528101610fb481614e62565b60208082528101610fb481614e9b565b60208082528101610fb481614ecd565b60208082528101610fb481614f06565b60208082528101610fb481614f2e565b60208082528101610fb481614f67565b60208082528101610fb481614fa0565b60208082528101610fb481614fd9565b608081016128b08284615012565b61010081016155f7828661505c565b81810360e0830152612e9381848661472a565b6040810161531b82856147d9565b6040810161562682856147d9565b6137736020830184614712565b6060810161564182866147d9565b6153006020830185614712565b610220810161565d828f6147d9565b61566a602083018e6151d1565b61567760e083018d6147d9565b61568561010083018c6147d9565b61569361012083018b6147d9565b6156a161014083018a6147d9565b6156af6101608301896147d9565b6156bd6101808301886147d9565b6156cb6101a08301876147d9565b6156d96101c0830186614721565b6156e76101e08301856147eb565b6156f56102008301846147d0565b9d9c50505050505050505050505050565b60a0810161571482886147d9565b61572160208301876147d9565b61572e60408301866147d9565b61573b60608301856147d9565b61574860808301846147d9565b9695505050505050565b60405181810167ffffffffffffffff8111828210171561577157600080fd5b604052919050565b60200190565b5190565b6101400190565b90815260200190565b60006128ad6020840184614044565b60006128ad60208401846140fc565b60006128ad6020840184614294565b6000610fb4826157e5565b151590565b6000610fb4826157c0565b80610fb781615843565b6001600160a01b031690565b60ff1690565b6000610fb4826157d0565b6000610fb4826157db565b60005b83811015615828578181015183820152602001615810565b83811115610d8c5750506000910152565b601f01601f191690565b6004811061178f57fe5b615856816157c0565b811461178f57600080fd5b615856816157cb565b61585681611318565b615856816157d0565b6004811061178f57600080fd5b615856816157f156fea365627a7a72315820369cd5ddcaba3017bbf3fdbe717c08b9f647a44ed6eec845cab16321c6ba92e36c6578706572696d656e74616cf564736f6c63430005110040",
  "sourceMap": "106:1998:70:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;106:1998:70;;;;;;;",
  "deployedSourceMap": "106:1998:70:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8415:2098:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;8415:2098:22;;;;;;;;:::i;:::-;;207:127:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;207:127:70;;;;;;;;:::i;4710:542:32:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4710:542:32;;;;;;;;:::i;1241:169:29:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1241:169:29;;;:::i;:::-;;;;;;;;;;;;;;;;456:131:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;456:131:70;;;;;;;;:::i;1999:676:32:-;;;;;;;;;:::i;2960:26:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2960:26:22;;;:::i;:::-;;;;;;;;14744:151;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;14744:151:22;;;;;;;;:::i;:::-;;;;;;;;340:110:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;340:110:70;;;;;;;;:::i;2783:30:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2783:30:22;;;:::i;2925:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2925:28:22;;;:::i;15597:518::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15597:518:22;;;;;;;;:::i;3039:53::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3039:53:22;;;:::i;:::-;;;;;;;;593:94:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;593:94:70;;;;;;;;:::i;13773:761:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;13773:761:22;;;;;;;;:::i;6568:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6568:94:22;;;:::i;693:1013:70:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;693:1013:70;;;;;;;;:::i;6915:1153:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;6915:1153:22;;;;;;;;:::i;769:214:131:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;769:214:131;;;:::i;15119:184:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;15119:184:22;;;;;;;;:::i;:::-;;;;;;;;2993:39;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2993:39:22;;;:::i;2966:1228:32:-;;;;;;;;;:::i;6138:106:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6138:106:22;;;:::i;2820:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2820:30:22;;;:::i;6359:94::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6359:94:22;;;:::i;12362:1200::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;12362:1200:22;;;;;;;;:::i;10700:1510::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;10700:1510:22;;;;;;;;:::i;1259:263:11:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1259:263:11;;;:::i;3156:50:22:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3156:50:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3099;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3099:50:22;;;;;;;;:::i;5877:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;5877:132:22;;;;;;;;:::i;:::-;;;;;;;;170:30:70;;8:9:-1;5:2;;;30:1;27;20:12;5:2;170:30:70;;;:::i;8415:2098:22:-;8512:6;4194:32;4170:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4170:20:22;;;;:56;;;;;;;;;4162:81;;;;-1:-1:-1;;;4162:81:22;;;;;;;;;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;8609:11:22;;-1:-1:-1;;;;;8609:11:22;2718:33:7;8609:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;;;:13;8665::22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;8665:32:22;3484:10;:22;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;8734:13;;;;:5;:13;;;;;:37;;;:53;-1:-1:-1;8734:53:22;8713:117;;;;-1:-1:-1;;;8713:117:22;;;;;;;;;8849:13;;;;:5;:13;;;;;:25;;;8878:3;-1:-1:-1;8849:32:22;8841:63;;;;-1:-1:-1;;;8841:63:22;;;;;;;;;8986:174;9015:10;:8;:10::i;:::-;-1:-1:-1;;;;;9015:34:22;;9075:10;:8;:10::i;:::-;-1:-1:-1;;;;;9075:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9075:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9075:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9075:19:22;;;;;;;;;-1:-1:-1;;;;;9075:43:22;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9075:45:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9075:45:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9075:45:22;;;;;;;;;9015:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9015:127:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9015:127:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;9015:127:22;;;;;;;;;8986:3;;:174;:7;:174;:::i;:::-;8936:13;;;;:5;:13;;;;;:30;;;:224;;8915:300;;;;-1:-1:-1;;;8915:300:22;;;;;;;;;9226:13;;;;:5;:13;;;;;:28;;;:43;;;9279:27;;;:42;;;9445:32;;;;9390:36;;;;;9360:188;;2431:8;;9360:149;;2695:5;;9360:149;;9445:32;9360:67;;9257:12;;9360:67;:29;:67;:::i;:::-;:84;:118;:84;:118;:::i;:::-;:135;:149;:135;:149;:::i;:188::-;9331:13;;;;:5;:13;;;;;:26;;:217;9631:53;;:::i;:::-;9687:48;9719:6;9687:18;:48::i;:::-;9631:104;;9755:14;:37;;;9754:38;9746:75;;;;-1:-1:-1;;;9746:75:22;;;;;;;;;9832:13;;;;:5;:13;;;;;9862:3;9832:27;;;:33;9875:20;;:53;;-1:-1:-1;;;;9875:53:22;-1:-1:-1;;;9875:53:22;;;9961:21;9832:13;9961;:21::i;:::-;9938:13;;;;:5;:13;;;;;;;:20;;:44;;-1:-1:-1;;;;;;9938:44:22;-1:-1:-1;;;;;9938:44:22;;;;;;;;10054:11;;:58;;-1:-1:-1;;;10054:58:22;;:11;;;;:22;;:58;;10077:12;;10091:20;;10054:58;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10054:58:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10139:13:22;;;;:5;:13;;;;;;;:20;;;10123:71;;-1:-1:-1;;;10123:71:22;;-1:-1:-1;;;;;10139:20:22;;;;-1:-1:-1;10123:48:22;;:71;;10180:4;;10145:6;;10123:71;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10123:71:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10123:71:22;;;;10205:10;:8;:10::i;:::-;-1:-1:-1;;;;;10205:25:22;;10244:11;;;;;;;;;-1:-1:-1;;;;;10244:11:22;-1:-1:-1;;;;;10244:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10244:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10244:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10244:26:22;;;;;;;;;10284:4;-1:-1:-1;;;;;10284:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10284:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10284:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;10284:22:22;;;;;;;;;10320:12;10205:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10205:137:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;10450:13:22;;;;:5;:13;;;;;;;:20;;;;;10404:23;;;:32;10358:148;;-1:-1:-1;;;;;10450:20:22;;;;-1:-1:-1;10404:32:22;;;10456:6;;10358:148;;;;10484:12;;10358:148;;;;;;;;;;3544:1;1466::131;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;;2788:1:7;2391;8415:2098:22;;;:::o;207:127:70:-;285:18;:42;;-1:-1:-1;;285:42:70;;;;;;;;;;207:127::o;4710:542:32:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;4962:68:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4962:38:32;;;:68;:38;:68;:::i;:::-;5041:153;5066:18;5098;5130:25;5169:15;5041:11;:153::i;:::-;5205:15;:40;;-1:-1:-1;;;;;;5205:40:32;-1:-1:-1;;;;;5205:40:32;;;;;;;;;;-1:-1:-1;;;;4710:542:32:o;1241:169:29:-;1285:10;1307:12;421:55;;;;;;;;;;;;;;;1383:11;;1360:44;-1:-1:-1;;1360:44:29:o;456:131:70:-;-1:-1:-1;;;;;547:23:70;;;;;;:13;:23;;;;;:33;;573:7;;547:33;:::i;:::-;;456:131;;;:::o;1999:676:32:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:32;;;;;;;;;2184:6;4581:32:22;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;2281:11:32;;-1:-1:-1;;;;;2281:11:32;2718:33:7;2281:11:32;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;2346:13:32;;;;:5;:13;;;;;;;;;:23;;:32;2309:120;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2309:23:32;;;;2346:32;;2309:120;:23;:120;:::i;:::-;2456:1;2447:6;:10;2439:42;;;;-1:-1:-1;;;2439:42:32;;;;;;;;;2575:32;2592:6;2600;2575:16;:32::i;:::-;2651:8;-1:-1:-1;;;;;2623:45:32;2643:6;2623:45;2661:6;2623:45;;;;;;;;;;;;;;;2391:1:7;1707::32;1999:676;;;:::o;2960:26:22:-;;;-1:-1:-1;;;;;2960:26:22;;:::o;14744:151::-;14803:7;14860:13;;;:5;:13;;;;;:27;;;;14829:26;;;;;:59;;;:30;:59;:::i;:::-;14822:66;;14744:151;;;;:::o;340:110:70:-;411:13;:32;340:110::o;2783:30:22:-;;;;:::o;2925:28::-;;;;:::o;15597:518::-;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;964:10:11;:8;:10::i;:::-;-1:-1:-1;;;;;964:28:11;;993:10;964:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;964:40:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;964:40:11;;;;15785:27:22;:14;-1:-1:-1;;;;;15785:25:22;;:27::i;:::-;15777:70;;;;-1:-1:-1;;;15777:70:22;;;;;;;;;15890:11;;15912:79;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15890:11:22;;;;15912:79;;15890:11;;15945:14;;15912:79;:32;:79;:::i;:::-;16002:11;:28;;-1:-1:-1;;;;;;16002:28:22;-1:-1:-1;;;;;16002:28:22;;;;;;;;;16046:62;;16002:28;;16046:62;;;16065:10;;16046:62;;-1:-1:-1;;16046:62:22;1014:1:11;15597:518:22;:::o;3039:53::-;;;-1:-1:-1;;;;;3039:53:22;;:::o;593:94:70:-;656:15;:24;593:94::o;13773:761:22:-;13836:4;13869:11;:9;:11::i;:::-;:62;;;-1:-1:-1;13918:11:22;;13896:35;;-1:-1:-1;;;;;13918:11:22;13896:13;:35::i;:::-;13869:132;;;-1:-1:-1;13971:30:22;13947:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;13947:20:22;;;;:54;;;;;;;;;;13869:132;13852:197;;;-1:-1:-1;14033:5:22;14026:12;;13852:197;14059:17;14079:13;;;:5;:13;;;;;:27;;;;14135:32;;;;;14079:27;;14220:3;14194:23;14079:27;14135:32;14194:23;:13;:23;:::i;:::-;:29;14177:46;;14237:9;14233:51;;;14269:4;14262:11;;;;;;;14233:51;14294:21;14318:13;;;:5;:13;;;;;:20;;;-1:-1:-1;;;;;14318:20:22;14352:29;;14348:113;;14420:13;-1:-1:-1;;;;;14404:44:22;;:46;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14404:46:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14404:46:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;14404:46:22;;;;;;;;;14397:53;;;;;;;;14348:113;14478:26;14497:6;14478:18;:26::i;:::-;:49;;;;13773:761;-1:-1:-1;;;;;;13773:761:22:o;6568:94::-;6635:11;;:20;;;-1:-1:-1;;;6635:20:22;;;;6609:7;;-1:-1:-1;;;;;6635:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;5:2;6635:20:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6635:20:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;6635:20:22;;;;;;;;;6628:27;;6568:94;;:::o;693:1013:70:-;1121:14;1094:9;:23;;;:41;;1086:81;;;;-1:-1:-1;;;1086:81:70;;;;;;;;;1177:15;:29;;;;;;1228:471;;;;;;;;;;;;;;;;;;;;;;1291:9;1228:471;;;;;;;1327:11;1228:471;;;;1367:13;1228:471;;;;1406:10;1228:471;;;;1448:16;1228:471;;;;1493:13;1228:471;;;;1534:12;1228:471;;;;1576:14;1228:471;;;;1620:3;-1:-1:-1;;;;;1228:471:70;;;;;1646:6;1228:471;;;;;;;;;;;;;;;;;;-1:-1:-1;1216:9:70;;;:5;:9;;;;;;;:483;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1216:483:70;;;-1:-1:-1;;;;;1216:483:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;;:483;;-1:-1:-1;;;;1216:483:70;;;;-1:-1:-1;;;1216:483:70;;;;;;;;;;;;;;-1:-1:-1;1216:483:70;;;;;;;;;;;;;;;-1:-1:-1;;;1216:483:70;-1:-1:-1;;;;1216:483:70;;;;;;;;;-1:-1:-1;;;;;;;;;;;693:1013:70:o;6915:1153:22:-;7016:6;4581:32;4557:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4557:20:22;;;;:56;;;;;;;;;:130;;;-1:-1:-1;4657:30:22;4633:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;4633:20:22;;;;:54;;;;;;;;;4557:130;4536:199;;;;-1:-1:-1;;;4536:199:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;7113:11:22;;-1:-1:-1;;;;;7113:11:22;2718:33:7;7113:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;;;-1:-1:-1;7186:13:22;;;:5;:13;;;;;:23;:32;-1:-1:-1;;;;;7186:32:22;7172:10;:46;7164:81;;;;-1:-1:-1;;;7164:81:22;;;;;;;;;7272:1;7263:6;:10;7255:43;;;;-1:-1:-1;;;7255:43:22;;;;;;;;;7396:29;7428:36;7457:6;7428:28;:36::i;:::-;7396:68;;7474:27;7504:41;7523:21;7504:18;:41::i;:::-;7635:24;7662:13;;;:5;:13;;;;;:24;;;7474:71;;-1:-1:-1;7635:24:22;7662:49;;7474:71;7662:49;:28;:49;:::i;:::-;7635:76;;7744:6;7725:16;:25;7721:81;;;-1:-1:-1;7785:6:22;7721:81;7816:20;;7812:177;;7923:55;7941:6;7949:16;7967:10;7923:17;:55::i;:::-;8032:10;-1:-1:-1;;;;;8004:57:22;8024:6;8004:57;8044:16;8004:57;;;;;;;;;;;;;;;1466:1:131;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;769:214;1024:12:132;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:132;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:132;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:132;;;;;1225:18;1213:4;1225:18;;;1170:80;975:1:131;959:13;:17;1264:55:132;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:132;;;1264:55;769:214:131;:::o;15119:184:22:-;15209:38;;:::i;:::-;15270:26;15289:6;15270:18;:26::i;2993:39::-;;;-1:-1:-1;;;;;2993:39:22;;:::o;2966:1228:32:-;1648:9;:14;1640:57;;;;-1:-1:-1;;;1640:57:32;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;3263:16:32;;;;:7;:16;;;3484:10:22;-1:-1:-1;;;;;3484:22:22;;;3476:58;;;;-1:-1:-1;;;3476:58:22;;;;;;;;;5074:679;;;;;;;3310:7:32;5074:679:22;;;5159:23;5185:10;:8;:10::i;:::-;-1:-1:-1;;;;;5185:34:22;;5233:10;:8;:10::i;:::-;-1:-1:-1;;;;;5233:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:19:22;;;;;;;;;-1:-1:-1;;;;;5233:49:22;;:51;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5233:51:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5233:51:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5233:51:22;;;;;;;;;5185:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5185:109:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5185:109:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5185:109:22;;;;;;;;;5159:135;;5331:11;:20;;;5312:15;:39;;5304:81;;;;-1:-1:-1;;;5304:81:22;;;;;;;;;5396:25;5424:10;:8;:10::i;:::-;-1:-1:-1;;;;;5424:31:22;;5469:11;;;;;;;;;-1:-1:-1;;;;;5469:11:22;-1:-1:-1;;;;;5469:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5469:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5469:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5469:26:22;;;;;;;;;5509:11;:18;;;5424:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5424:113:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5424:113:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;5424:113:22;;;;;;;;;5396:141;;5556:20;5555:21;5547:59;;;;-1:-1:-1;;;5547:59:22;;;;;;;;;5638:45;5664:11;:18;;;5638:25;:45::i;:::-;5617:118;;;;-1:-1:-1;;;5617:118:22;;;;;;;;;3333:14:32;3350:23;:21;:23::i;:::-;3503:18;;:53;;-1:-1:-1;;;3503:53:32;;3333:40;;-1:-1:-1;3398:20:32;;;;;;-1:-1:-1;;;;;3503:18:32;;;;:33;;:53;;3537:7;;3546:9;;;;3503:53;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3503:53:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3503:53:32;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;3503:53:32;;;;;;;;;3384:172;;-1:-1:-1;3384:172:32;-1:-1:-1;3384:172:32;-1:-1:-1;3583:143:32;3607:6;3583:143;;;;;;;3627:7;3583:143;;;3648:12;3674:15;3703:13;3583:10;:143::i;:::-;3567:13;;;;:5;:13;;;;;;;;;:159;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3567:159:32;;;-1:-1:-1;;;;;3567:159:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;;:159;;;-1:-1:-1;;;;3567:159:32;;;;-1:-1:-1;;;3567:159:32;;;;;;;;;;;;;;-1:-1:-1;3567:159:32;;;;;;;;;;;;;;;-1:-1:-1;;;3567:159:32;-1:-1:-1;;;;3567:159:32;;;;;;;;;3741:20;;3737:165;;3849:42;3866:6;3874:16;3849;:42::i;:::-;3912:13;:31;3926:16;;;;:7;:16;;;-1:-1:-1;;;;;3912:31:32;;;;;;;;;;;;;-1:-1:-1;3912:31:32;;;27:10:-1;;39:1;23:18;;45:23;;3912:44:32;;;;;;;;;;3967:220;3949:6;3967:220;;;;;;;4058:7;3967:220;;;4079:12;4105:15;4134:13;4161:16;3967:57;:220::i;:::-;5745:1:22;;;;3544;;;2391::7;2966:1228:32;;;;:::o;6138:106:22:-;6211:11;;:26;;;-1:-1:-1;;;6211:26:22;;;;6185:7;;-1:-1:-1;;;;;6211:11:22;;:24;;:26;;;;;;;;;;;;;;:11;:26;;;5:2:-1;;;;30:1;27;20:12;2820:30:22;;;-1:-1:-1;;;;;2820:30:22;;:::o;6359:94::-;6426:11;;:20;;;-1:-1:-1;;;6426:20:22;;;;6400:7;;-1:-1:-1;;;;;6426:11:22;;:18;;:20;;;;;;;;;;;;;;:11;:20;;;5:2:-1;;;;30:1;27;20:12;12362:1200:22;12437:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;12534:11:22;;-1:-1:-1;;;;;12534:11:22;2718:33:7;12534:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;12593:24:22;12610:6;12593:16;:24::i;:::-;12585:60;;;;-1:-1:-1;;;12585:60:22;;;;;;;;;12656:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;12656:53:22;-1:-1:-1;;;12656:53:22;-1:-1:-1;;;;12719:31:22;-1:-1:-1;;;12719:31:22;;;12782:24;;;;12845:30;12782:24;12845:18;:30::i;:::-;12816:59;;12942:49;12960:6;12968:10;12980;12942:17;:49::i;:::-;13002:25;13030:10;:8;:10::i;:::-;-1:-1:-1;;;;;13030:34:22;;13078:10;:8;:10::i;:::-;-1:-1:-1;;;;;13078:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13078:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13078:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13078:19:22;;;;;;;;;-1:-1:-1;;;;;13078:47:22;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13078:49:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13078:49:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13078:49:22;;;;;;;;;13030:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13030:107:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;13030:107:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;13030:107:22;;;;;;;;;13002:135;-1:-1:-1;13147:20:22;13170:81;2695:5;13170:41;:18;13002:135;13170:41;:22;:41;:::i;:81::-;13319:11;;:56;;-1:-1:-1;;;13319:56:22;;13147:104;;-1:-1:-1;;;;;;13319:11:22;;:30;;:56;;13147:104;;13364:10;;13319:56;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13319:56:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;13439:13:22;;;;:5;:13;;;;;;;:23;;:32;13391:164;;-1:-1:-1;;;;;13439:32:22;;;;-1:-1:-1;13445:6:22;;13391:164;;;;13485:10;;13509;;13533:12;;13391:164;;;;;;;;;;1466:1:131;;;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;10700:1510:22;10783:6;3830:30;3806:13;;;;:5;:13;;;;;:20;;;-1:-1:-1;;;3806:20:22;;;;:54;;;;;;;;;3785:116;;;;-1:-1:-1;;;3785:116:22;;;;;;;;;977:13:29;:11;:13::i;:::-;969:50;;;;-1:-1:-1;;;969:50:29;;;;;;;;;2347:11:7;:9;:11::i;:::-;2346:12;2338:43;;;;-1:-1:-1;;;2338:43:7;;;;;;;;;10880:11:22;;-1:-1:-1;;;;;10880:11:22;2718:33:7;10880:11:22;2718:13:7;:33::i;:::-;2717:34;2709:69;;;;-1:-1:-1;;;2709:69:7;;;;;;;;;1392:13:131;:18;;1409:1;1392:18;;;;;10939:10:22;10931:44;;;;-1:-1:-1;;;10931:44:22;;;;;;;;;11049:6;11033:13;11085:20;11098:6;11085:12;:20::i;:::-;11065:40;;11131:5;11119:9;:17;11115:65;;;11160:9;11152:17;;11115:65;11248:20;:9;11262:5;11248:20;:13;:20;:::i;:::-;11236:32;;11278:23;11287:6;11295:5;11278:8;:23::i;:::-;11389:14;11385:416;;11419:13;;;;:5;:13;;;;;:20;;;:53;;-1:-1:-1;;;;11419:53:22;-1:-1:-1;;;11419:53:22;;;11514:24;;;;-1:-1:-1;11596:23:22;;;:32;11552:77;;11419:13;;11514:24;;-1:-1:-1;;;;;11596:32:22;11552:17;:77::i;:::-;11710:13;;;;:5;:13;;;;;;;:23;;:32;11649:141;;-1:-1:-1;;;;;11710:32:22;;;;11716:6;;11649:141;;;;11760:16;;11649:141;;;;;;;;;;11385:416;;11855:11;;:36;;-1:-1:-1;;;11855:36:22;;-1:-1:-1;;;;;11855:11:22;;;;:17;;:36;;11873:5;;11880:10;;11855:36;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11855:36:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11855:36:22;;;;11902:10;:8;:10::i;:::-;-1:-1:-1;;;;;11902:28:22;;11944:11;;;;;;;;;-1:-1:-1;;;;;11944:11:22;-1:-1:-1;;;;;11944:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11944:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11944:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11944:26:22;;;;;;;;;11984:4;-1:-1:-1;;;;;11984:20:22;;:22;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11984:22:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11984:22:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11984:22:22;;;;;;;;;12020:5;11902:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11902:133:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;12095:13:22;;;;:5;:13;;;;;;;:23;;:32;12051:152;;-1:-1:-1;;;;;12095:32:22;;;;-1:-1:-1;12101:6:22;;12051:152;;;;12141:5;;12160:10;;12184:9;;12051:152;;;;;;;;;;1466:1:131;;1501:13;;1485:12;:29;1477:73;;;;-1:-1:-1;;;1477:73:131;;;;;;;;1259:263:11;1300:17;1329:23;1363:12;555:37;;;;;;;;;;;;;;;1443:11;;-1:-1:-1;;;1259:263:11;:::o;3156:50:22:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3156:50:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3156:50:22;;;;;-1:-1:-1;;;3156:50:22;;;;:::o;3099:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5877:132::-;-1:-1:-1;;;;;5979:23:22;;;;;;:13;:23;;;;;;;;;5972:30;;;;;;;;;;;;;;;;;5944:16;;5972:30;;;5979:23;5972:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5877:132;;;:::o;170:30:70:-;;;;;;:::o;4524:95:7:-;4568:4;4591:10;:8;:10::i;:::-;-1:-1:-1;;;;;4591:19:7;;:21;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4591:21:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4591:21:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4591:21:7;;;;;;;;4237:138;4304:4;4327:10;:8;:10::i;:::-;-1:-1:-1;;;;;4327:28:7;;4356:11;4327:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4327:41:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4327:41:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4327:41:7;;;;;;;;1274:134:122;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;;:::o;2159:459::-;2217:7;2458:6;2454:45;;-1:-1:-1;2487:1:122;2480:8;;2454:45;2521:5;;;2525:1;2521;:5;:1;2544:5;;;;;:10;2536:56;;;;-1:-1:-1;;;2536:56:122;;;;;;;;3073:130;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;16768:624:22:-;16859:38;;:::i;:::-;16913:18;16934:13;;;:5;:13;;;;;:24;;;;16913:18;17024:54;16940:6;17024:24;:54::i;:::-;17107:278;;;;;;;;;;;;;;;;;;;;;;;17339:31;;;;17107:278;;;;-1:-1:-1;17107:278:22;;16768:624;-1:-1:-1;;;16768:624:22:o;26537:152::-;26594:7;26620:10;:8;:10::i;:::-;-1:-1:-1;;;;;26620:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26620:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26620:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26620:26:22;;;;;;;;;-1:-1:-1;;;;;26620:39:22;;26668:4;26675:6;26620:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26620:62:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26620:62:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26620:62:22;;;;;;;;4625:115:7;4668:21;4708:10;:8;:10::i;:::-;-1:-1:-1;;;;;4708:23:7;;:25;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4708:25:7;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4708:25:7;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;4708:25:7;;;;;;;;1583:127:101;1677:16;1688:4;1677:10;:16::i;:::-;1695:7;1669:34;;;;;-1:-1:-1;;;1669:34:101;;;;;;;;;;;1583:127;;:::o;18557:669:22:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;18770:60:22;;;;;;;;;;;;-1:-1:-1;;;18770:60:22;;;;;;-1:-1:-1;;;;;18770:34:22;;;:60;:34;:60;:::i;:::-;18840:66;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18840:34:22;;;:66;:34;:66;:::i;:::-;18916:72;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18916:41:22;;;:72;:41;:72;:::i;:::-;18999:28;19011:15;18999:11;:28::i;:::-;-1:-1:-1;19038:11:22;:32;;-1:-1:-1;;;;;19038:32:22;;;-1:-1:-1;;;;;;19038:32:22;;;;;;;19080:11;:54;;;;;;;;;;;;;;;19144:18;:75;;;;;;;;;;;18557:669::o;2303:177:101:-;2441:22;2451:4;2457:5;2441:9;:22::i;:::-;2465:7;2433:40;;;;;-1:-1:-1;;;2433:40:101;;;;;;;;;6000:295:32;6136:38;6159:6;6167;6136:22;:38::i;:::-;6240:48;6269:10;6281:6;6240:28;:48::i;:::-;6000:295;;:::o;834:176:122:-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:122;;;;;;;;686:610:129;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;1273:15:129;;;1246:42;1238:51;686:610;-1:-1:-1;;;;686:610:129:o;2749:183:101:-;2890:25;2903:4;2909:5;2890:12;:25::i;20582:313:22:-;20683:7;20706:18;20727:20;20740:6;20727:12;:20::i;:::-;20757:23;20783:13;;;:5;:13;;;;;:39;;;20706:41;;-1:-1:-1;20839:49:22;2695:5;20839:31;20706:41;20783:39;20839:31;:14;:31;:::i;21873:637::-;21945:7;22134:26;22163:71;22177:11;;;;;;;;;-1:-1:-1;;;;;22177:11:22;-1:-1:-1;;;;;22177:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22177:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22177:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22177:26:22;;;;;;;;;-1:-1:-1;;;;;22163:69:22;;:71::i;:::-;22134:100;;22244:31;22323:11;;;;;;;;;-1:-1:-1;;;;;22323:11:22;-1:-1:-1;;;;;22299:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;22299:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;22299:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;22299:54:22;;;;;;;;;22244:119;-1:-1:-1;22373:16:22;22392:86;22450:18;22392:40;:11;22244:119;22392:40;:15;:40;:::i;:86::-;22373:105;21873:637;-1:-1:-1;;;;;21873:637:22:o;5484:314:32:-;5637:15;;:27;;5657:6;5637:27;:19;:27;:::i;:::-;5619:15;:45;5701:13;;;;:5;:13;;;;;:24;;;:36;;5730:6;5701:36;:28;:36;:::i;:::-;5674:13;;;;:5;:13;;;;;:24;;:63;5748:43;5773:9;5784:6;5748:24;:43::i;1409:498:132:-;1820:4;1864:17;1895:7;1409:498;:::o;25566:759:22:-;25671:4;25691:27;25721:10;:8;:10::i;:::-;-1:-1:-1;;;;;25721:22:22;;:24;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25721:24:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25721:24:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25721:24:22;;;;;;;;;-1:-1:-1;;;;;25721:40:22;;25775:11;;;;;;;;;-1:-1:-1;;;;;25775:11:22;-1:-1:-1;;;;;25775:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25775:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25775:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25775:26:22;;;;;;;;;25815:15;;25721:119;;-1:-1:-1;;;;;;25721:119:22;;;;;;;;;;-1:-1:-1;;;;;25815:15:22;;25721:119;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25721:119:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25721:119:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25721:119:22;;;;;;;;;25691:149;-1:-1:-1;;;;;;25858:35:22;;25850:72;;;;-1:-1:-1;;;25850:72:22;;;;;;;;;25966:102;;-1:-1:-1;;;25966:102:22;;25932:31;;-1:-1:-1;;;;;25966:74:22;;;;;:102;;-1:-1:-1;;;26041:26:22;25966:102;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25966:102:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;25966:102:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;25966:102:22;;;;;;;;;25932:136;;26078:33;26114:10;:8;:10::i;:::-;-1:-1:-1;;;;;26114:29:22;;26157:11;;;;;;;;;-1:-1:-1;;;;;26157:11:22;-1:-1:-1;;;;;26157:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26157:26:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26157:26:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26157:26:22;;;;;;;;;26197:15;;26114:135;;-1:-1:-1;;;;;;26114:135:22;;;;;;;;;;-1:-1:-1;;;;;26197:15:22;;26226:13;;26114:135;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26114:135:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;26114:135:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;26114:135:22;;;;;;;;;26266:52;;;;;;25566:759;-1:-1:-1;;;;25566:759:22:o;22663:158::-;22755:13;;22794:20;22755:13;22812:1;22794:20;:17;:20;:::i;:::-;22778:13;:36;22663:158;:::o;23322:1282::-;23538:24;;:::i;:::-;23574:23;23600:10;:8;:10::i;:::-;-1:-1:-1;;;;;23600:34:22;;23648:10;:8;:10::i;:::-;-1:-1:-1;;;;;23648:17:22;;:19;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23648:19:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23648:19:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23648:19:22;;;;;;;;;-1:-1:-1;;;;;23648:45:22;;:47;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23648:47:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23648:47:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23648:47:22;;;;;;;;;23600:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23600:105:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23600:105:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;23600:105:22;;;;;;;;;23574:131;-1:-1:-1;23715:19:22;23737:24;:3;23574:131;23737:24;:7;:24;:::i;:::-;23715:46;;23790:807;;;;;;;;23830:6;23790:807;;;;23865:340;;;;;;;;23920:7;:16;;;-1:-1:-1;;;;;23865:340:22;;;;;23969:7;:17;;;-1:-1:-1;;;;;23865:340:22;;;;;24022:12;23865:340;;;;24073:15;23865:340;;;;24125:13;23865:340;;;;24170:7;:16;;;23865:340;;;23790:807;;;;24236:11;23790:807;;;;24280:1;23790:807;;;;24311:1;23790:807;;;;24348:1;23790:807;;;;24382:1;23790:807;;;;24415:1;23790:807;;;;24450:1;23790:807;;;;24485:3;-1:-1:-1;;;;;23790:807:22;;;;;24515:32;23790:807;;;;;;;;;;24577:5;23790:807;;;;;23771:826;23322:1282;-1:-1:-1;;;;;;;;23322:1282:22:o;24610:684::-;24983:7;:17;;;-1:-1:-1;;;;;24907:254:22;24953:7;:16;;;-1:-1:-1;;;;;24907:254:22;24933:6;24907:254;25014:12;25040:15;25069:13;25096:7;:16;;;25126:5;:13;25132:6;25126:13;;;;;;;;;;;:25;;;24907:254;;;;;;;;;;;;;;;;;;;25175:19;;25171:117;;25243:7;:16;;;-1:-1:-1;;;;;25215:62:22;25235:6;25215:62;25261:15;25215:62;;;;;;;;;;;;;;;25171:117;24610:684;;;;;;:::o;21131:485::-;21201:7;21301:26;21330:71;21344:11;;;;;;;;;-1:-1:-1;;;;;21344:11:22;-1:-1:-1;;;;;21344:24:22;;:26;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;21330:71:22;21301:100;;21411:31;21490:11;;;;;;;;;-1:-1:-1;;;;;21490:11:22;-1:-1:-1;;;;;21466:52:22;;:54;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21466:54:22;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21466:54:22;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;21466:54:22;;;;;;;;;21411:119;-1:-1:-1;21547:62:22;21411:119;21547:33;:9;21561:18;21547:33;:13;:33;:::i;19906:461::-;19986:13;;;;:5;:13;;;;;:27;;;19978:35;;19974:387;;;20029:17;20094:13;;;:5;:13;;;;;:27;;;20049:5;;20080:42;;20049:5;;20080:42;:13;:42;:::i;:::-;20166:1;20136:13;;;:5;:13;;;;;:27;;;:31;;;;20210:26;;;20068:54;;-1:-1:-1;20210:41:22;;20068:54;20210:41;:30;:41;:::i;:::-;20181:13;;;;:5;:13;;;;;:26;;:70;-1:-1:-1;19974:387:22;;;20312:13;;;;:5;:13;;;;;:27;;;:38;;20344:5;20312:38;:31;:38;:::i;:::-;20282:13;;;;:5;:13;;;;;:27;;:68;19906:461;;:::o;1732:187:122:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:122;;;;;;;;;;-1:-1:-1;;1888:5:122;;;1732:187;;;;;;:::o;3718:338::-;3804:7;3904:12;3897:5;3889:28;;;;-1:-1:-1;;;3889:28:122;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;;3718:338;-1:-1:-1;;;;;3718:338:122:o;17674:460:22:-;17771:29;17802:32;17902:29;17934:36;17963:6;17934:28;:36::i;:::-;17902:68;;18062:21;18085:41;18104:21;18085:18;:41::i;:::-;18054:73;;;;;17674:460;;;:::o;1288:108:101:-;-1:-1:-1;;;;;1368:21:101;;;;1288:108::o;3702:292:7:-;706:13:29;:11;:13::i;:::-;705:14;697:55;;;;-1:-1:-1;;;697:55:29;;;;;;;;;3786:60:7;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3786:31:7;;;:60;:31;:60;:::i;:::-;3864:28;:15;-1:-1:-1;;;;;3864:26:7;;:28::i;:::-;3856:68;;;;-1:-1:-1;;;3856:68:7;;;;;;;;;3935:13;:11;:13::i;:::-;3958:29;3971:15;3958:12;:29::i;681:114:101:-;-1:-1:-1;;;;;775:13:101;;;;;;;681:114::o;19428:248:22:-;19523:15;;:27;;19543:6;19523:27;:19;:27;:::i;:::-;19505:15;:45;19587:13;;;;:5;:13;;;;;:24;;;:36;;19616:6;19587:36;:28;:36;:::i;:::-;19560:13;;;;:5;:13;;;;;;:24;;;:63;;;;-1:-1:-1;19666:3:22;19633:30;;;;:36;19428:248::o;1911:191:70:-;2003:18;;;;1998:98;;2037:48;2072:4;2078:6;2037:34;:48::i;1018:117:101:-;-1:-1:-1;;;;;1115:13:101;;;;;;;;1018:117::o;710:155:103:-;777:7;796:14;813:4;-1:-1:-1;;;;;813:13:103;;:15;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;813:15:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;813:15:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;813:15:103;;;;;;;;;845:13;;514:2;845:13;;710:155;-1:-1:-1;;;710:155:103:o;1712:193:70:-;1805:18;;;;1800:99;;1839:49;1870:9;1881:6;1839:30;:49::i;1509:171:29:-;1551:12;421:55;;;;;;;;;;;;;;;1608:4;1645:19;;-1:-1:-1;1631:43:29:o;2374:410:11:-;2525:32;2533:10;:8;:10::i;:::-;-1:-1:-1;;;;;2525:30:11;;:32::i;:::-;2521:69;;;2573:7;;2521:69;2607:28;:15;-1:-1:-1;;;;;2607:26:11;;:28::i;:::-;2599:68;;;;-1:-1:-1;;;2599:68:11;;;;;;;;;2678:12;555:37;;;;;;;;;;;;;;;2739:29;;;-1:-1:-1;2725:53:11;:::o;6919:156:32:-;7020:15;;7006:62;;-1:-1:-1;;;;;7020:15:32;7055:4;7061:6;7006:62;:48;:62;:::i;6524:158::-;6626:15;;6612:63;;-1:-1:-1;;;;;6626:15:32;6657:9;6668:6;6612:63;:44;:63;:::i;2161:679:103:-;2314:35;;-1:-1:-1;;;2314:35:103;;2287:24;;-1:-1:-1;;;;;2314:14:103;;;;;:35;;2329:4;;2343;;2314:35;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2314:35:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2314:35:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2314:35:103;;;;;;;;;2287:62;;2387:6;2367:16;:26;;2359:66;;;;-1:-1:-1;;;2359:66:103;;;;;;;;;2461:29;;-1:-1:-1;;;2461:29:103;;2436:22;;-1:-1:-1;;;;;2461:14:103;;;;;:29;;2484:4;;2461:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2461:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2461:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2461:29:103;;;;;;;;;2436:54;;2500:23;2526:4;-1:-1:-1;;;;;2526:17:103;;2544:4;2558;2565:6;2526:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2526:46:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2526:46:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2526:46:103;;;;;;;;;2500:72;;2590:18;2582:58;;;;-1:-1:-1;;;2582:58:103;;;;;;;;;2674:29;;-1:-1:-1;;;2674:29:103;;2651:20;;-1:-1:-1;;;;;2674:14:103;;;;;:29;;2697:4;;2674:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2674:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2674:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;2674:29:103;;;;;;;;;2651:52;-1:-1:-1;2770:6:103;2734:32;2651:52;2751:14;2734:32;:16;:32;:::i;:::-;:42;2713:120;;;;-1:-1:-1;;;2713:120:103;;;;;;;;;2161:679;;;;;;;:::o;1202:539::-;1354:29;;-1:-1:-1;;;1354:29:103;;1329:22;;-1:-1:-1;;;;;1354:14:103;;;;;:29;;1377:4;;1354:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1354:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1354:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1354:29:103;;;;;;;;;1329:54;;1419:6;1401:14;:24;;1393:62;;;;-1:-1:-1;;;1393:62:103;;;;;;;;;1488:32;;-1:-1:-1;;;1488:32:103;;1466:19;;-1:-1:-1;;;;;1488:13:103;;;;;:32;;1502:9;;1513:6;;1488:32;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1488:32:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1488:32:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1488:32:103;;;;;;;;;1466:54;;1538:14;1530:49;;;;-1:-1:-1;;;1530:49:103;;;;;;;;;1613:29;;-1:-1:-1;;;1613:29:103;;1590:20;;-1:-1:-1;;;;;1613:14:103;;;;;:29;;1636:4;;1613:29;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1613:29:103;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1613:29:103;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1613:29:103;;;;;;;;;1590:52;-1:-1:-1;1697:6:103;1661:32;:14;1590:52;1661:32;:18;:32;:::i;:::-;:42;1653:81;;;;-1:-1:-1;;;1653:81:103;;;;;;;;106:1998:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;106:1998:70;;;-1:-1:-1;106:1998:70;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;106:1998:70;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;106:1998:70;;;;;;-1:-1:-1;;;;;106:1998:70;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;72:20;;97:33;72:20;97:33;;142:134;220:13;;238:33;220:13;238:33;;479:383;;;638:3;631:4;623:6;619:17;615:27;605:2;;656:1;653;646:12;605:2;-1:-1;676:20;;716:18;705:30;;702:2;;;748:1;745;738:12;702:2;782:4;774:6;770:17;758:29;;835:3;825:6;817;813:19;803:8;799:34;796:43;793:2;;;852:1;849;842:12;793:2;598:264;;;;;;888:352;;;1018:3;1011:4;1003:6;999:17;995:27;985:2;;1036:1;1033;1026:12;985:2;-1:-1;1056:20;;1096:18;1085:30;;1082:2;;;1128:1;1125;1118:12;1082:2;1162:4;1154:6;1150:17;1138:29;;1213:3;1205:4;1197:6;1193:17;1183:8;1179:32;1176:41;1173:2;;;1230:1;1227;1220:12;1248:124;1312:20;;1337:30;1312:20;1337:30;;1379:128;1454:13;;1472:30;1454:13;1472:30;;1514:130;1581:20;;1606:33;1581:20;1606:33;;1651:134;1729:13;;1747:33;1729:13;1747:33;;1792:196;1901:13;;1919:64;1901:13;1919:64;;2572:162;2655:20;;2680:49;2655:20;2680:49;;2920:164;;3036:3;3027:6;3022:3;3018:16;3014:26;3011:2;;;3053:1;3050;3043:12;3011:2;-1:-1;3072:6;3004:80;-1:-1;3004:80;3129:1245;;3248:4;3236:9;3231:3;3227:19;3223:30;3220:2;;;3266:1;3263;3256:12;3220:2;3284:20;3299:4;3284:20;;;3275:29;-1:-1;3358:1;3390:57;3443:3;3423:9;3390:57;;;3365:83;;-1:-1;3514:2;3547:49;3592:3;3568:22;;;3547:49;;;3540:4;3533:5;3529:16;3522:75;3469:139;3670:2;3703:49;3748:3;3739:6;3728:9;3724:22;3703:49;;;3696:4;3689:5;3685:16;3678:75;3618:146;3822:2;3855:49;3900:3;3891:6;3880:9;3876:22;3855:49;;;3848:4;3841:5;3837:16;3830:75;3774:142;3968:3;4002:49;4047:3;4038:6;4027:9;4023:22;4002:49;;;3995:4;3988:5;3984:16;3977:75;3926:137;4117:3;4151:49;4196:3;4187:6;4176:9;4172:22;4151:49;;;4144:4;4137:5;4133:16;4126:75;4073:139;4269:3;4303:49;4348:3;4339:6;4328:9;4324:22;4303:49;;;4296:4;4289:5;4285:16;4278:75;4222:142;3214:1160;;;;;4419:162;;4533:3;4524:6;4519:3;4515:16;4511:26;4508:2;;;4550:1;4547;4540:12;4624:1093;;4737:4;4725:9;4720:3;4716:19;4712:30;4709:2;;;4755:1;4752;4745:12;4709:2;4773:20;4788:4;4773:20;;;4764:29;-1:-1;4847:1;4879:57;4932:3;4912:9;4879:57;;;4854:83;;-1:-1;5003:2;5036:49;5081:3;5057:22;;;5036:49;;;5029:4;5022:5;5018:16;5011:75;4958:139;5155:2;5188:49;5233:3;5224:6;5213:9;5209:22;5188:49;;;5181:4;5174:5;5170:16;5163:75;5107:142;5310:2;5343:49;5388:3;5379:6;5368:9;5364:22;5343:49;;;5336:4;5329:5;5325:16;5318:75;5259:145;5463:3;5497:49;5542:3;5533:6;5522:9;5518:22;5497:49;;;5490:4;5483:5;5479:16;5472:75;5414:144;5612:3;5646:49;5691:3;5682:6;5671:9;5667:22;5646:49;;;5639:4;5632:5;5628:16;5621:75;5568:139;4703:1014;;;;;6002:126;6067:20;;6092:31;6067:20;6092:31;;6135:130;6211:13;;6229:31;6211:13;6229:31;;6272:241;;6376:2;6364:9;6355:7;6351:23;6347:32;6344:2;;;6392:1;6389;6382:12;6344:2;6427:1;6444:53;6489:7;6469:9;6444:53;;6520:263;;6635:2;6623:9;6614:7;6610:23;6606:32;6603:2;;;6651:1;6648;6641:12;6603:2;6686:1;6703:64;6759:7;6739:9;6703:64;;7054:743;;;;;;7226:3;7214:9;7205:7;7201:23;7197:33;7194:2;;;7243:1;7240;7233:12;7194:2;7278:1;7295:53;7340:7;7320:9;7295:53;;;7285:63;;7257:97;7385:2;7403:53;7448:7;7439:6;7428:9;7424:22;7403:53;;;7393:63;;7364:98;7493:2;7511:53;7556:7;7547:6;7536:9;7532:22;7511:53;;;7501:63;;7472:98;7601:2;7619:53;7664:7;7655:6;7644:9;7640:22;7619:53;;;7609:63;;7580:98;7709:3;7728:53;7773:7;7764:6;7753:9;7749:22;7728:53;;;7718:63;;7688:99;7188:609;;;;;;;;;7804:522;;;;7960:2;7948:9;7939:7;7935:23;7931:32;7928:2;;;7976:1;7973;7966:12;7928:2;8011:1;8028:53;8073:7;8053:9;8028:53;;;8018:63;;7990:97;8146:2;8135:9;8131:18;8118:32;8170:18;8162:6;8159:30;8156:2;;;8202:1;8199;8192:12;8156:2;8230:80;8302:7;8293:6;8282:9;8278:22;8230:80;;;8220:90;;;;8097:219;7922:404;;;;;;8333:366;;;8454:2;8442:9;8433:7;8429:23;8425:32;8422:2;;;8470:1;8467;8460:12;8422:2;8505:1;8522:53;8567:7;8547:9;8522:53;;;8512:63;;8484:97;8612:2;8630:53;8675:7;8666:6;8655:9;8651:22;8630:53;;;8620:63;;8591:98;8416:283;;;;;;8706:491;;;;8844:2;8832:9;8823:7;8819:23;8815:32;8812:2;;;8860:1;8857;8850:12;8812:2;8895:1;8912:53;8957:7;8937:9;8912:53;;;8902:63;;8874:97;9002:2;9020:53;9065:7;9056:6;9045:9;9041:22;9020:53;;;9010:63;;8981:98;9110:2;9128:53;9173:7;9164:6;9153:9;9149:22;9128:53;;;9118:63;;9089:98;8806:391;;;;;;9204:235;;9305:2;9293:9;9284:7;9280:23;9276:32;9273:2;;;9321:1;9318;9311:12;9273:2;9356:1;9373:50;9415:7;9395:9;9373:50;;9446:257;;9558:2;9546:9;9537:7;9533:23;9529:32;9526:2;;;9574:1;9571;9564:12;9526:2;9609:1;9626:61;9679:7;9659:9;9626:61;;9710:263;;9825:2;9813:9;9804:7;9800:23;9796:32;9793:2;;;9841:1;9838;9831:12;9793:2;9876:1;9893:64;9949:7;9929:9;9893:64;;9980:325;;10126:2;10114:9;10105:7;10101:23;10097:32;10094:2;;;10142:1;10139;10132:12;10094:2;10177:1;10194:95;10281:7;10261:9;10194:95;;11544:772;;;;;11778:3;11766:9;11757:7;11753:23;11749:33;11746:2;;;11795:1;11792;11785:12;11746:2;11830:1;11847:85;11924:7;11904:9;11847:85;;;11837:95;;11809:129;11997:3;11986:9;11982:19;11969:33;12022:18;12014:6;12011:30;12008:2;;;12054:1;12051;12044:12;12008:2;12082:109;12183:7;12174:6;12163:9;12159:22;12082:109;;;12072:119;;;;11948:249;12228:3;12247:53;12292:7;12283:6;12272:9;12268:22;12247:53;;;12237:63;;12207:99;11740:576;;;;;;;;12323:302;;12457:3;12445:9;12436:7;12432:23;12428:33;12425:2;;;12474:1;12471;12464:12;12425:2;12509:1;12526:83;12601:7;12581:9;12526:83;;12632:290;;12760:3;12748:9;12739:7;12735:23;12731:33;12728:2;;;12777:1;12774;12767:12;12728:2;12812:1;12829:77;12898:7;12878:9;12829:77;;12929:241;;13033:2;13021:9;13012:7;13008:23;13004:32;13001:2;;;13049:1;13046;13039:12;13001:2;13084:1;13101:53;13146:7;13126:9;13101:53;;13447:1589;;;;;;;;;;;;13765:3;13753:9;13744:7;13740:23;13736:33;13733:2;;;13782:1;13779;13772:12;13733:2;13817:1;13834:53;13879:7;13859:9;13834:53;;;13824:63;;13796:97;13924:2;13942:83;14017:7;14008:6;13997:9;13993:22;13942:83;;;13932:93;;13903:128;14062:3;14081:53;14126:7;14117:6;14106:9;14102:22;14081:53;;;14071:63;;14041:99;14171:3;14190:53;14235:7;14226:6;14215:9;14211:22;14190:53;;;14180:63;;14150:99;14280:3;14299:53;14344:7;14335:6;14324:9;14320:22;14299:53;;;14289:63;;14259:99;14389:3;14408:53;14453:7;14444:6;14433:9;14429:22;14408:53;;;14398:63;;14368:99;14498:3;14517:53;14562:7;14553:6;14542:9;14538:22;14517:53;;;14507:63;;14477:99;14607:3;14626:53;14671:7;14662:6;14651:9;14647:22;14626:53;;;14616:63;;14586:99;14716:3;14735:53;14780:7;14771:6;14760:9;14756:22;14735:53;;;14725:63;;14695:99;14825:3;14844:69;14905:7;14896:6;14885:9;14881:22;14844:69;;;14834:79;;14804:115;14950:3;14970:50;15012:7;15003:6;14992:9;14988:22;14970:50;;;14959:61;;14929:97;13727:1309;;;;;;;;;;;;;;;15043:366;;;15164:2;15152:9;15143:7;15139:23;15135:32;15132:2;;;15180:1;15177;15170:12;15132:2;15215:1;15232:53;15277:7;15257:9;15232:53;;15416:535;;;;15565:2;15553:9;15544:7;15540:23;15536:32;15533:2;;;15581:1;15578;15571:12;15533:2;15616:1;15633:64;15689:7;15669:9;15633:64;;;15623:74;;15595:108;15734:2;15752:64;15808:7;15799:6;15788:9;15784:22;15752:64;;;15742:74;;15713:109;15853:2;15871:64;15927:7;15918:6;15907:9;15903:22;15871:64;;15958:259;;16071:2;16059:9;16050:7;16046:23;16042:32;16039:2;;;16087:1;16084;16077:12;16039:2;16122:1;16139:62;16193:7;16173:9;16139:62;;16225:291;;16368:106;16470:3;16462:6;16368:106;;;-1:-1;;16503:6;16494:16;;16361:155;16525:173;;16612:46;16654:3;16646:6;16612:46;;;-1:-1;;16687:4;16678:14;;16605:93;16706:142;16797:45;16836:5;16797:45;;;16792:3;16785:58;16779:69;;;16855:127;16944:32;16970:5;16944:32;;17300:891;;17510:113;17616:6;17611:3;17510:113;;;17503:120;;17644:87;17725:5;17644:87;;;17751:7;17779:1;17764:405;17789:6;17786:1;17783:13;17764:405;;;17850:71;17914:6;17905:7;17850:71;;;17935:119;18050:3;18035:13;17935:119;;;17928:126;;18071:91;18155:6;18071:91;;;18061:101;-1:-1;;17811:1;17804:9;17764:405;;;-1:-1;18182:3;;17490:701;-1:-1;;;;;17490:701;18230:690;;18375:54;18423:5;18375:54;;;18442:86;18521:6;18516:3;18442:86;;;18435:93;;18549:56;18599:5;18549:56;;;18625:7;18653:1;18638:260;18663:6;18660:1;18657:13;18638:260;;;18730:6;18724:13;18751:63;18810:3;18795:13;18751:63;;;18744:70;;18831:60;18884:6;18831:60;;;18821:70;-1:-1;;18685:1;18678:9;18638:260;;18928:94;18995:21;19010:5;18995:21;;19140:103;19213:24;19231:5;19213:24;;19370:186;19483:67;19544:5;19483:67;;19957:154;20054:51;20099:5;20054:51;;20118:347;;20230:39;20263:5;20230:39;;;20281:71;20345:6;20340:3;20281:71;;;20274:78;;20357:52;20402:6;20397:3;20390:4;20383:5;20379:16;20357:52;;;20430:29;20452:6;20430:29;;;20421:39;;;;20210:255;-1:-1;;;20210:255;20473:329;;20633:67;20697:2;20692:3;20633:67;;;20733:31;20713:52;;20793:2;20784:12;;20619:183;-1:-1;;20619:183;20811:364;;20989:85;21071:2;21066:3;20989:85;;;21107:30;21087:51;;21166:2;21157:12;;20975:200;-1:-1;;20975:200;21184:321;;21344:67;21408:2;21403:3;21344:67;;;-1:-1;;;21424:44;;21496:2;21487:12;;21330:175;-1:-1;;21330:175;21514:322;;21674:67;21738:2;21733:3;21674:67;;;-1:-1;;;21754:45;;21827:2;21818:12;;21660:176;-1:-1;;21660:176;21845:325;;22005:67;22069:2;22064:3;22005:67;;;22105:27;22085:48;;22161:2;22152:12;;21991:179;-1:-1;;21991:179;22179:330;;22339:67;22403:2;22398:3;22339:67;;;22439:32;22419:53;;22500:2;22491:12;;22325:184;-1:-1;;22325:184;22518:317;;22678:67;22742:2;22737:3;22678:67;;;-1:-1;;;22758:40;;22826:2;22817:12;;22664:171;-1:-1;;22664:171;22844:327;;23004:67;23068:2;23063:3;23004:67;;;23104:29;23084:50;;23162:2;23153:12;;22990:181;-1:-1;;22990:181;23180:322;;23340:67;23404:2;23399:3;23340:67;;;-1:-1;;;23420:45;;23493:2;23484:12;;23326:176;-1:-1;;23326:176;23511:327;;23671:67;23735:2;23730:3;23671:67;;;23771:29;23751:50;;23829:2;23820:12;;23657:181;-1:-1;;23657:181;23847:323;;24007:67;24071:2;24066:3;24007:67;;;24107:25;24087:46;;24161:2;24152:12;;23993:177;-1:-1;;23993:177;24179:315;;24339:67;24403:2;24398:3;24339:67;;;-1:-1;;;24419:38;;24485:2;24476:12;;24325:169;-1:-1;;24325:169;24503:327;;24663:67;24727:2;24722:3;24663:67;;;24763:29;24743:50;;24821:2;24812:12;;24649:181;-1:-1;;24649:181;24839:320;;24999:67;25063:2;25058:3;24999:67;;;-1:-1;;;25079:43;;25150:2;25141:12;;24985:174;-1:-1;;24985:174;25168:318;;25328:67;25392:2;25387:3;25328:67;;;-1:-1;;;25408:41;;25477:2;25468:12;;25314:172;-1:-1;;25314:172;25495:324;;25655:67;25719:2;25714:3;25655:67;;;25755:26;25735:47;;25810:2;25801:12;;25641:178;-1:-1;;25641:178;25828:370;;25988:67;26052:2;26047:3;25988:67;;;26088:34;26068:55;;-1:-1;;;26152:2;26143:12;;26136:25;26189:2;26180:12;;25974:224;-1:-1;;25974:224;26207:329;;26367:67;26431:2;26426:3;26367:67;;;26467:31;26447:52;;26527:2;26518:12;;26353:183;-1:-1;;26353:183;26545:327;;26705:67;26769:2;26764:3;26705:67;;;26805:29;26785:50;;26863:2;26854:12;;26691:181;-1:-1;;26691:181;26881:318;;27041:67;27105:2;27100:3;27041:67;;;-1:-1;;;27121:41;;27190:2;27181:12;;27027:172;-1:-1;;27027:172;27208:383;;27368:67;27432:2;27427:3;27368:67;;;27468:34;27448:55;;-1:-1;;;27532:2;27523:12;;27516:38;27582:2;27573:12;;27354:237;-1:-1;;27354:237;27600:324;;27760:67;27824:2;27819:3;27760:67;;;27860:26;27840:47;;27915:2;27906:12;;27746:178;-1:-1;;27746:178;27933:331;;28093:67;28157:2;28152:3;28093:67;;;28193:33;28173:54;;28255:2;28246:12;;28079:185;-1:-1;;28079:185;28273:319;;28433:67;28497:2;28492:3;28433:67;;;-1:-1;;;28513:42;;28583:2;28574:12;;28419:173;-1:-1;;28419:173;28601:330;;28761:67;28825:2;28820:3;28761:67;;;28861:32;28841:53;;28922:2;28913:12;;28747:184;-1:-1;;28747:184;28940:323;;29100:67;29164:2;29159:3;29100:67;;;29200:25;29180:46;;29254:2;29245:12;;29086:177;-1:-1;;29086:177;29272:322;;29432:67;29496:2;29491:3;29432:67;;;-1:-1;;;29512:45;;29585:2;29576:12;;29418:176;-1:-1;;29418:176;29603:325;;29763:67;29827:2;29822:3;29763:67;;;29863:27;29843:48;;29919:2;29910:12;;29749:179;-1:-1;;29749:179;29937:360;;30115:85;30197:2;30192:3;30115:85;;;30233:26;30213:47;;30288:2;30279:12;;30101:196;-1:-1;;30101:196;30306:326;;30466:67;30530:2;30525:3;30466:67;;;30566:28;30546:49;;30623:2;30614:12;;30452:180;-1:-1;;30452:180;30641:322;;30801:67;30865:2;30860:3;30801:67;;;-1:-1;;;30881:45;;30954:2;30945:12;;30787:176;-1:-1;;30787:176;30972:324;;31132:67;31196:2;31191:3;31132:67;;;31232:26;31212:47;;31287:2;31278:12;;31118:178;-1:-1;;31118:178;31305:312;;31465:67;31529:2;31524:3;31465:67;;;-1:-1;;;31545:35;;31608:2;31599:12;;31451:166;-1:-1;;31451:166;31626:327;;31786:67;31850:2;31845:3;31786:67;;;31886:29;31866:50;;31944:2;31935:12;;31772:181;-1:-1;;31772:181;31962:331;;32122:67;32186:2;32181:3;32122:67;;;32222:33;32202:54;;32284:2;32275:12;;32108:185;-1:-1;;32108:185;32302:328;;32462:67;32526:2;32521:3;32462:67;;;32562:30;32542:51;;32621:2;32612:12;;32448:182;-1:-1;;32448:182;32639:326;;32799:67;32863:2;32858:3;32799:67;;;32899:28;32879:49;;32956:2;32947:12;;32785:180;-1:-1;;32785:180;33060:863;33299:23;;33227:4;33218:14;;;33328:63;33222:3;33299:23;33328:63;;;33247:150;33487:4;33480:5;33476:16;33470:23;33499:63;33556:4;33551:3;33547:14;33533:12;33499:63;;;33407:161;33661:4;33654:5;33650:16;33644:23;33673:63;33730:4;33725:3;33721:14;33707:12;33673:63;;;33578:164;33833:4;33826:5;33822:16;33816:23;33845:57;33896:4;33891:3;33887:14;33873:12;33845:57;;34003:1513;34158:4;34149:14;;34228:58;34273:5;;34228:58;;;34292:79;34360:3;34342:12;34292:79;;;34178:199;34438:50;34482:4;34475:5;34471:16;34464:5;34438:50;;;34494:63;34551:4;34546:3;34542:14;34528:12;34494:63;;;34387:176;34631:50;34675:4;34668:5;34664:16;34657:5;34631:50;;;34687:63;34744:4;34739:3;34735:14;34721:12;34687:63;;;34573:183;34820:50;34864:4;34857:5;34853:16;34846:5;34820:50;;;34876:63;34933:4;34928:3;34924:14;34910:12;34876:63;;;34766:179;35003:50;35047:4;35040:5;35036:16;35029:5;35003:50;;;35059:63;35116:4;35111:3;35107:14;35093:12;35059:63;;;34955:173;35188:50;35232:4;35225:5;35221:16;35214:5;35188:50;;;35244:63;35301:4;35296:3;35292:14;35278:12;35244:63;;;35138:175;35376:50;35420:4;35413:5;35409:16;35402:5;35376:50;;;35432:63;35489:4;35484:3;35480:14;35466:12;35432:63;;35598:1572;35741:6;35732:16;;35811:50;35848:5;;35811:50;;;35867:63;35919:3;35901:12;35867:63;;;35763:173;36004:50;36048:4;36041:5;36037:16;36030:5;36004:50;;;36060:63;36117:4;36112:3;36108:14;36094:12;36060:63;;;35946:183;36193:50;36237:4;36230:5;36226:16;36219:5;36193:50;;;36249:63;36306:4;36301:3;36297:14;36283:12;36249:63;;;36139:179;36382:50;36426:4;36419:5;36415:16;36408:5;36382:50;;;36438:63;36495:4;36490:3;36486:14;36472:12;36438:63;;;36328:179;36574:50;36618:4;36611:5;36607:16;36600:5;36574:50;;;36630:63;36687:4;36682:3;36678:14;36664:12;36630:63;;;36517:182;36764:50;36808:4;36801:5;36797:16;36790:5;36764:50;;;36820:63;36877:4;36872:3;36868:14;36854:12;36820:63;;;36709:180;36950:76;37020:4;37013:5;37009:16;37002:5;36950:76;;;37032:117;37143:4;37138:3;37134:14;37120:12;37032:117;;37246:1151;37461:23;;37391:4;37382:14;;;37490:79;37386:3;37461:23;37490:79;;;37411:164;37653:4;37646:5;37642:16;37636:23;37665:63;37722:4;37717:3;37713:14;37699:12;37665:63;;;37585:149;37815:4;37808:5;37804:16;37798:23;37827:63;37884:4;37879:3;37875:14;37861:12;37827:63;;;37744:152;37980:4;37973:5;37969:16;37963:23;37992:63;38049:4;38044:3;38040:14;38026:12;37992:63;;;37906:155;38143:4;38136:5;38132:16;38126:23;38155:63;38212:4;38207:3;38203:14;38189:12;38155:63;;;38071:153;38301:4;38294:5;38290:16;38284:23;38313:63;38370:4;38365:3;38361:14;38347:12;38313:63;;38473:878;38610:4;38601:14;;38683:50;38720:5;;38683:50;;;38739:63;38791:3;38773:12;38739:63;;;38630:178;38861:48;38903:4;38896:5;38892:16;38885:5;38861:48;;;38915:59;38968:4;38963:3;38959:14;38945:12;38915:59;;;38818:162;39033:50;39077:4;39070:5;39066:16;39059:5;39033:50;;;39089:63;39146:4;39141:3;39137:14;39123:12;39089:63;;;38990:168;39211:50;39255:4;39248:5;39244:16;39237:5;39211:50;;;39267:63;39324:4;39319:3;39315:14;39301:12;39267:63;;39588:97;39657:22;39673:5;39657:22;;39692:372;;39891:148;40035:3;39891:148;;40071:372;;40270:148;40414:3;40270:148;;40450:213;40568:2;40553:18;;40582:71;40557:9;40626:6;40582:71;;40670:229;40796:2;40781:18;;40810:79;40785:9;40862:6;40810:79;;40906:451;41088:2;41073:18;;41102:79;41077:9;41154:6;41102:79;;;41192:72;41260:2;41249:9;41245:18;41236:6;41192:72;;;41275;41343:2;41332:9;41328:18;41319:6;41275:72;;41364:324;41510:2;41495:18;;41524:71;41499:9;41568:6;41524:71;;;41606:72;41674:2;41663:9;41659:18;41650:6;41606:72;;41695:435;41869:2;41854:18;;41883:71;41858:9;41927:6;41883:71;;;41965:72;42033:2;42022:9;42018:18;42009:6;41965:72;;42137:324;42283:2;42268:18;;42297:71;42272:9;42341:6;42297:71;;;42379:72;42447:2;42436:9;42432:18;42423:6;42379:72;;42468:361;42636:2;42650:47;;;42621:18;;42711:108;42621:18;42805:6;42711:108;;42836:201;42948:2;42933:18;;42962:65;42937:9;43000:6;42962:65;;43044:213;43162:2;43147:18;;43176:71;43151:9;43220:6;43176:71;;43264:273;43412:2;43397:18;;43426:101;43401:9;43500:6;43426:101;;44112:301;44250:2;44264:47;;;44235:18;;44325:78;44235:18;44389:6;44325:78;;44420:407;44611:2;44625:47;;;44596:18;;44686:131;44596:18;44686:131;;44834:407;45025:2;45039:47;;;45010:18;;45100:131;45010:18;45100:131;;45248:407;45439:2;45453:47;;;45424:18;;45514:131;45424:18;45514:131;;45662:407;45853:2;45867:47;;;45838:18;;45928:131;45838:18;45928:131;;46076:407;46267:2;46281:47;;;46252:18;;46342:131;46252:18;46342:131;;46490:407;46681:2;46695:47;;;46666:18;;46756:131;46666:18;46756:131;;46904:407;47095:2;47109:47;;;47080:18;;47170:131;47080:18;47170:131;;47318:407;47509:2;47523:47;;;47494:18;;47584:131;47494:18;47584:131;;47732:407;47923:2;47937:47;;;47908:18;;47998:131;47908:18;47998:131;;48146:407;48337:2;48351:47;;;48322:18;;48412:131;48322:18;48412:131;;48560:407;48751:2;48765:47;;;48736:18;;48826:131;48736:18;48826:131;;48974:407;49165:2;49179:47;;;49150:18;;49240:131;49150:18;49240:131;;49388:407;49579:2;49593:47;;;49564:18;;49654:131;49564:18;49654:131;;49802:407;49993:2;50007:47;;;49978:18;;50068:131;49978:18;50068:131;;50216:407;50407:2;50421:47;;;50392:18;;50482:131;50392:18;50482:131;;50630:407;50821:2;50835:47;;;50806:18;;50896:131;50806:18;50896:131;;51044:407;51235:2;51249:47;;;51220:18;;51310:131;51220:18;51310:131;;51458:407;51649:2;51663:47;;;51634:18;;51724:131;51634:18;51724:131;;51872:407;52063:2;52077:47;;;52048:18;;52138:131;52048:18;52138:131;;52286:407;52477:2;52491:47;;;52462:18;;52552:131;52462:18;52552:131;;52700:407;52891:2;52905:47;;;52876:18;;52966:131;52876:18;52966:131;;53114:407;53305:2;53319:47;;;53290:18;;53380:131;53290:18;53380:131;;53528:407;53719:2;53733:47;;;53704:18;;53794:131;53704:18;53794:131;;53942:407;54133:2;54147:47;;;54118:18;;54208:131;54118:18;54208:131;;54356:407;54547:2;54561:47;;;54532:18;;54622:131;54532:18;54622:131;;54770:407;54961:2;54975:47;;;54946:18;;55036:131;54946:18;55036:131;;55184:407;55375:2;55389:47;;;55360:18;;55450:131;55360:18;55450:131;;55598:407;55789:2;55803:47;;;55774:18;;55864:131;55774:18;55864:131;;56012:407;56203:2;56217:47;;;56188:18;;56278:131;56188:18;56278:131;;56426:407;56617:2;56631:47;;;56602:18;;56692:131;56602:18;56692:131;;56840:407;57031:2;57045:47;;;57016:18;;57106:131;57016:18;57106:131;;57254:407;57445:2;57459:47;;;57430:18;;57520:131;57430:18;57520:131;;57668:407;57859:2;57873:47;;;57844:18;;57934:131;57844:18;57934:131;;58082:407;58273:2;58287:47;;;58258:18;;58348:131;58258:18;58348:131;;58496:407;58687:2;58701:47;;;58672:18;;58762:131;58672:18;58762:131;;58910:362;59102:3;59087:19;;59117:145;59091:9;59235:6;59117:145;;59279:730;59603:3;59588:19;;59618:133;59592:9;59724:6;59618:133;;;59800:9;59794:4;59790:20;59784:3;59773:9;59769:19;59762:49;59825:174;59994:4;59985:6;59977;59825:174;;60236:324;60382:2;60367:18;;60396:71;60371:9;60440:6;60396:71;;60567:340;60721:2;60706:18;;60735:71;60710:9;60779:6;60735:71;;;60817:80;60893:2;60882:9;60878:18;60869:6;60817:80;;60914:451;61096:2;61081:18;;61110:71;61085:9;61154:6;61110:71;;;61192:80;61268:2;61257:9;61253:18;61244:6;61192:80;;61372:1569;61860:3;61845:19;;61875:71;61849:9;61919:6;61875:71;;;61957:124;62077:2;62066:9;62062:18;62053:6;61957:124;;;62092:73;62160:3;62149:9;62145:19;62136:6;62092:73;;;62176;62244:3;62233:9;62229:19;62220:6;62176:73;;;62260;62328:3;62317:9;62313:19;62304:6;62260:73;;;62344;62412:3;62401:9;62397:19;62388:6;62344:73;;;62428;62496:3;62485:9;62481:19;62472:6;62428:73;;;62512;62580:3;62569:9;62565:19;62556:6;62512:73;;;62596;62664:3;62653:9;62649:19;62640:6;62596:73;;;62680;62748:3;62737:9;62733:19;62724:6;62680:73;;;62764:88;62847:3;62836:9;62832:19;62822:7;62764:88;;;62863:68;62926:3;62915:9;62911:19;62901:7;62863:68;;;61831:1110;;;;;;;;;;;;;;;;62948:659;63178:3;63163:19;;63193:71;63167:9;63237:6;63193:71;;;63275:72;63343:2;63332:9;63328:18;63319:6;63275:72;;;63358;63426:2;63415:9;63411:18;63402:6;63358:72;;;63441;63509:2;63498:9;63494:18;63485:6;63441:72;;;63524:73;63592:3;63581:9;63577:19;63568:6;63524:73;;;63149:458;;;;;;;;;63614:256;63676:2;63670:9;63702:17;;;63777:18;63762:34;;63798:22;;;63759:62;63756:2;;;63834:1;63831;63824:12;63756:2;63850;63843:22;63654:216;;-1:-1;63654:216;64031:151;64155:4;64146:14;;64103:79;64189:137;64292:12;;64263:63;64462:141;64591:6;64582:16;;64568:35;64726:205;64871:19;;;64920:4;64911:14;;64864:67;65453:119;;65527:39;65562:2;65557:3;65553:12;65548:3;65527:39;;65725:119;;65799:39;65834:2;65829:3;65825:12;65820:3;65799:39;;66220:115;;66292:37;66325:2;66320:3;66316:12;66311:3;66292:37;;66343:91;;66405:24;66423:5;66405:24;;66547:85;66613:13;66606:21;;66589:43;66718:122;;66811:24;66829:5;66811:24;;67218:138;67296:5;67302:49;67296:5;67302:49;;67441:121;-1:-1;;;;;67503:54;;67486:76;67648:81;67719:4;67708:16;;67691:38;67736:129;;67823:37;67854:5;67823:37;;68883:138;;68976:40;69010:5;68976:40;;69272:268;69337:1;69344:101;69358:6;69355:1;69352:13;69344:101;;;69425:11;;;69419:18;69406:11;;;69399:39;69380:2;69373:10;69344:101;;;69460:6;69457:1;69454:13;69451:2;;;-1:-1;;69525:1;69507:16;;69500:27;69321:219;69548:97;69636:2;69616:14;-1:-1;;69612:28;;69596:49;69653:107;69738:1;69731:5;69728:12;69718:2;;69744:9;69767:117;69836:24;69854:5;69836:24;;;69829:5;69826:35;69816:2;;69875:1;69872;69865:12;70031:111;70097:21;70112:5;70097:21;;70149:117;70218:24;70236:5;70218:24;;70273:179;70373:55;70422:5;70373:55;;70985:110;71070:1;71063:5;71060:12;71050:2;;71086:1;71083;71076:12;71348:113;71415:22;71431:5;71415:22;",
  "source": "pragma solidity 0.5.17;\npragma experimental ABIEncoderV2;\n\nimport \"../../base/TokenCollateralLoans.sol\";\n\ncontract TokenCollateralLoansMock is TokenCollateralLoans {\n    bool public mockTokenFunctions;\n\n    function setMockTokenFunctions(bool newMockTokenFunctions) external {\n        mockTokenFunctions = newMockTokenFunctions;\n    }\n\n    function setLoanIDCounter(uint256 newLoanIdCounter) external {\n        loanIDCounter = newLoanIdCounter;\n    }\n\n    function setBorrowerLoans(address borrower, uint256[] calldata loanIDs) external {\n        borrowerLoans[borrower] = loanIDs;\n    }\n\n    function setTotalCollateral(uint256 amount) external {\n        totalCollateral = amount;\n    }\n\n    function setLoan(\n        uint256 id,\n        TellerCommon.LoanTerms calldata loanTerms,\n        uint256 termsExpiry,\n        uint256 loanStartTime,\n        uint256 collateral,\n        uint256 lastCollateralIn,\n        uint256 principalOwed,\n        uint256 interestOwed,\n        uint256 borrowedAmount,\n        TellerCommon.LoanStatus status,\n        bool liquidated\n    ) external {\n        require(loanTerms.maxLoanAmount >= borrowedAmount, \"BORROWED_AMOUNT_EXCEEDS_MAX\");\n        totalCollateral += collateral;\n        loans[id] = TellerCommon.Loan({\n            id: id,\n            loanTerms: loanTerms,\n            termsExpiry: termsExpiry,\n            loanStartTime: loanStartTime,\n            collateral: collateral,\n            lastCollateralIn: lastCollateralIn,\n            principalOwed: principalOwed,\n            interestOwed: interestOwed,\n            borrowedAmount: borrowedAmount,\n            escrow: address(0x0),\n            status: status,\n            liquidated: liquidated\n        });\n    }\n\n    function _collateralTokenTransfer(address recipient, uint256 amount) internal {\n        if (!mockTokenFunctions) {\n            super._collateralTokenTransfer(recipient, amount);\n        }\n    }\n\n    function _collateralTokenTransferFrom(address from, uint256 amount) internal {\n        if (!mockTokenFunctions) {\n            super._collateralTokenTransferFrom(from, amount);\n        }\n    }\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/TokenCollateralLoansMock.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/TokenCollateralLoansMock.sol",
    "exportedSymbols": {
      "TokenCollateralLoansMock": [
        12940
      ]
    },
    "id": 12941,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12790,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:70"
      },
      {
        "id": 12791,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:70"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
        "file": "../../base/TokenCollateralLoans.sol",
        "id": 12792,
        "nodeType": "ImportDirective",
        "scope": 12941,
        "sourceUnit": 9207,
        "src": "59:45:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12793,
              "name": "TokenCollateralLoans",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9206,
              "src": "143:20:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenCollateralLoans_$9206",
                "typeString": "contract TokenCollateralLoans"
              }
            },
            "id": 12794,
            "nodeType": "InheritanceSpecifier",
            "src": "143:20:70"
          }
        ],
        "contractDependencies": [
          2343,
          2634,
          6826,
          8853,
          9206,
          10469,
          20866,
          20935
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12940,
        "linearizedBaseContracts": [
          12940,
          9206,
          6826,
          2343,
          20866,
          20935,
          2634,
          8853,
          10469
        ],
        "name": "TokenCollateralLoansMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12796,
            "name": "mockTokenFunctions",
            "nodeType": "VariableDeclaration",
            "scope": 12940,
            "src": "170:30:70",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12795,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "170:4:70",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12805,
              "nodeType": "Block",
              "src": "275:59:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12801,
                      "name": "mockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "285:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12802,
                      "name": "newMockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12798,
                      "src": "306:21:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "285:42:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12804,
                  "nodeType": "ExpressionStatement",
                  "src": "285:42:70"
                }
              ]
            },
            "documentation": null,
            "id": 12806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMockTokenFunctions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12798,
                  "name": "newMockTokenFunctions",
                  "nodeType": "VariableDeclaration",
                  "scope": 12806,
                  "src": "238:26:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12797,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "237:28:70"
            },
            "returnParameters": {
              "id": 12800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:0:70"
            },
            "scope": 12940,
            "src": "207:127:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12815,
              "nodeType": "Block",
              "src": "401:49:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12811,
                      "name": "loanIDCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5424,
                      "src": "411:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12812,
                      "name": "newLoanIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12808,
                      "src": "427:16:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "411:32:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12814,
                  "nodeType": "ExpressionStatement",
                  "src": "411:32:70"
                }
              ]
            },
            "documentation": null,
            "id": 12816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLoanIDCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12808,
                  "name": "newLoanIdCounter",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "366:24:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "365:26:70"
            },
            "returnParameters": {
              "id": 12810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:0:70"
            },
            "scope": 12940,
            "src": "340:110:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12830,
              "nodeType": "Block",
              "src": "537:50:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12824,
                        "name": "borrowerLoans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5435,
                        "src": "547:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(address => uint256[] storage ref)"
                        }
                      },
                      "id": 12826,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12825,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12818,
                        "src": "561:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "547:23:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12827,
                      "name": "loanIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12821,
                      "src": "573:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "src": "547:33:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 12829,
                  "nodeType": "ExpressionStatement",
                  "src": "547:33:70"
                }
              ]
            },
            "documentation": null,
            "id": 12831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBorrowerLoans",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12818,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 12831,
                  "src": "482:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12821,
                  "name": "loanIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 12831,
                  "src": "500:26:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12819,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "500:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12820,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "500:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:46:70"
            },
            "returnParameters": {
              "id": 12823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:70"
            },
            "scope": 12940,
            "src": "456:131:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12840,
              "nodeType": "Block",
              "src": "646:41:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12836,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "656:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12837,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12833,
                      "src": "674:6:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "656:24:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12839,
                  "nodeType": "ExpressionStatement",
                  "src": "656:24:70"
                }
              ]
            },
            "documentation": null,
            "id": 12841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12833,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12841,
                  "src": "621:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "620:16:70"
            },
            "returnParameters": {
              "id": 12835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:70"
            },
            "scope": 12940,
            "src": "593:94:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12900,
              "nodeType": "Block",
              "src": "1076:630:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12867,
                            "name": "loanTerms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12845,
                            "src": "1094:9:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanTerms calldata"
                            }
                          },
                          "id": 12868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxLoanAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17507,
                          "src": "1094:23:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12869,
                          "name": "borrowedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12859,
                          "src": "1121:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1094:41:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745445f414d4f554e545f455843454544535f4d4158",
                        "id": 12871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1137:29:70",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52cb7994d1acba84e6ffb3a909d905b981718d0cbbad51dfbc9654a1b66f89b0",
                          "typeString": "literal_string \"BORROWED_AMOUNT_EXCEEDS_MAX\""
                        },
                        "value": "BORROWED_AMOUNT_EXCEEDS_MAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52cb7994d1acba84e6ffb3a909d905b981718d0cbbad51dfbc9654a1b66f89b0",
                          "typeString": "literal_string \"BORROWED_AMOUNT_EXCEEDS_MAX\""
                        }
                      ],
                      "id": 12866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1086:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:81:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12873,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:81:70"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12874,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "1177:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12875,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12851,
                      "src": "1196:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1177:29:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12877,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:29:70"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12878,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5439,
                        "src": "1216:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 12880,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12879,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12843,
                        "src": "1222:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1216:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12883,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12843,
                          "src": "1264:2:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12884,
                          "name": "loanTerms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12845,
                          "src": "1291:9:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanTerms calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12885,
                          "name": "termsExpiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12847,
                          "src": "1327:11:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12886,
                          "name": "loanStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12849,
                          "src": "1367:13:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12887,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12851,
                          "src": "1406:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12888,
                          "name": "lastCollateralIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12853,
                          "src": "1448:16:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12889,
                          "name": "principalOwed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12855,
                          "src": "1493:13:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12890,
                          "name": "interestOwed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12857,
                          "src": "1534:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12891,
                          "name": "borrowedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12859,
                          "src": "1576:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 12893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1620:3:70",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1612:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 12894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12895,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12861,
                          "src": "1646:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LoanStatus_$17420",
                            "typeString": "enum TellerCommon.LoanStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12896,
                          "name": "liquidated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12863,
                          "src": "1678:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanTerms calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_enum$_LoanStatus_$17420",
                            "typeString": "enum TellerCommon.LoanStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 12881,
                          "name": "TellerCommon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17588,
                          "src": "1228:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TellerCommon_$17588_$",
                            "typeString": "type(library TellerCommon)"
                          }
                        },
                        "id": 12882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17535,
                        "src": "1228:17:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Loan_$17535_storage_ptr_$",
                          "typeString": "type(struct TellerCommon.Loan storage pointer)"
                        }
                      },
                      "id": 12897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "id",
                        "loanTerms",
                        "termsExpiry",
                        "loanStartTime",
                        "collateral",
                        "lastCollateralIn",
                        "principalOwed",
                        "interestOwed",
                        "borrowedAmount",
                        "escrow",
                        "status",
                        "liquidated"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1228:471:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_memory",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "1216:483:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17535_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 12899,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:483:70"
                }
              ]
            },
            "documentation": null,
            "id": 12901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12843,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "719:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12845,
                  "name": "loanTerms",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "739:41:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanTerms"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12844,
                    "name": "TellerCommon.LoanTerms",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17510,
                    "src": "739:22:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanTerms_$17510_storage_ptr",
                      "typeString": "struct TellerCommon.LoanTerms"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12847,
                  "name": "termsExpiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "790:19:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12849,
                  "name": "loanStartTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "819:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12851,
                  "name": "collateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "850:18:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12853,
                  "name": "lastCollateralIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "878:24:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12855,
                  "name": "principalOwed",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "912:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12857,
                  "name": "interestOwed",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "943:20:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12859,
                  "name": "borrowedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "973:22:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12861,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "1005:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_LoanStatus_$17420",
                    "typeString": "enum TellerCommon.LoanStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12860,
                    "name": "TellerCommon.LoanStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17420,
                    "src": "1005:23:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LoanStatus_$17420",
                      "typeString": "enum TellerCommon.LoanStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12863,
                  "name": "liquidated",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "1045:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12862,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "709:357:70"
            },
            "returnParameters": {
              "id": 12865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:0:70"
            },
            "scope": 12940,
            "src": "693:1013:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12919,
              "nodeType": "Block",
              "src": "1790:115:70",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1804:19:70",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 12908,
                      "name": "mockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "1805:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12918,
                  "nodeType": "IfStatement",
                  "src": "1800:99:70",
                  "trueBody": {
                    "id": 12917,
                    "nodeType": "Block",
                    "src": "1825:74:70",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12913,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12903,
                              "src": "1870:9:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 12914,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12905,
                              "src": "1881:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12910,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21158,
                              "src": "1839:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TokenCollateralLoansMock_$12940",
                                "typeString": "contract super TokenCollateralLoansMock"
                              }
                            },
                            "id": 12912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_collateralTokenTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9189,
                            "src": "1839:30:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 12915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:49:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12916,
                        "nodeType": "ExpressionStatement",
                        "src": "1839:49:70"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 12920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12903,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 12920,
                  "src": "1746:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12905,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12920,
                  "src": "1765:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1745:35:70"
            },
            "returnParameters": {
              "id": 12907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:70"
            },
            "scope": 12940,
            "src": "1712:193:70",
            "stateMutability": "nonpayable",
            "superFunction": 9189,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12938,
              "nodeType": "Block",
              "src": "1988:114:70",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2002:19:70",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 12927,
                      "name": "mockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "2003:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12937,
                  "nodeType": "IfStatement",
                  "src": "1998:98:70",
                  "trueBody": {
                    "id": 12936,
                    "nodeType": "Block",
                    "src": "2023:73:70",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12932,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12922,
                              "src": "2072:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 12933,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12924,
                              "src": "2078:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12929,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21158,
                              "src": "2037:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TokenCollateralLoansMock_$12940",
                                "typeString": "contract super TokenCollateralLoansMock"
                              }
                            },
                            "id": 12931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_collateralTokenTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9205,
                            "src": "2037:34:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 12934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:48:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12935,
                        "nodeType": "ExpressionStatement",
                        "src": "2037:48:70"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 12939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12922,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 12939,
                  "src": "1949:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12924,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12939,
                  "src": "1963:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1948:30:70"
            },
            "returnParameters": {
              "id": 12926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:0:70"
            },
            "scope": 12940,
            "src": "1911:191:70",
            "stateMutability": "nonpayable",
            "superFunction": 9205,
            "visibility": "internal"
          }
        ],
        "scope": 12941,
        "src": "106:1998:70"
      }
    ],
    "src": "0:2105:70"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/TokenCollateralLoansMock.sol",
    "exportedSymbols": {
      "TokenCollateralLoansMock": [
        12940
      ]
    },
    "id": 12941,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12790,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:70"
      },
      {
        "id": 12791,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:70"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/TokenCollateralLoans.sol",
        "file": "../../base/TokenCollateralLoans.sol",
        "id": 12792,
        "nodeType": "ImportDirective",
        "scope": 12941,
        "sourceUnit": 9207,
        "src": "59:45:70",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12793,
              "name": "TokenCollateralLoans",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9206,
              "src": "143:20:70",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenCollateralLoans_$9206",
                "typeString": "contract TokenCollateralLoans"
              }
            },
            "id": 12794,
            "nodeType": "InheritanceSpecifier",
            "src": "143:20:70"
          }
        ],
        "contractDependencies": [
          2343,
          2634,
          6826,
          8853,
          9206,
          10469,
          20866,
          20935
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12940,
        "linearizedBaseContracts": [
          12940,
          9206,
          6826,
          2343,
          20866,
          20935,
          2634,
          8853,
          10469
        ],
        "name": "TokenCollateralLoansMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 12796,
            "name": "mockTokenFunctions",
            "nodeType": "VariableDeclaration",
            "scope": 12940,
            "src": "170:30:70",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12795,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "170:4:70",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12805,
              "nodeType": "Block",
              "src": "275:59:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12801,
                      "name": "mockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "285:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12802,
                      "name": "newMockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12798,
                      "src": "306:21:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "285:42:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12804,
                  "nodeType": "ExpressionStatement",
                  "src": "285:42:70"
                }
              ]
            },
            "documentation": null,
            "id": 12806,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setMockTokenFunctions",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12798,
                  "name": "newMockTokenFunctions",
                  "nodeType": "VariableDeclaration",
                  "scope": 12806,
                  "src": "238:26:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12797,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "237:28:70"
            },
            "returnParameters": {
              "id": 12800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "275:0:70"
            },
            "scope": 12940,
            "src": "207:127:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12815,
              "nodeType": "Block",
              "src": "401:49:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12813,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12811,
                      "name": "loanIDCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5424,
                      "src": "411:13:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12812,
                      "name": "newLoanIdCounter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12808,
                      "src": "427:16:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "411:32:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12814,
                  "nodeType": "ExpressionStatement",
                  "src": "411:32:70"
                }
              ]
            },
            "documentation": null,
            "id": 12816,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLoanIDCounter",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12808,
                  "name": "newLoanIdCounter",
                  "nodeType": "VariableDeclaration",
                  "scope": 12816,
                  "src": "366:24:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12807,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "365:26:70"
            },
            "returnParameters": {
              "id": 12810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "401:0:70"
            },
            "scope": 12940,
            "src": "340:110:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12830,
              "nodeType": "Block",
              "src": "537:50:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12824,
                        "name": "borrowerLoans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5435,
                        "src": "547:13:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
                          "typeString": "mapping(address => uint256[] storage ref)"
                        }
                      },
                      "id": 12826,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12825,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12818,
                        "src": "561:8:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "547:23:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12827,
                      "name": "loanIDs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12821,
                      "src": "573:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                        "typeString": "uint256[] calldata"
                      }
                    },
                    "src": "547:33:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                      "typeString": "uint256[] storage ref"
                    }
                  },
                  "id": 12829,
                  "nodeType": "ExpressionStatement",
                  "src": "547:33:70"
                }
              ]
            },
            "documentation": null,
            "id": 12831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBorrowerLoans",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12818,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 12831,
                  "src": "482:16:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "482:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12821,
                  "name": "loanIDs",
                  "nodeType": "VariableDeclaration",
                  "scope": 12831,
                  "src": "500:26:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 12819,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "500:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 12820,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "500:9:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "481:46:70"
            },
            "returnParameters": {
              "id": 12823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:70"
            },
            "scope": 12940,
            "src": "456:131:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12840,
              "nodeType": "Block",
              "src": "646:41:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12836,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "656:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12837,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12833,
                      "src": "674:6:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "656:24:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12839,
                  "nodeType": "ExpressionStatement",
                  "src": "656:24:70"
                }
              ]
            },
            "documentation": null,
            "id": 12841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTotalCollateral",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12833,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12841,
                  "src": "621:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "620:16:70"
            },
            "returnParameters": {
              "id": 12835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "646:0:70"
            },
            "scope": 12940,
            "src": "593:94:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12900,
              "nodeType": "Block",
              "src": "1076:630:70",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 12870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 12867,
                            "name": "loanTerms",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12845,
                            "src": "1094:9:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                              "typeString": "struct TellerCommon.LoanTerms calldata"
                            }
                          },
                          "id": 12868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxLoanAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 17507,
                          "src": "1094:23:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 12869,
                          "name": "borrowedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12859,
                          "src": "1121:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1094:41:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "424f52524f5745445f414d4f554e545f455843454544535f4d4158",
                        "id": 12871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1137:29:70",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_52cb7994d1acba84e6ffb3a909d905b981718d0cbbad51dfbc9654a1b66f89b0",
                          "typeString": "literal_string \"BORROWED_AMOUNT_EXCEEDS_MAX\""
                        },
                        "value": "BORROWED_AMOUNT_EXCEEDS_MAX"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_52cb7994d1acba84e6ffb3a909d905b981718d0cbbad51dfbc9654a1b66f89b0",
                          "typeString": "literal_string \"BORROWED_AMOUNT_EXCEEDS_MAX\""
                        }
                      ],
                      "id": 12866,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        21068,
                        21069
                      ],
                      "referencedDeclaration": 21069,
                      "src": "1086:7:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1086:81:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12873,
                  "nodeType": "ExpressionStatement",
                  "src": "1086:81:70"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12874,
                      "name": "totalCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5420,
                      "src": "1177:15:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12875,
                      "name": "collateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12851,
                      "src": "1196:10:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1177:29:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 12877,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:29:70"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 12878,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5439,
                        "src": "1216:5:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Loan_$17535_storage_$",
                          "typeString": "mapping(uint256 => struct TellerCommon.Loan storage ref)"
                        }
                      },
                      "id": 12880,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 12879,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12843,
                        "src": "1222:2:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1216:9:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_storage",
                        "typeString": "struct TellerCommon.Loan storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 12883,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12843,
                          "src": "1264:2:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12884,
                          "name": "loanTerms",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12845,
                          "src": "1291:9:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanTerms calldata"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12885,
                          "name": "termsExpiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12847,
                          "src": "1327:11:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12886,
                          "name": "loanStartTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12849,
                          "src": "1367:13:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12887,
                          "name": "collateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12851,
                          "src": "1406:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12888,
                          "name": "lastCollateralIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12853,
                          "src": "1448:16:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12889,
                          "name": "principalOwed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12855,
                          "src": "1493:13:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12890,
                          "name": "interestOwed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12857,
                          "src": "1534:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12891,
                          "name": "borrowedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12859,
                          "src": "1576:14:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 12893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1620:3:70",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 12892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1612:7:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 12894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1612:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12895,
                          "name": "status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12861,
                          "src": "1646:6:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_LoanStatus_$17420",
                            "typeString": "enum TellerCommon.LoanStatus"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 12896,
                          "name": "liquidated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12863,
                          "src": "1678:10:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                            "typeString": "struct TellerCommon.LoanTerms calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_enum$_LoanStatus_$17420",
                            "typeString": "enum TellerCommon.LoanStatus"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 12881,
                          "name": "TellerCommon",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17588,
                          "src": "1228:12:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_TellerCommon_$17588_$",
                            "typeString": "type(library TellerCommon)"
                          }
                        },
                        "id": 12882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "Loan",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 17535,
                        "src": "1228:17:70",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Loan_$17535_storage_ptr_$",
                          "typeString": "type(struct TellerCommon.Loan storage pointer)"
                        }
                      },
                      "id": 12897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "id",
                        "loanTerms",
                        "termsExpiry",
                        "loanStartTime",
                        "collateral",
                        "lastCollateralIn",
                        "principalOwed",
                        "interestOwed",
                        "borrowedAmount",
                        "escrow",
                        "status",
                        "liquidated"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1228:471:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Loan_$17535_memory",
                        "typeString": "struct TellerCommon.Loan memory"
                      }
                    },
                    "src": "1216:483:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Loan_$17535_storage",
                      "typeString": "struct TellerCommon.Loan storage ref"
                    }
                  },
                  "id": 12899,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:483:70"
                }
              ]
            },
            "documentation": null,
            "id": 12901,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12864,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12843,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "719:10:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12845,
                  "name": "loanTerms",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "739:41:70",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LoanTerms_$17510_calldata_ptr",
                    "typeString": "struct TellerCommon.LoanTerms"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12844,
                    "name": "TellerCommon.LoanTerms",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17510,
                    "src": "739:22:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LoanTerms_$17510_storage_ptr",
                      "typeString": "struct TellerCommon.LoanTerms"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12847,
                  "name": "termsExpiry",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "790:19:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12846,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "790:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12849,
                  "name": "loanStartTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "819:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12848,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12851,
                  "name": "collateral",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "850:18:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12850,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "850:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12853,
                  "name": "lastCollateralIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "878:24:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "878:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12855,
                  "name": "principalOwed",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "912:21:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12857,
                  "name": "interestOwed",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "943:20:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12856,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12859,
                  "name": "borrowedAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "973:22:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "973:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12861,
                  "name": "status",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "1005:30:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_LoanStatus_$17420",
                    "typeString": "enum TellerCommon.LoanStatus"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12860,
                    "name": "TellerCommon.LoanStatus",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 17420,
                    "src": "1005:23:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_LoanStatus_$17420",
                      "typeString": "enum TellerCommon.LoanStatus"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12863,
                  "name": "liquidated",
                  "nodeType": "VariableDeclaration",
                  "scope": 12901,
                  "src": "1045:15:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12862,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:4:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "709:357:70"
            },
            "returnParameters": {
              "id": 12865,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1076:0:70"
            },
            "scope": 12940,
            "src": "693:1013:70",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12919,
              "nodeType": "Block",
              "src": "1790:115:70",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1804:19:70",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 12908,
                      "name": "mockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "1805:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12918,
                  "nodeType": "IfStatement",
                  "src": "1800:99:70",
                  "trueBody": {
                    "id": 12917,
                    "nodeType": "Block",
                    "src": "1825:74:70",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12913,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12903,
                              "src": "1870:9:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 12914,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12905,
                              "src": "1881:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12910,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21158,
                              "src": "1839:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TokenCollateralLoansMock_$12940",
                                "typeString": "contract super TokenCollateralLoansMock"
                              }
                            },
                            "id": 12912,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_collateralTokenTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9189,
                            "src": "1839:30:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 12915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1839:49:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12916,
                        "nodeType": "ExpressionStatement",
                        "src": "1839:49:70"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 12920,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12903,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 12920,
                  "src": "1746:17:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12905,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12920,
                  "src": "1765:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1765:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1745:35:70"
            },
            "returnParameters": {
              "id": 12907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:70"
            },
            "scope": 12940,
            "src": "1712:193:70",
            "stateMutability": "nonpayable",
            "superFunction": 9189,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12938,
              "nodeType": "Block",
              "src": "1988:114:70",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2002:19:70",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 12927,
                      "name": "mockTokenFunctions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12796,
                      "src": "2003:18:70",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12937,
                  "nodeType": "IfStatement",
                  "src": "1998:98:70",
                  "trueBody": {
                    "id": 12936,
                    "nodeType": "Block",
                    "src": "2023:73:70",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12932,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12922,
                              "src": "2072:4:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 12933,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12924,
                              "src": "2078:6:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 12929,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21158,
                              "src": "2037:5:70",
                              "typeDescriptions": {
                                "typeIdentifier": "t_super$_TokenCollateralLoansMock_$12940",
                                "typeString": "contract super TokenCollateralLoansMock"
                              }
                            },
                            "id": 12931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_collateralTokenTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9205,
                            "src": "2037:34:70",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 12934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:48:70",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12935,
                        "nodeType": "ExpressionStatement",
                        "src": "2037:48:70"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 12939,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_collateralTokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12922,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 12939,
                  "src": "1949:12:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1949:7:70",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12924,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 12939,
                  "src": "1963:14:70",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1963:7:70",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1948:30:70"
            },
            "returnParameters": {
              "id": 12926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1988:0:70"
            },
            "scope": 12940,
            "src": "1911:191:70",
            "stateMutability": "nonpayable",
            "superFunction": 9205,
            "visibility": "internal"
          }
        ],
        "scope": 12941,
        "src": "106:1998:70"
      }
    ],
    "src": "0:2105:70"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-16T17:44:36.725Z",
  "devdoc": {
    "methods": {
      "cToken()": {
        "return": "Address of the cToken"
      },
      "canLiquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to check"
        },
        "return": "bool weather the loan can be liquidated"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "params": {
          "collateralAmount": "Amount of collateral required for the loan",
          "request": "Struct of the protocol loan request",
          "responses": "List of structs of the protocol loan responses"
        }
      },
      "depositCollateral(address,uint256,uint256)": {
        "params": {
          "amount": "The amount to deposit as collateral.",
          "borrower": "The address of the loan borrower.",
          "loanID": "The ID of the loan the collateral is for"
        }
      },
      "getBorrowerLoans(address)": {
        "params": {
          "borrower": "The borrower's address"
        }
      },
      "getCollateralInfo(uint256)": {
        "params": {
          "loanID": "of the loan to get info for"
        },
        "return": "memory TellerCommon.LoanCollateralInfo Collateral information of the loan"
      },
      "getTotalOwed(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be queried"
        },
        "return": "uint256 The total amount owed remaining"
      },
      "initialize(address,address,address,address,address)": {
        "params": {
          "collateralTokenAddress": "Contract address for the collateral token.",
          "lendingPoolAddress": "Contract address of the lending pool",
          "loanTermsConsensusAddress": "Contract adddress for loan term consensus",
          "priceOracleAddress": "Contract address of the price oracle",
          "settingsAddress": "Contract address for the configuration of the platform"
        }
      },
      "initialized()": {
        "return": "true if contract is initialized. Otherwise it returns false."
      },
      "lendingToken()": {
        "return": "Address of the lending token"
      },
      "liquidateLoan(uint256)": {
        "params": {
          "loanID": "The ID of the loan to be liquidated"
        }
      },
      "repay(uint256,uint256)": {
        "params": {
          "amount": "The amount of tokens to pay back to the loan",
          "loanID": "The ID of the loan the payment is for"
        }
      },
      "setPriceOracle(address)": {
        "details": "It throws a require error if sender is not allowed.It throws a require error if new address is empty (0x0) or not a contract.",
        "params": {
          "newPriceOracle": "the new price oracle address."
        }
      },
      "settings()": {
        "details": "This address should NOT change over the time. See details in the _setSettings(...) function."
      },
      "tToken()": {
        "return": "Address of the tToken"
      },
      "takeOutLoan(uint256,uint256)": {
        "details": "collateral ratio is a percentage of the loan amount that's required in collateralthe percentage will be *(10**2). I.e. collateralRatio of 5244 means 52.44% collateralis required in the loan. Interest rate is also a percentage with 2 decimal points."
      },
      "withdrawCollateral(uint256,uint256)": {
        "params": {
          "amount": "The amount of collateral token or ether the caller is hoping to withdraw.",
          "loanID": "The ID of the loan the collateral is for"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "cToken()": {
        "notice": "Returns the cToken in the lending pool"
      },
      "canLiquidateLoan(uint256)": {
        "notice": "A loan can be liquidated if it is: under collateralized or expired"
      },
      "createLoanWithTerms((address,address,address,uint256,uint256,uint256,uint256),(address,address,uint256,uint256,uint256,uint256,(uint256,uint8,bytes32,bytes32))[],uint256)": {
        "notice": "Creates a loan with the loan request and terms"
      },
      "depositCollateral(address,uint256,uint256)": {
        "notice": "Deposit collateral tokens into a loan."
      },
      "getBorrowerLoans(address)": {
        "notice": "Get a list of all loans for a borrower"
      },
      "getCollateralInfo(uint256)": {
        "notice": "Get collateral information of a specific loan"
      },
      "getTotalOwed(uint256)": {
        "notice": "Returns the total owed amount remaining for a specified loan"
      },
      "initialize(address,address,address,address,address)": {
        "notice": "Initializes the current contract instance setting the required parameters, if allowed"
      },
      "initialized()": {
        "notice": "Gets if the contract is initialized."
      },
      "lendingToken()": {
        "notice": "Returns the lending token in the lending pool"
      },
      "liquidateLoan(uint256)": {
        "notice": "Liquidate a loan if it is expired or under collateralized"
      },
      "repay(uint256,uint256)": {
        "notice": "Make a payment to a loan"
      },
      "setPriceOracle(address)": {
        "notice": "Updates the current price oracle instance."
      },
      "settings()": {
        "notice": "The gets the settings contract address from the SETTINGS_SLOT."
      },
      "tToken()": {
        "notice": "Returns the tToken in the lending pool"
      },
      "takeOutLoan(uint256,uint256)": {
        "notice": "Take out a loan"
      },
      "withdrawCollateral(uint256,uint256)": {
        "notice": "Withdraw collateral from a loan, unless this isn't allowed"
      }
    }
  }
}