{
  "contractName": "LendingPool",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenWithdrawn",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lenders",
      "outputs": [
        {
          "internalType": "contract LendersInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lendingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "loans",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "zToken",
      "outputs": [
        {
          "internalType": "contract ZTokenInterface",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "zTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendingTokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "lendersAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "loansAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "repay",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "liquidationPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "createLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawInterest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentLiquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenWithdrawn\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"createLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"zTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"lendersAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loansAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lenders\",\"outputs\":[{\"internalType\":\"contract LendersInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lendingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"liquidationPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"loans\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInterest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"zToken\",\"outputs\":[{\"internalType\":\"contract ZTokenInterface\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createLoan(uint256,address)\":{\"details\":\"This function only can be invoked by the LoansInterface implementation.\",\"params\":{\"amount\":\"of tokens to transfer.\",\"borrower\":\"address which will receive the tokens.\"}},\"deposit(uint256)\":{\"details\":\"the user must call ERC20.approve function previously.\",\"params\":{\"amount\":\"of tokens to deposit in the pool.\"}},\"initialize(address,address,address,address)\":{\"details\":\"It throws a require error if the contract is already initialized.\",\"params\":{\"lendersAddress\":\"Lenders contract address.\",\"lendingTokenAddress\":\"ERC20 token address.\",\"loansAddress\":\"Loans contract address.\",\"zTokenAddress\":\"zToken token address.\"}},\"liquidationPayment(uint256,address)\":{\"params\":{\"amount\":\"of tokens to liquidate.\",\"liquidator\":\"address to receive the tokens.\"}},\"repay(uint256,address)\":{\"details\":\"This function can be called ONLY by the Loans contract.It requires a ERC20.approve call before calling it.It throws a require error if borrower called ERC20.approve function before calling it.\",\"params\":{\"amount\":\"of tokens.\",\"borrower\":\"address that is repaying the loan.\"}},\"withdraw(uint256)\":{\"params\":{\"amount\":\"of tokens to withdraw.\"}}}},\"userdoc\":{\"methods\":{\"createLoan(uint256,address)\":{\"notice\":\"Once the loan is created, it transfers the amount of tokens to the borrower.\"},\"deposit(uint256)\":{\"notice\":\"It allows users to deposit tokens into the pool.\"},\"initialize(address,address,address,address)\":{\"notice\":\"It initializes the contract state variables.\"},\"liquidationPayment(uint256,address)\":{\"notice\":\"Once a loan is liquidated, it transfers the amount in tokens to the liquidator address.\"},\"repay(uint256,address)\":{\"notice\":\"It allows a borrower repaying their loan. \"},\"withdraw(uint256)\":{\"notice\":\"It allows any zToken holder to burn their zToken tokens and withdraw their tokens.\"}},\"notice\":\"The LendingPool contract holds all of the tokens that lenders transfer into the protocol. It is the contract that lenders interact with to deposit and withdraw their tokens including interest. The LendingPool interacts with the Lenders contract to ensure token balances and interest owed is kept up to date.\"}},\"settings\":{\"compilationTarget\":{\"/home/jalil/Programs/zero-collateral-v1/contracts/base/LendingPool.sol\":\"LendingPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/jalil/Programs/zero-collateral-v1/contracts/base/Initializable.sol\":{\"keccak256\":\"0x1fd448302b86668c2b0517e852fb9443e00ed737956631b100de342a1eaf4c01\",\"urls\":[\"bzz-raw://015578b3be5e99a4603edbbab6e01945b80c36a76b13d8d008bdc015f58253a8\",\"dweb:/ipfs/QmYmzCHe6hrPZGFqmH5xTUrmuosebh9eb6kFMzkwB7F9yu\"]},\"/home/jalil/Programs/zero-collateral-v1/contracts/base/LendingPool.sol\":{\"keccak256\":\"0x5ae10d168bb331b041856b3f77134b52a497b44928268d5612394afcfa850418\",\"urls\":[\"bzz-raw://074d1860975e31f22caf7564e0270aff131f70ae3b6fa588c8eba8ba0cb56a2b\",\"dweb:/ipfs/QmWR9ZM8wSdgz6iz8fNvR1faZVUsqG6HQrp6NtHqUxyqPG\"]},\"/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/LendersInterface.sol\":{\"keccak256\":\"0x57b39641667663a04455dafd9df146917b63304515d5d248f573d35b50eee34c\",\"urls\":[\"bzz-raw://ddde9aaca4809133ca078271be065d7fc9c3fb9398e4f08345d4bc7aec1d7b7d\",\"dweb:/ipfs/QmRj6UHbYS8VER2gynZ1Sp3URxZXB2BaCNvRKBBeoS6vde\"]},\"/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/LendingPoolInterface.sol\":{\"keccak256\":\"0x7cb76f0bd2972f8acb94140c764bfe944d04188777d299e8565fe37fe7ec10d0\",\"urls\":[\"bzz-raw://d5be264aa09629839667fb48d44a7c193db8dad89d48ed9a6b9cb2dc6b1a32f3\",\"dweb:/ipfs/QmajzEgCFApVTdFfTCP7D72XjJfvmYcy5Daqr54BBwA16R\"]},\"/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/ZTokenInterface.sol\":{\"keccak256\":\"0x3af6e8d7f23adc0115e9cff416cba9485e925f26e3645f964e820a8962a013af\",\"urls\":[\"bzz-raw://edede8bf4b2f689da90f2db6e696d33aa976ed558b7fa64c8914943703db9441\",\"dweb:/ipfs/QmWSYxVYnVaAw7v13Qu48V4Ftd62mCU9PkrADgDLveoFZo\"]},\"/home/jalil/Programs/zero-collateral-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x239ab28ed01d6958b8de9cb7ccaa3e27105e132265960b12a6a4b7da43246100\",\"urls\":[\"bzz-raw://7b72f8ca0dc56dfb31fb4e6fae0e0fef9012dd0835788cd87252a558247c7c65\",\"dweb:/ipfs/QmSzKcxVJ8TEjUb1kCfrW8NYGhPn6Aisu2g2H3F9oyhrvt\"]},\"/home/jalil/Programs/zero-collateral-v1/contracts/util/ZeroCollateralCommon.sol\":{\"keccak256\":\"0xdd085ddb6174533fad7028505fdb8ff24a1f68f3633561690d5f69bf1352cf42\",\"urls\":[\"bzz-raw://c1168fb96d6f504004d4e862ef19b7b07caad6d476fbc9c9c0429191029da9b5\",\"dweb:/ipfs/QmPy4vUdxktxRpYAih6zUeGkeo2XFTRaWVxtQXT8FiNAvh\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80639cac6f63116100715780639cac6f63146101f0578063aaaca5581461023a578063acb7081514610284578063b6b55f25146102d2578063e9946b2014610300578063f8c8765e1461034a576100a9565b8063051e6ca5146100ae57806308669aab146100f8578063272e848e146101265780632e1a7d4d1461017457806382f7b027146101a2575b600080fd5b6100b66103ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101246004803603602081101561010e57600080fd5b8101908080359060200190929190505050610414565b005b6101726004803603604081101561013c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610498565b005b6101a06004803603602081101561018a57600080fd5b81019080803590602001909291905050506105a9565b005b6101ee600480360360408110156101b857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061082b565b005b6101f861098a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102426109b0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102d06004803603604081101561029a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109d6565b005b6102fe600480360360208110156102e857600080fd5b8101908080359060200190929190505050610b35565b005b610308610c1b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ec6004803603608081101561036057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c41565b005b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff16610495576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4974206973206e6f7420696e697469616c697a65642e0000000000000000000081525060200191505060405180910390fd5b50565b6000809054906101000a900460ff16610519576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4974206973206e6f7420696e697469616c697a65642e0000000000000000000081525060200191505060405180910390fd5b61059b336040518060400160405280601e81526020017f41646472657373206973206e6f74204c6f616e7320636f6e74726163742e0000815250600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f4d9092919063ffffffff16565b6105a58183611004565b5050565b6000809054906101000a900460ff1661062a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4974206973206e6f7420696e697469616c697a65642e0000000000000000000081525060200191505060405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639dc29fac33836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156106d357600080fd5b505af11580156106e7573d6000803e3d6000fd5b505050506040513d60208110156106fd57600080fd5b810190808051906020019092919050505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166314c46cc033836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b1580156107b857600080fd5b505af11580156107cc573d6000803e3d6000fd5b505050506107da3382611004565b3373ffffffffffffffffffffffffffffffffffffffff167fa2bd9fcfcdba69f52bcd9a520846ad4bd685b187483f53efc42d035b2ddebff0826040518082815260200191505060405180910390a250565b6000809054906101000a900460ff166108ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4974206973206e6f7420696e697469616c697a65642e0000000000000000000081525060200191505060405180910390fd5b61092e336040518060400160405280601e81526020017f41646472657373206973206e6f74204c6f616e7320636f6e74726163742e0000815250600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f4d9092919063ffffffff16565b6109388183611004565b8073ffffffffffffffffffffffffffffffffffffffff167f36617b2812c9871a4a040126deb68df6e23786f728dbbec1f16ec31a9ccd8513836040518082815260200191505060405180910390a25050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff16610a57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4974206973206e6f7420696e697469616c697a65642e0000000000000000000081525060200191505060405180910390fd5b610ad9336040518060400160405280601e81526020017f41646472657373206973206e6f74204c6f616e7320636f6e74726163742e0000815250600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f4d9092919063ffffffff16565b610ae38183611163565b8073ffffffffffffffffffffffffffffffffffffffff167f4819c199ddf4c19bd6887c38dd715fbb8ef06fe379e6fbb356939d47affcb557836040518082815260200191505060405180910390a25050565b6000809054906101000a900460ff16610bb6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4974206973206e6f7420696e697469616c697a65642e0000000000000000000081525060200191505060405180910390fd5b610bc03382611163565b610bca33826112f6565b3373ffffffffffffffffffffffffffffffffffffffff167fbc7c8a4d8049a3f99a02f2a20640c206a2e4d3f2fa54fd20da9f01fda3620cda826040518082815260200191505060405180910390a250565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900460ff1615610cc3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f497420697320616c726561647920696e697469616c697a65642e00000000000081525060200191505060405180910390fd5b610d216040518060400160405280601b81526020017f7a546f6b656e20616464726573732069732072657175697265642e00000000008152508573ffffffffffffffffffffffffffffffffffffffff1661145690919063ffffffff16565b610d7f6040518060400160405280601a81526020017f546f6b656e20616464726573732069732072657175697265642e0000000000008152508473ffffffffffffffffffffffffffffffffffffffff1661145690919063ffffffff16565b610ddd6040518060400160405280601c81526020017f4c656e6465727320616464726573732069732072657175697265642e000000008152508373ffffffffffffffffffffffffffffffffffffffff1661145690919063ffffffff16565b610e3b6040518060400160405280601a81526020017f4c6f616e7320616464726573732069732072657175697265642e0000000000008152508273ffffffffffffffffffffffffffffffffffffffff1661145690919063ffffffff16565b610e4361150b565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b610f578383611527565b8190610ffe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610fc3578082015181840152602081019050610fa8565b50505050905090810190601f168015610ff05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156110ae57600080fd5b505af11580156110c2573d6000803e3d6000fd5b505050506040513d60208110156110d857600080fd5b810190808051906020019092919050505090508061115e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5472616e7366657220776173206e6f74207375636365737366756c2e0000000081525060200191505060405180910390fd5b505050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd8430856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561124157600080fd5b505af1158015611255573d6000803e3d6000fd5b505050506040513d602081101561126b57600080fd5b81019080805190602001909291905050509050806112f1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f5472616e7366657246726f6d207761736e2774207375636365737366756c2e0081525060200191505060405180910390fd5b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156113a157600080fd5b505af11580156113b5573d6000803e3d6000fd5b505050506040513d60208110156113cb57600080fd5b8101908080519060200190929190505050905080611451576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4d696e7420776173206e6f74207375636365737366756c2e000000000000000081525060200191505060405180910390fd5b505050565b61145f82611560565b8190611506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156114cb5780820151818401526020810190506114b0565b50505050905090810190601f1680156114f85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050565b60016000806101000a81548160ff021916908315150217905550565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415905091905056fea265627a7a72315820e2fe31175caeceffc92e1de397958c143f2013c242e8a507b26b33a9a75c6c3664736f6c63430005110032",
  "sourceMap": "1316:6097:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1316:6097:5;;;;;;;",
  "deployedSourceMap": "1316:6097:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1316:6097:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1513:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5764:69;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5764:69:5;;;;;;;;;;;;;;;;;:::i;:::-;;5550:208;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5550:208:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3682:376;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3682:376:5;;;;;;;;;;;;;;;;;:::i;:::-;;4942:299;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4942:299:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1477:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1444:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4465:248;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4465:248:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3212:304;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3212:304:5;;;;;;;;;;;;;;;;;:::i;:::-;;1551:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2320:683;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2320:683:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1513:31;;;;;;;;;;;;;:::o;5764:69::-;936:14:2;;;;;;;;;;;928:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5764:69:5;:::o;5550:208::-;936:14:2;;;;;;;;;;;928:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1805:66:5;1826:10;1805:66;;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:20;;;;:66;;;;;:::i;:::-;5720:31;5734:8;5744:6;5720:13;:31::i;:::-;5550:208;;:::o;3682:376::-;936:14:2;;;;;;;;;;;928:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3782:6:5;;;;;;;;;;;:11;;;3794:10;3806:6;3782:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3782:31:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3782:31:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3782:31:5;;;;;;;;;;;;;;;;;3867:7;;;;;;;;;;;:19;;;3887:10;3899:6;3867:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3867:39:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3867:39:5;;;;3945:33;3959:10;3971:6;3945:13;:33::i;:::-;4032:10;4017:34;;;4044:6;4017:34;;;;;;;;;;;;;;;;;;3682:376;:::o;4942:299::-;936:14:2;;;;;;;;;;;928:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1805:66:5;1826:10;1805:66;;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:20;;;;:66;;;;;:::i;:::-;5125:33;5139:10;5151:6;5125:13;:33::i;:::-;5215:10;5197:37;;;5227:6;5197:37;;;;;;;;;;;;;;;;;;4942:299;;:::o;1477:29::-;;;;;;;;;;;;;:::o;1444:26::-;;;;;;;;;;;;;:::o;4465:248::-;936:14:2;;;;;;;;;;;928:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1805:66:5;1826:10;1805:66;;;;;;;;;;;;;;;;;:5;;;;;;;;;;;:20;;;;:66;;;;;:::i;:::-;4602:35;4620:8;4630:6;4602:17;:35::i;:::-;4689:8;4677:29;;;4699:6;4677:29;;;;;;;;;;;;;;;;;;4465:248;;:::o;3212:304::-;936:14:2;;;;;;;;;;;928:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3329:37:5;3347:10;3359:6;3329:17;:37::i;:::-;3407:30;3418:10;3430:6;3407:10;:30::i;:::-;3490:10;3475:34;;;3502:6;3475:34;;;;;;;;;;;;;;;;;;3212:304;:::o;1551:20::-;;;;;;;;;;;;;:::o;2320:683::-;824:14:2;;;;;;;;;;;823:15;815:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2514:60:5;;;;;;;;;;;;;;;;;;:13;:29;;;;:60;;;;:::i;:::-;2584:65;;;;;;;;;;;;;;;;;;:19;:35;;;;:65;;;;:::i;:::-;2659:62;;;;;;;;;;;;;;;;;;:14;:30;;;;:62;;;;:::i;:::-;2731:58;;;;;;;;;;;;;;;;;;:12;:28;;;;:58;;;;:::i;:::-;2800:12;:10;:12::i;:::-;2848:13;2823:6;;:39;;;;;;;;;;;;;;;;;;2894:19;2872:12;;:42;;;;;;;;;;;;;;;;;;2951:14;2924:7;;:42;;;;;;;;;;;;;;;;;;2984:12;2976:5;;:20;;;;;;;;;;;;;;;;;;2320:683;;;;:::o;898:167:25:-;1026:22;1036:4;1042:5;1026:9;:22::i;:::-;1050:7;1018:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1018:40:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;898:167;;;:::o;6168:210:5:-;6244:19;6266:12;;;;;;;;;;;:21;;;6288:9;6299:6;6266:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6266:40:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6266:40:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6266:40:5;;;;;;;;;;;;;;;;6244:62;;6324:14;6316:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6168:210;;;:::o;6664:234::-;6739:23;6765:12;;;;;;;;;;;:25;;;6791:4;6805;6812:6;6765:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6765:54:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;6765:54:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6765:54:5;;;;;;;;;;;;;;;;6739:80;;6837:18;6829:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6664:234;;;:::o;7240:171::-;7306:15;7324:6;;;;;;;;;;;:11;;;7336:2;7340:6;7324:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7324:23:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7324:23:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7324:23:5;;;;;;;;;;;;;;;;7306:41;;7365:10;7357:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:171;;;:::o;638:127:25:-;732:16;743:4;732:10;:16::i;:::-;750:7;724:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;724:34:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:127;;:::o;1086:69:2:-;1144:4;1127:14;;:21;;;;;;;;;;;;;;;;;;1086:69::o;281:114:25:-;352:4;383:5;375:13;;:4;:13;;;368:20;;281:114;;;;:::o;524:108::-;581:4;159:3;604:21;;:4;:21;;;;597:28;;524:108;;;:::o",
  "source": "/*\n    Copyright 2020 Fabrx Labs Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n*/\npragma solidity 0.5.17;\n\n// Libraries\nimport \"../util/AddressLib.sol\";\n\n// Commons\nimport \"../util/ZeroCollateralCommon.sol\";\n\n// Interfaces\nimport \"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\";\nimport \"../interfaces/LendingPoolInterface.sol\";\nimport \"../interfaces/LendersInterface.sol\";\nimport \"../interfaces/ZTokenInterface.sol\";\n\n// Contracts\nimport \"./Initializable.sol\";\n\n\n/**\n    @notice The LendingPool contract holds all of the tokens that lenders transfer into the protocol. It is the contract that lenders interact with to deposit and withdraw their tokens including interest. The LendingPool interacts with the Lenders contract to ensure token balances and interest owed is kept up to date.\n */\ncontract LendingPool is LendingPoolInterface, Initializable {\n    using AddressLib for address;\n\n    /* State Variables */\n\n    IERC20 public lendingToken;\n\n    ZTokenInterface public zToken;\n\n    LendersInterface public lenders;\n\n    address public loans;\n\n    /** Modifiers */\n\n    /**\n        @notice It checks the address is the Loans contract address.\n        @dev It throws a require error if parameter is not equal to loans contract address.\n     */\n    modifier isLoan() {\n        loans.requireEqualTo(msg.sender, \"Address is not Loans contract.\");\n        _;\n    }\n\n    /* Constructor */\n\n    /** External Functions */\n\n    /**\n        @notice It initializes the contract state variables.\n        @param zTokenAddress zToken token address.\n        @param lendingTokenAddress ERC20 token address.\n        @param lendersAddress Lenders contract address.\n        @param loansAddress Loans contract address.\n        @dev It throws a require error if the contract is already initialized.\n     */\n    function initialize(\n        address zTokenAddress,\n        address lendingTokenAddress,\n        address lendersAddress,\n        address loansAddress\n    ) external isNotInitialized() {\n        zTokenAddress.requireNotEmpty(\"zToken address is required.\");\n        lendingTokenAddress.requireNotEmpty(\"Token address is required.\");\n        lendersAddress.requireNotEmpty(\"Lenders address is required.\");\n        loansAddress.requireNotEmpty(\"Loans address is required.\");\n\n        initialize();\n\n        zToken = ZTokenInterface(zTokenAddress);\n        lendingToken = IERC20(lendingTokenAddress);\n        lenders = LendersInterface(lendersAddress);\n        loans = loansAddress;\n    }\n\n    /**\n        @notice It allows users to deposit tokens into the pool.\n        @dev the user must call ERC20.approve function previously.\n        @param amount of tokens to deposit in the pool.\n    */\n    function deposit(uint256 amount) external isInitialized() {\n        // Transfering tokens to the LendingPool\n        tokenTransferFrom(msg.sender, amount);\n\n        // Mint zToken tokens\n        zTokenMint(msg.sender, amount);\n\n        // Emit event\n        emit TokenDeposited(msg.sender, amount);\n    }\n\n    /**\n        @notice It allows any zToken holder to burn their zToken tokens and withdraw their tokens.\n        @param amount of tokens to withdraw.\n     */\n    function withdraw(uint256 amount) external isInitialized() {\n        // Burn zToken tokens.\n        zToken.burn(msg.sender, amount);\n\n        // Notify zToken tokens were burnt\n        lenders.zTokenBurnt(msg.sender, amount);\n\n        // Transfers tokens\n        tokenTransfer(msg.sender, amount);\n\n        // Emit event.\n        emit TokenWithdrawn(msg.sender, amount);\n    }\n\n    /**\n        @notice It allows a borrower repaying their loan. \n        @dev This function can be called ONLY by the Loans contract.\n        @dev It requires a ERC20.approve call before calling it.\n        @dev It throws a require error if borrower called ERC20.approve function before calling it.\n        @param amount of tokens.\n        @param borrower address that is repaying the loan.\n     */\n    function repay(uint256 amount, address borrower) external isInitialized() isLoan() {\n        // Transfers tokens to LendingPool.\n        tokenTransferFrom(borrower, amount);\n\n        // Emits event.\n        emit TokenRepaid(borrower, amount);\n    }\n\n    /**\n        @notice Once a loan is liquidated, it transfers the amount in tokens to the liquidator address.\n        @param amount of tokens to liquidate.\n        @param liquidator address to receive the tokens.\n     */\n    function liquidationPayment(uint256 amount, address liquidator)\n        external\n        isInitialized()\n        isLoan()\n    {\n        // Transfers tokens to the liquidator.\n        tokenTransfer(liquidator, amount);\n\n        // Emits event\n        emit PaymentLiquidated(liquidator, amount);\n    }\n\n    /**\n        @notice Once the loan is created, it transfers the amount of tokens to the borrower.\n\n        @param amount of tokens to transfer.\n        @param borrower address which will receive the tokens.\n        @dev This function only can be invoked by the LoansInterface implementation.\n     */\n    function createLoan(uint256 amount, address borrower)\n        external\n        isInitialized()\n        isLoan()\n    {\n        // Transfer tokens to the borrower.\n        tokenTransfer(borrower, amount);\n    }\n\n    function withdrawInterest(uint256 amount) external isInitialized() {}\n\n    /** Internal functions */\n\n    /** Private functions */\n\n    /**\n        @notice It transfers an amount of tokens to a specific address.\n        @param recipient address which will receive the tokens.\n        @param amount of tokens to transfer.\n        @dev It throws a require error if 'transfer' invocation fails.\n     */\n    function tokenTransfer(address recipient, uint256 amount) private {\n        bool transferResult = lendingToken.transfer(recipient, amount);\n        require(transferResult, \"Transfer was not successful.\");\n    }\n\n    /**\n        @notice It transfers an amount of tokens from an address to this contract.\n        @param from address where the tokens will transfer from.\n        @param amount to be transferred.\n        @dev It throws a require error if 'transferFrom' invocation fails.\n     */\n    function tokenTransferFrom(address from, uint256 amount) private {\n        bool transferFromResult = lendingToken.transferFrom(from, address(this), amount);\n        require(transferFromResult, \"TransferFrom wasn't successful.\");\n    }\n\n    /**\n        @notice It mints zToken tokens, and send them to a specific address.\n        @param to address which will receive the minted tokens.\n        @param amount to be minted.\n        @dev This contract must has a Minter Role in zToken (mintable) token.\n        @dev It throws a require error if mint invocation fails.\n     */\n    function zTokenMint(address to, uint256 amount) private {\n        bool mintResult = zToken.mint(to, amount);\n        require(mintResult, \"Mint was not successful.\");\n    }\n}\n",
  "sourcePath": "/home/jalil/Programs/zero-collateral-v1/contracts/base/LendingPool.sol",
  "ast": {
    "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/base/LendingPool.sol",
    "exportedSymbols": {
      "LendingPool": [
        1242
      ]
    },
    "id": 1243,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 947,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "598:23:5"
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/util/AddressLib.sol",
        "file": "../util/AddressLib.sol",
        "id": 948,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3159,
        "src": "636:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/util/ZeroCollateralCommon.sol",
        "file": "../util/ZeroCollateralCommon.sol",
        "id": 949,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3418,
        "src": "681:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 950,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 5738,
        "src": "739:64:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/LendingPoolInterface.sol",
        "file": "../interfaces/LendingPoolInterface.sol",
        "id": 951,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 2255,
        "src": "804:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/LendersInterface.sol",
        "file": "../interfaces/LendersInterface.sol",
        "id": 952,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 2192,
        "src": "853:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/ZTokenInterface.sol",
        "file": "../interfaces/ZTokenInterface.sol",
        "id": 953,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 2408,
        "src": "898:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/base/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 954,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 222,
        "src": "956:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 955,
              "name": "LendingPoolInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2254,
              "src": "1340:20:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendingPoolInterface_$2254",
                "typeString": "contract LendingPoolInterface"
              }
            },
            "id": 956,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:20:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 957,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 221,
              "src": "1362:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$221",
                "typeString": "contract Initializable"
              }
            },
            "id": 958,
            "nodeType": "InheritanceSpecifier",
            "src": "1362:13:5"
          }
        ],
        "contractDependencies": [
          221,
          2254
        ],
        "contractKind": "contract",
        "documentation": "@notice The LendingPool contract holds all of the tokens that lenders transfer into the protocol. It is the contract that lenders interact with to deposit and withdraw their tokens including interest. The LendingPool interacts with the Lenders contract to ensure token balances and interest owed is kept up to date.",
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242,
          221,
          2254
        ],
        "name": "LendingPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 961,
            "libraryName": {
              "contractScope": null,
              "id": 959,
              "name": "AddressLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3158,
              "src": "1388:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressLib_$3158",
                "typeString": "library AddressLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1382:29:5",
            "typeName": {
              "id": 960,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1403:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 963,
            "name": "lendingToken",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1444:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5737",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 962,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5737,
              "src": "1444:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5737",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 965,
            "name": "zToken",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1477:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
              "typeString": "contract ZTokenInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 964,
              "name": "ZTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2407,
              "src": "1477:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                "typeString": "contract ZTokenInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 967,
            "name": "lenders",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1513:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LendersInterface_$2191",
              "typeString": "contract LendersInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 966,
              "name": "LendersInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2191,
              "src": "1513:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendersInterface_$2191",
                "typeString": "contract LendersInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 969,
            "name": "loans",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1551:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 968,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1551:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "1795:94:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 974,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "1826:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1826:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f74204c6f616e7320636f6e74726163742e",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1838:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dccfa01ca0e3c84e2edf849a8351dbf439eb364b12ac6a55a70c265fa2d047a3",
                          "typeString": "literal_string \"Address is not Loans contract.\""
                        },
                        "value": "Address is not Loans contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dccfa01ca0e3c84e2edf849a8351dbf439eb364b12ac6a55a70c265fa2d047a3",
                          "typeString": "literal_string \"Address is not Loans contract.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 971,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "1805:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3139,
                      "src": "1805:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:66:5"
                },
                {
                  "id": 979,
                  "nodeType": "PlaceholderStatement",
                  "src": "1881:1:5"
                }
              ]
            },
            "documentation": "@notice It checks the address is the Loans contract address.\n@dev It throws a require error if parameter is not equal to loans contract address.",
            "id": 981,
            "name": "isLoan",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:2:5"
            },
            "src": "1777:112:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "2504:499:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7a546f6b656e20616464726573732069732072657175697265642e",
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2544:29:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9c0967cd2096cc64f233e4b62dfd7ddbbcec1768bd28517587f62bf289f8503",
                          "typeString": "literal_string \"zToken address is required.\""
                        },
                        "value": "zToken address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c9c0967cd2096cc64f233e4b62dfd7ddbbcec1768bd28517587f62bf289f8503",
                          "typeString": "literal_string \"zToken address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "zTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "2514:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2514:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2514:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20616464726573732069732072657175697265642e",
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2620:28:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40222c59708e1e8456ac92a541980b5cdef4f1b6e7fdca6d3550743676a2861d",
                          "typeString": "literal_string \"Token address is required.\""
                        },
                        "value": "Token address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_40222c59708e1e8456ac92a541980b5cdef4f1b6e7fdca6d3550743676a2861d",
                          "typeString": "literal_string \"Token address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1000,
                        "name": "lendingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "2584:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2584:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4c656e6465727320616464726573732069732072657175697265642e",
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2690:30:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_152bb4da13d0809299dcf4c3a2f0ff2352f8dc646995dcebf13cd46715cb2540",
                          "typeString": "literal_string \"Lenders address is required.\""
                        },
                        "value": "Lenders address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_152bb4da13d0809299dcf4c3a2f0ff2352f8dc646995dcebf13cd46715cb2540",
                          "typeString": "literal_string \"Lenders address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1006,
                        "name": "lendersAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "2659:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2659:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:62:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6f616e7320616464726573732069732072657175697265642e",
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2760:28:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1e0708cc9bbd64a942a4491c644e53cd85f748a2ea97e221a7c88a215677a6f",
                          "typeString": "literal_string \"Loans address is required.\""
                        },
                        "value": "Loans address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f1e0708cc9bbd64a942a4491c644e53cd85f748a2ea97e221a7c88a215677a6f",
                          "typeString": "literal_string \"Loans address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "loansAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "2731:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2731:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "2731:58:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1018,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2800:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:12:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1021,
                      "name": "zToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "2823:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                        "typeString": "contract ZTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1023,
                          "name": "zTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 983,
                          "src": "2848:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1022,
                        "name": "ZTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2407,
                        "src": "2832:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZTokenInterface_$2407_$",
                          "typeString": "type(contract ZTokenInterface)"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2832:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                        "typeString": "contract ZTokenInterface"
                      }
                    },
                    "src": "2823:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                      "typeString": "contract ZTokenInterface"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "2823:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1027,
                      "name": "lendingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "2872:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1029,
                          "name": "lendingTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "2894:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1028,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5737,
                        "src": "2887:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5737_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2887:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2872:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5737",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "2872:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1033,
                      "name": "lenders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "2924:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendersInterface_$2191",
                        "typeString": "contract LendersInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1035,
                          "name": "lendersAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "2951:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1034,
                        "name": "LendersInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "2934:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LendersInterface_$2191_$",
                          "typeString": "type(contract LendersInterface)"
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2934:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendersInterface_$2191",
                        "typeString": "contract LendersInterface"
                      }
                    },
                    "src": "2924:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendersInterface_$2191",
                      "typeString": "contract LendersInterface"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "loans",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "2976:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "loansAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "2984:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2976:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:20:5"
                }
              ]
            },
            "documentation": "@notice It initializes the contract state variables.\n@param zTokenAddress zToken token address.\n@param lendingTokenAddress ERC20 token address.\n@param lendersAddress Lenders contract address.\n@param loansAddress Loans contract address.\n@dev It throws a require error if the contract is already initialized.",
            "id": 1044,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 992,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 991,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 203,
                  "src": "2485:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2485:18:5"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "name": "zTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2349:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 985,
                  "name": "lendingTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2380:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "name": "lendersAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2417:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2417:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 989,
                  "name": "loansAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2449:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2339:136:5"
            },
            "returnParameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2504:0:5"
            },
            "scope": 1242,
            "src": "2320:683:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1069,
              "nodeType": "Block",
              "src": "3270:246:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1052,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3347:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3347:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1054,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3359:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1051,
                      "name": "tokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1220,
                      "src": "3329:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1058,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3418:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3418:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1060,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3430:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1057,
                      "name": "zTokenMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "3407:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3407:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "3407:30:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1064,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3490:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3490:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1066,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3502:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1063,
                      "name": "TokenDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "3475:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "EmitStatement",
                  "src": "3470:39:5"
                }
              ]
            },
            "documentation": "@notice It allows users to deposit tokens into the pool.\n@dev the user must call ERC20.approve function previously.\n@param amount of tokens to deposit in the pool.",
            "id": 1070,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1049,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1048,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "3254:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3254:15:5"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "3229:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3229:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3228:16:5"
            },
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3270:0:5"
            },
            "scope": 1242,
            "src": "3212:304:5",
            "stateMutability": "nonpayable",
            "superFunction": 2198,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "3741:317:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1080,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3794:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3794:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1082,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "3806:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1077,
                        "name": "zToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "3782:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                          "typeString": "contract ZTokenInterface"
                        }
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2397,
                      "src": "3782:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1088,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3887:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3887:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1090,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "3899:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1085,
                        "name": "lenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "3867:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendersInterface_$2191",
                          "typeString": "contract LendersInterface"
                        }
                      },
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "zTokenBurnt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2139,
                      "src": "3867:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3867:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1094,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3959:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3959:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "3971:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1093,
                      "name": "tokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "3945:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3945:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "3945:33:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "4032:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4032:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1102,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "4044:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1099,
                      "name": "TokenWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2241,
                      "src": "4017:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4017:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "EmitStatement",
                  "src": "4012:39:5"
                }
              ]
            },
            "documentation": "@notice It allows any zToken holder to burn their zToken tokens and withdraw their tokens.\n@param amount of tokens to withdraw.",
            "id": 1106,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1075,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1074,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "3725:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3725:15:5"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "3700:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3699:16:5"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3741:0:5"
            },
            "scope": 1242,
            "src": "3682:376:5",
            "stateMutability": "nonpayable",
            "superFunction": 2203,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "4548:165:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "4620:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "4630:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1117,
                      "name": "tokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1220,
                      "src": "4602:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:35:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1123,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "4689:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "4699:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1122,
                      "name": "TokenRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2247,
                      "src": "4677:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4677:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "EmitStatement",
                  "src": "4672:34:5"
                }
              ]
            },
            "documentation": "@notice It allows a borrower repaying their loan. \n@dev This function can be called ONLY by the Loans contract.\n@dev It requires a ERC20.approve call before calling it.\n@dev It throws a require error if borrower called ERC20.approve function before calling it.\n@param amount of tokens.\n@param borrower address that is repaying the loan.",
            "id": 1128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1113,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1112,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "4523:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4523:15:5"
              },
              {
                "arguments": [],
                "id": 1115,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1114,
                  "name": "isLoan",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 981,
                  "src": "4539:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4539:8:5"
              }
            ],
            "name": "repay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "4480:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1110,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "4496:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4479:34:5"
            },
            "returnParameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4548:0:5"
            },
            "scope": 1242,
            "src": "4465:248:5",
            "stateMutability": "nonpayable",
            "superFunction": 2210,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "5068:173:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "5139:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5151:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1139,
                      "name": "tokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "5125:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5125:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "5125:33:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1145,
                        "name": "liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "5215:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1146,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5227:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1144,
                      "name": "PaymentLiquidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2253,
                      "src": "5197:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5197:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1148,
                  "nodeType": "EmitStatement",
                  "src": "5192:42:5"
                }
              ]
            },
            "documentation": "@notice Once a loan is liquidated, it transfers the amount in tokens to the liquidator address.\n@param amount of tokens to liquidate.\n@param liquidator address to receive the tokens.",
            "id": 1150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1135,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1134,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "5031:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5031:15:5"
              },
              {
                "arguments": [],
                "id": 1137,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1136,
                  "name": "isLoan",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 981,
                  "src": "5055:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5055:8:5"
              }
            ],
            "name": "liquidationPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "4970:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4970:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "4986:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4986:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4969:36:5"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5068:0:5"
            },
            "scope": 1242,
            "src": "4942:299:5",
            "stateMutability": "nonpayable",
            "superFunction": 2217,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "5666:92:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "5734:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1163,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "5744:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1161,
                      "name": "tokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "5720:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5720:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "5720:31:5"
                }
              ]
            },
            "documentation": "@notice Once the loan is created, it transfers the amount of tokens to the borrower.\n@param amount of tokens to transfer.\n@param borrower address which will receive the tokens.\n@dev This function only can be invoked by the LoansInterface implementation.",
            "id": 1167,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1156,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "5629:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5629:15:5"
              },
              {
                "arguments": [],
                "id": 1159,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1158,
                  "name": "isLoan",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 981,
                  "src": "5653:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5653:8:5"
              }
            ],
            "name": "createLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "5570:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5570:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "5586:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5569:34:5"
            },
            "returnParameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5666:0:5"
            },
            "scope": 1242,
            "src": "5550:208:5",
            "stateMutability": "nonpayable",
            "superFunction": 2224,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "5831:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1172,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1171,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "5815:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5815:15:5"
              }
            ],
            "name": "withdrawInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "5790:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5790:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5789:16:5"
            },
            "returnParameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5831:0:5"
            },
            "scope": 1242,
            "src": "5764:69:5",
            "stateMutability": "nonpayable",
            "superFunction": 2229,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "6234:144:5",
              "statements": [
                {
                  "assignments": [
                    1183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1183,
                      "name": "transferResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "6244:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1182,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6244:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1186,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "6288:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1187,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "6299:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1184,
                        "name": "lendingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "6266:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5737",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5691,
                      "src": "6266:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6244:62:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1191,
                        "name": "transferResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "6324:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c2e",
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6340:30:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d43d369f1062cce72a950dafb2c3abba653a8fd11faf22833befcbb95a3e8b49",
                          "typeString": "literal_string \"Transfer was not successful.\""
                        },
                        "value": "Transfer was not successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d43d369f1062cce72a950dafb2c3abba653a8fd11faf22833befcbb95a3e8b49",
                          "typeString": "literal_string \"Transfer was not successful.\""
                        }
                      ],
                      "id": 1190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5755,
                        5756
                      ],
                      "referencedDeclaration": 5756,
                      "src": "6316:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1194,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:55:5"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of tokens to a specific address.\n@param recipient address which will receive the tokens.\n@param amount of tokens to transfer.\n@dev It throws a require error if 'transfer' invocation fails.",
            "id": 1196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "6191:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "6210:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6210:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6190:35:5"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6234:0:5"
            },
            "scope": 1242,
            "src": "6168:210:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "6729:169:5",
              "statements": [
                {
                  "assignments": [
                    1204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1204,
                      "name": "transferFromResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 1219,
                      "src": "6739:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6739:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1213,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "6791:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1209,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5798,
                            "src": "6805:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingPool_$1242",
                              "typeString": "contract LendingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LendingPool_$1242",
                              "typeString": "contract LendingPool"
                            }
                          ],
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6797:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6797:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1211,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "6812:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1205,
                        "name": "lendingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "6765:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5737",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5720,
                      "src": "6765:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6765:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6739:80:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1215,
                        "name": "transferFromResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "6837:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657246726f6d207761736e2774207375636365737366756c2e",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6857:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36269b16ee261b10580ffada385911559e23e4009791ff40489914d3fd00ff60",
                          "typeString": "literal_string \"TransferFrom wasn't successful.\""
                        },
                        "value": "TransferFrom wasn't successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36269b16ee261b10580ffada385911559e23e4009791ff40489914d3fd00ff60",
                          "typeString": "literal_string \"TransferFrom wasn't successful.\""
                        }
                      ],
                      "id": 1214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5755,
                        5756
                      ],
                      "referencedDeclaration": 5756,
                      "src": "6829:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6829:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "6829:62:5"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of tokens from an address to this contract.\n@param from address where the tokens will transfer from.\n@param amount to be transferred.\n@dev It throws a require error if 'transferFrom' invocation fails.",
            "id": 1220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "6691:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6691:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "6705:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6705:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6690:30:5"
            },
            "returnParameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6729:0:5"
            },
            "scope": 1242,
            "src": "6664:234:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "7296:115:5",
              "statements": [
                {
                  "assignments": [
                    1228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1228,
                      "name": "mintResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "7306:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1227,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7306:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1234,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1231,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "7336:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1232,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1224,
                        "src": "7340:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1229,
                        "name": "zToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "7324:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                          "typeString": "contract ZTokenInterface"
                        }
                      },
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2406,
                      "src": "7324:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7324:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7306:41:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1236,
                        "name": "mintResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "7365:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e7420776173206e6f74207375636365737366756c2e",
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7377:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bffcd209d63f56837c00d736bbb9909eeec8369084349989bef0685bf1ad3e7a",
                          "typeString": "literal_string \"Mint was not successful.\""
                        },
                        "value": "Mint was not successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bffcd209d63f56837c00d736bbb9909eeec8369084349989bef0685bf1ad3e7a",
                          "typeString": "literal_string \"Mint was not successful.\""
                        }
                      ],
                      "id": 1235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5755,
                        5756
                      ],
                      "referencedDeclaration": 5756,
                      "src": "7357:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:47:5"
                }
              ]
            },
            "documentation": "@notice It mints zToken tokens, and send them to a specific address.\n@param to address which will receive the minted tokens.\n@param amount to be minted.\n@dev This contract must has a Minter Role in zToken (mintable) token.\n@dev It throws a require error if mint invocation fails.",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "zTokenMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "7260:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7260:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1224,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "7272:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7272:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7259:28:5"
            },
            "returnParameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7296:0:5"
            },
            "scope": 1242,
            "src": "7240:171:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 1243,
        "src": "1316:6097:5"
      }
    ],
    "src": "598:6816:5"
  },
  "legacyAST": {
    "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/base/LendingPool.sol",
    "exportedSymbols": {
      "LendingPool": [
        1242
      ]
    },
    "id": 1243,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 947,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "598:23:5"
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/util/AddressLib.sol",
        "file": "../util/AddressLib.sol",
        "id": 948,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3159,
        "src": "636:32:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/util/ZeroCollateralCommon.sol",
        "file": "../util/ZeroCollateralCommon.sol",
        "id": 949,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 3418,
        "src": "681:42:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
        "id": 950,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 5738,
        "src": "739:64:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/LendingPoolInterface.sol",
        "file": "../interfaces/LendingPoolInterface.sol",
        "id": 951,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 2255,
        "src": "804:48:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/LendersInterface.sol",
        "file": "../interfaces/LendersInterface.sol",
        "id": 952,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 2192,
        "src": "853:44:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/interfaces/ZTokenInterface.sol",
        "file": "../interfaces/ZTokenInterface.sol",
        "id": 953,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 2408,
        "src": "898:43:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/jalil/Programs/zero-collateral-v1/contracts/base/Initializable.sol",
        "file": "./Initializable.sol",
        "id": 954,
        "nodeType": "ImportDirective",
        "scope": 1243,
        "sourceUnit": 222,
        "src": "956:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 955,
              "name": "LendingPoolInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2254,
              "src": "1340:20:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendingPoolInterface_$2254",
                "typeString": "contract LendingPoolInterface"
              }
            },
            "id": 956,
            "nodeType": "InheritanceSpecifier",
            "src": "1340:20:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 957,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 221,
              "src": "1362:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$221",
                "typeString": "contract Initializable"
              }
            },
            "id": 958,
            "nodeType": "InheritanceSpecifier",
            "src": "1362:13:5"
          }
        ],
        "contractDependencies": [
          221,
          2254
        ],
        "contractKind": "contract",
        "documentation": "@notice The LendingPool contract holds all of the tokens that lenders transfer into the protocol. It is the contract that lenders interact with to deposit and withdraw their tokens including interest. The LendingPool interacts with the Lenders contract to ensure token balances and interest owed is kept up to date.",
        "fullyImplemented": true,
        "id": 1242,
        "linearizedBaseContracts": [
          1242,
          221,
          2254
        ],
        "name": "LendingPool",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 961,
            "libraryName": {
              "contractScope": null,
              "id": 959,
              "name": "AddressLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3158,
              "src": "1388:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressLib_$3158",
                "typeString": "library AddressLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1382:29:5",
            "typeName": {
              "id": 960,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1403:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 963,
            "name": "lendingToken",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1444:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$5737",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "contractScope": null,
              "id": 962,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5737,
              "src": "1444:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$5737",
                "typeString": "contract IERC20"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 965,
            "name": "zToken",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1477:29:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
              "typeString": "contract ZTokenInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 964,
              "name": "ZTokenInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2407,
              "src": "1477:15:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                "typeString": "contract ZTokenInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 967,
            "name": "lenders",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1513:31:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LendersInterface_$2191",
              "typeString": "contract LendersInterface"
            },
            "typeName": {
              "contractScope": null,
              "id": 966,
              "name": "LendersInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2191,
              "src": "1513:16:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendersInterface_$2191",
                "typeString": "contract LendersInterface"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 969,
            "name": "loans",
            "nodeType": "VariableDeclaration",
            "scope": 1242,
            "src": "1551:20:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 968,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1551:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 980,
              "nodeType": "Block",
              "src": "1795:94:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 974,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "1826:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 975,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1826:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "41646472657373206973206e6f74204c6f616e7320636f6e74726163742e",
                        "id": 976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1838:32:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dccfa01ca0e3c84e2edf849a8351dbf439eb364b12ac6a55a70c265fa2d047a3",
                          "typeString": "literal_string \"Address is not Loans contract.\""
                        },
                        "value": "Address is not Loans contract."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dccfa01ca0e3c84e2edf849a8351dbf439eb364b12ac6a55a70c265fa2d047a3",
                          "typeString": "literal_string \"Address is not Loans contract.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 971,
                        "name": "loans",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "1805:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireEqualTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3139,
                      "src": "1805:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,address,string memory) pure"
                      }
                    },
                    "id": 977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:66:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 978,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:66:5"
                },
                {
                  "id": 979,
                  "nodeType": "PlaceholderStatement",
                  "src": "1881:1:5"
                }
              ]
            },
            "documentation": "@notice It checks the address is the Loans contract address.\n@dev It throws a require error if parameter is not equal to loans contract address.",
            "id": 981,
            "name": "isLoan",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1792:2:5"
            },
            "src": "1777:112:5",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1043,
              "nodeType": "Block",
              "src": "2504:499:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "7a546f6b656e20616464726573732069732072657175697265642e",
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2544:29:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9c0967cd2096cc64f233e4b62dfd7ddbbcec1768bd28517587f62bf289f8503",
                          "typeString": "literal_string \"zToken address is required.\""
                        },
                        "value": "zToken address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c9c0967cd2096cc64f233e4b62dfd7ddbbcec1768bd28517587f62bf289f8503",
                          "typeString": "literal_string \"zToken address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "zTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "2514:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2514:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2514:60:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:60:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "546f6b656e20616464726573732069732072657175697265642e",
                        "id": 1003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2620:28:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40222c59708e1e8456ac92a541980b5cdef4f1b6e7fdca6d3550743676a2861d",
                          "typeString": "literal_string \"Token address is required.\""
                        },
                        "value": "Token address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_40222c59708e1e8456ac92a541980b5cdef4f1b6e7fdca6d3550743676a2861d",
                          "typeString": "literal_string \"Token address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1000,
                        "name": "lendingTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "2584:19:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2584:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 1004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2584:65:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1005,
                  "nodeType": "ExpressionStatement",
                  "src": "2584:65:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4c656e6465727320616464726573732069732072657175697265642e",
                        "id": 1009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2690:30:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_152bb4da13d0809299dcf4c3a2f0ff2352f8dc646995dcebf13cd46715cb2540",
                          "typeString": "literal_string \"Lenders address is required.\""
                        },
                        "value": "Lenders address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_152bb4da13d0809299dcf4c3a2f0ff2352f8dc646995dcebf13cd46715cb2540",
                          "typeString": "literal_string \"Lenders address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1006,
                        "name": "lendersAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 987,
                        "src": "2659:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2659:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 1010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2659:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1011,
                  "nodeType": "ExpressionStatement",
                  "src": "2659:62:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "4c6f616e7320616464726573732069732072657175697265642e",
                        "id": 1015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2760:28:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1e0708cc9bbd64a942a4491c644e53cd85f748a2ea97e221a7c88a215677a6f",
                          "typeString": "literal_string \"Loans address is required.\""
                        },
                        "value": "Loans address is required."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f1e0708cc9bbd64a942a4491c644e53cd85f748a2ea97e221a7c88a215677a6f",
                          "typeString": "literal_string \"Loans address is required.\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1012,
                        "name": "loansAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "2731:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requireNotEmpty",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3106,
                      "src": "2731:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$_t_string_memory_ptr_$returns$__$bound_to$_t_address_$",
                        "typeString": "function (address,string memory) pure"
                      }
                    },
                    "id": 1016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:58:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1017,
                  "nodeType": "ExpressionStatement",
                  "src": "2731:58:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1018,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "2800:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2800:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1020,
                  "nodeType": "ExpressionStatement",
                  "src": "2800:12:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1025,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1021,
                      "name": "zToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "2823:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                        "typeString": "contract ZTokenInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1023,
                          "name": "zTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 983,
                          "src": "2848:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1022,
                        "name": "ZTokenInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2407,
                        "src": "2832:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ZTokenInterface_$2407_$",
                          "typeString": "type(contract ZTokenInterface)"
                        }
                      },
                      "id": 1024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2832:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                        "typeString": "contract ZTokenInterface"
                      }
                    },
                    "src": "2823:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                      "typeString": "contract ZTokenInterface"
                    }
                  },
                  "id": 1026,
                  "nodeType": "ExpressionStatement",
                  "src": "2823:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1031,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1027,
                      "name": "lendingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 963,
                      "src": "2872:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1029,
                          "name": "lendingTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 985,
                          "src": "2894:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1028,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5737,
                        "src": "2887:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$5737_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2887:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$5737",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2872:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$5737",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 1032,
                  "nodeType": "ExpressionStatement",
                  "src": "2872:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1033,
                      "name": "lenders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 967,
                      "src": "2924:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendersInterface_$2191",
                        "typeString": "contract LendersInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 1035,
                          "name": "lendersAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "2951:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1034,
                        "name": "LendersInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2191,
                        "src": "2934:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LendersInterface_$2191_$",
                          "typeString": "type(contract LendersInterface)"
                        }
                      },
                      "id": 1036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2934:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendersInterface_$2191",
                        "typeString": "contract LendersInterface"
                      }
                    },
                    "src": "2924:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendersInterface_$2191",
                      "typeString": "contract LendersInterface"
                    }
                  },
                  "id": 1038,
                  "nodeType": "ExpressionStatement",
                  "src": "2924:42:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1039,
                      "name": "loans",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 969,
                      "src": "2976:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1040,
                      "name": "loansAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "2984:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2976:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1042,
                  "nodeType": "ExpressionStatement",
                  "src": "2976:20:5"
                }
              ]
            },
            "documentation": "@notice It initializes the contract state variables.\n@param zTokenAddress zToken token address.\n@param lendingTokenAddress ERC20 token address.\n@param lendersAddress Lenders contract address.\n@param loansAddress Loans contract address.\n@dev It throws a require error if the contract is already initialized.",
            "id": 1044,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 992,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 991,
                  "name": "isNotInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 203,
                  "src": "2485:16:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2485:18:5"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 983,
                  "name": "zTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2349:21:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 982,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2349:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 985,
                  "name": "lendingTokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2380:27:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2380:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "name": "lendersAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2417:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2417:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 989,
                  "name": "loansAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1044,
                  "src": "2449:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2449:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2339:136:5"
            },
            "returnParameters": {
              "id": 993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2504:0:5"
            },
            "scope": 1242,
            "src": "2320:683:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1069,
              "nodeType": "Block",
              "src": "3270:246:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1052,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3347:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3347:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1054,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3359:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1051,
                      "name": "tokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1220,
                      "src": "3329:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1055,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1056,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:37:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1058,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3418:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3418:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1060,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3430:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1057,
                      "name": "zTokenMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1241,
                      "src": "3407:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3407:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1062,
                  "nodeType": "ExpressionStatement",
                  "src": "3407:30:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1064,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3490:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3490:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1066,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1046,
                        "src": "3502:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1063,
                      "name": "TokenDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2235,
                      "src": "3475:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1068,
                  "nodeType": "EmitStatement",
                  "src": "3470:39:5"
                }
              ]
            },
            "documentation": "@notice It allows users to deposit tokens into the pool.\n@dev the user must call ERC20.approve function previously.\n@param amount of tokens to deposit in the pool.",
            "id": 1070,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1049,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1048,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "3254:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3254:15:5"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1046,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1070,
                  "src": "3229:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1045,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3229:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3228:16:5"
            },
            "returnParameters": {
              "id": 1050,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3270:0:5"
            },
            "scope": 1242,
            "src": "3212:304:5",
            "stateMutability": "nonpayable",
            "superFunction": 2198,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "3741:317:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1080,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3794:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3794:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1082,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "3806:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1077,
                        "name": "zToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "3782:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                          "typeString": "contract ZTokenInterface"
                        }
                      },
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2397,
                      "src": "3782:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3782:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "3782:31:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1088,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3887:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3887:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1090,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "3899:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1085,
                        "name": "lenders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 967,
                        "src": "3867:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendersInterface_$2191",
                          "typeString": "contract LendersInterface"
                        }
                      },
                      "id": 1087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "zTokenBurnt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2139,
                      "src": "3867:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 1091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3867:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1092,
                  "nodeType": "ExpressionStatement",
                  "src": "3867:39:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1094,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "3959:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "3959:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1096,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "3971:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1093,
                      "name": "tokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "3945:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1097,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3945:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1098,
                  "nodeType": "ExpressionStatement",
                  "src": "3945:33:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 1100,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5752,
                          "src": "4032:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "4032:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1102,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1072,
                        "src": "4044:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1099,
                      "name": "TokenWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2241,
                      "src": "4017:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4017:34:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "EmitStatement",
                  "src": "4012:39:5"
                }
              ]
            },
            "documentation": "@notice It allows any zToken holder to burn their zToken tokens and withdraw their tokens.\n@param amount of tokens to withdraw.",
            "id": 1106,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1075,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1074,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "3725:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3725:15:5"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1072,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "3700:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3700:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3699:16:5"
            },
            "returnParameters": {
              "id": 1076,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3741:0:5"
            },
            "scope": 1242,
            "src": "3682:376:5",
            "stateMutability": "nonpayable",
            "superFunction": 2203,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1127,
              "nodeType": "Block",
              "src": "4548:165:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1118,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "4620:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1119,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "4630:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1117,
                      "name": "tokenTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1220,
                      "src": "4602:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:35:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1123,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1110,
                        "src": "4689:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1124,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1108,
                        "src": "4699:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1122,
                      "name": "TokenRepaid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2247,
                      "src": "4677:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4677:29:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "EmitStatement",
                  "src": "4672:34:5"
                }
              ]
            },
            "documentation": "@notice It allows a borrower repaying their loan. \n@dev This function can be called ONLY by the Loans contract.\n@dev It requires a ERC20.approve call before calling it.\n@dev It throws a require error if borrower called ERC20.approve function before calling it.\n@param amount of tokens.\n@param borrower address that is repaying the loan.",
            "id": 1128,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1113,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1112,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "4523:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4523:15:5"
              },
              {
                "arguments": [],
                "id": 1115,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1114,
                  "name": "isLoan",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 981,
                  "src": "4539:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4539:8:5"
              }
            ],
            "name": "repay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "4480:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1110,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1128,
                  "src": "4496:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4496:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4479:34:5"
            },
            "returnParameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4548:0:5"
            },
            "scope": 1242,
            "src": "4465:248:5",
            "stateMutability": "nonpayable",
            "superFunction": 2210,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1149,
              "nodeType": "Block",
              "src": "5068:173:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1140,
                        "name": "liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "5139:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1141,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5151:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1139,
                      "name": "tokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "5125:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5125:33:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1143,
                  "nodeType": "ExpressionStatement",
                  "src": "5125:33:5"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1145,
                        "name": "liquidator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "5215:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1146,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5227:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1144,
                      "name": "PaymentLiquidated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2253,
                      "src": "5197:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5197:37:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1148,
                  "nodeType": "EmitStatement",
                  "src": "5192:42:5"
                }
              ]
            },
            "documentation": "@notice Once a loan is liquidated, it transfers the amount in tokens to the liquidator address.\n@param amount of tokens to liquidate.\n@param liquidator address to receive the tokens.",
            "id": 1150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1135,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1134,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "5031:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5031:15:5"
              },
              {
                "arguments": [],
                "id": 1137,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1136,
                  "name": "isLoan",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 981,
                  "src": "5055:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5055:8:5"
              }
            ],
            "name": "liquidationPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1130,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "4970:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4970:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1150,
                  "src": "4986:18:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4986:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4969:36:5"
            },
            "returnParameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5068:0:5"
            },
            "scope": 1242,
            "src": "4942:299:5",
            "stateMutability": "nonpayable",
            "superFunction": 2217,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1166,
              "nodeType": "Block",
              "src": "5666:92:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1162,
                        "name": "borrower",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1154,
                        "src": "5734:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1163,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1152,
                        "src": "5744:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1161,
                      "name": "tokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1196,
                      "src": "5720:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5720:31:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1165,
                  "nodeType": "ExpressionStatement",
                  "src": "5720:31:5"
                }
              ]
            },
            "documentation": "@notice Once the loan is created, it transfers the amount of tokens to the borrower.\n@param amount of tokens to transfer.\n@param borrower address which will receive the tokens.\n@dev This function only can be invoked by the LoansInterface implementation.",
            "id": 1167,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1157,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1156,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "5629:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5629:15:5"
              },
              {
                "arguments": [],
                "id": 1159,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1158,
                  "name": "isLoan",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 981,
                  "src": "5653:6:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5653:8:5"
              }
            ],
            "name": "createLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1152,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "5570:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1151,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5570:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1154,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1167,
                  "src": "5586:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1153,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5586:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5569:34:5"
            },
            "returnParameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5666:0:5"
            },
            "scope": 1242,
            "src": "5550:208:5",
            "stateMutability": "nonpayable",
            "superFunction": 2224,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "5831:2:5",
              "statements": []
            },
            "documentation": null,
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 1172,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1171,
                  "name": "isInitialized",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 212,
                  "src": "5815:13:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "5815:15:5"
              }
            ],
            "name": "withdrawInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1169,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "5790:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5790:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5789:16:5"
            },
            "returnParameters": {
              "id": 1173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5831:0:5"
            },
            "scope": 1242,
            "src": "5764:69:5",
            "stateMutability": "nonpayable",
            "superFunction": 2229,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1195,
              "nodeType": "Block",
              "src": "6234:144:5",
              "statements": [
                {
                  "assignments": [
                    1183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1183,
                      "name": "transferResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 1195,
                      "src": "6244:19:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1182,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6244:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1189,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1186,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "6288:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1187,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1179,
                        "src": "6299:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1184,
                        "name": "lendingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "6266:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5737",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5691,
                      "src": "6266:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6266:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6244:62:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1191,
                        "name": "transferResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1183,
                        "src": "6324:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657220776173206e6f74207375636365737366756c2e",
                        "id": 1192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6340:30:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d43d369f1062cce72a950dafb2c3abba653a8fd11faf22833befcbb95a3e8b49",
                          "typeString": "literal_string \"Transfer was not successful.\""
                        },
                        "value": "Transfer was not successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d43d369f1062cce72a950dafb2c3abba653a8fd11faf22833befcbb95a3e8b49",
                          "typeString": "literal_string \"Transfer was not successful.\""
                        }
                      ],
                      "id": 1190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5755,
                        5756
                      ],
                      "referencedDeclaration": 5756,
                      "src": "6316:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:55:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1194,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:55:5"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of tokens to a specific address.\n@param recipient address which will receive the tokens.\n@param amount of tokens to transfer.\n@dev It throws a require error if 'transfer' invocation fails.",
            "id": 1196,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenTransfer",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1177,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "6191:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6191:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1179,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1196,
                  "src": "6210:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6210:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6190:35:5"
            },
            "returnParameters": {
              "id": 1181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6234:0:5"
            },
            "scope": 1242,
            "src": "6168:210:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1219,
              "nodeType": "Block",
              "src": "6729:169:5",
              "statements": [
                {
                  "assignments": [
                    1204
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1204,
                      "name": "transferFromResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 1219,
                      "src": "6739:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1203,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6739:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1213,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1207,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1198,
                        "src": "6791:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1209,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5798,
                            "src": "6805:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingPool_$1242",
                              "typeString": "contract LendingPool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LendingPool_$1242",
                              "typeString": "contract LendingPool"
                            }
                          ],
                          "id": 1208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6797:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 1210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6797:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1211,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "6812:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1205,
                        "name": "lendingToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "6765:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$5737",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5720,
                      "src": "6765:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6765:54:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6739:80:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1215,
                        "name": "transferFromResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1204,
                        "src": "6837:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657246726f6d207761736e2774207375636365737366756c2e",
                        "id": 1216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6857:33:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_36269b16ee261b10580ffada385911559e23e4009791ff40489914d3fd00ff60",
                          "typeString": "literal_string \"TransferFrom wasn't successful.\""
                        },
                        "value": "TransferFrom wasn't successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_36269b16ee261b10580ffada385911559e23e4009791ff40489914d3fd00ff60",
                          "typeString": "literal_string \"TransferFrom wasn't successful.\""
                        }
                      ],
                      "id": 1214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5755,
                        5756
                      ],
                      "referencedDeclaration": 5756,
                      "src": "6829:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6829:62:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "6829:62:5"
                }
              ]
            },
            "documentation": "@notice It transfers an amount of tokens from an address to this contract.\n@param from address where the tokens will transfer from.\n@param amount to be transferred.\n@dev It throws a require error if 'transferFrom' invocation fails.",
            "id": 1220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenTransferFrom",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1198,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "6691:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6691:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1200,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1220,
                  "src": "6705:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6705:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6690:30:5"
            },
            "returnParameters": {
              "id": 1202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6729:0:5"
            },
            "scope": 1242,
            "src": "6664:234:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1240,
              "nodeType": "Block",
              "src": "7296:115:5",
              "statements": [
                {
                  "assignments": [
                    1228
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1228,
                      "name": "mintResult",
                      "nodeType": "VariableDeclaration",
                      "scope": 1240,
                      "src": "7306:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1227,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "7306:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1234,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1231,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1222,
                        "src": "7336:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1232,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1224,
                        "src": "7340:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1229,
                        "name": "zToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "7324:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZTokenInterface_$2407",
                          "typeString": "contract ZTokenInterface"
                        }
                      },
                      "id": 1230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2406,
                      "src": "7324:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7324:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7306:41:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 1236,
                        "name": "mintResult",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1228,
                        "src": "7365:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e7420776173206e6f74207375636365737366756c2e",
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7377:26:5",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bffcd209d63f56837c00d736bbb9909eeec8369084349989bef0685bf1ad3e7a",
                          "typeString": "literal_string \"Mint was not successful.\""
                        },
                        "value": "Mint was not successful."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bffcd209d63f56837c00d736bbb9909eeec8369084349989bef0685bf1ad3e7a",
                          "typeString": "literal_string \"Mint was not successful.\""
                        }
                      ],
                      "id": 1235,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5755,
                        5756
                      ],
                      "referencedDeclaration": 5756,
                      "src": "7357:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7357:47:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "7357:47:5"
                }
              ]
            },
            "documentation": "@notice It mints zToken tokens, and send them to a specific address.\n@param to address which will receive the minted tokens.\n@param amount to be minted.\n@dev This contract must has a Minter Role in zToken (mintable) token.\n@dev It throws a require error if mint invocation fails.",
            "id": 1241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "zTokenMint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1222,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "7260:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1221,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7260:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1224,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1241,
                  "src": "7272:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1223,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7272:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7259:28:5"
            },
            "returnParameters": {
              "id": 1226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7296:0:5"
            },
            "scope": 1242,
            "src": "7240:171:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "private"
          }
        ],
        "scope": 1243,
        "src": "1316:6097:5"
      }
    ],
    "src": "598:6816:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-29T14:20:38.790Z",
  "devdoc": {
    "methods": {
      "createLoan(uint256,address)": {
        "details": "This function only can be invoked by the LoansInterface implementation.",
        "params": {
          "amount": "of tokens to transfer.",
          "borrower": "address which will receive the tokens."
        }
      },
      "deposit(uint256)": {
        "details": "the user must call ERC20.approve function previously.",
        "params": {
          "amount": "of tokens to deposit in the pool."
        }
      },
      "initialize(address,address,address,address)": {
        "details": "It throws a require error if the contract is already initialized.",
        "params": {
          "lendersAddress": "Lenders contract address.",
          "lendingTokenAddress": "ERC20 token address.",
          "loansAddress": "Loans contract address.",
          "zTokenAddress": "zToken token address."
        }
      },
      "liquidationPayment(uint256,address)": {
        "params": {
          "amount": "of tokens to liquidate.",
          "liquidator": "address to receive the tokens."
        }
      },
      "repay(uint256,address)": {
        "details": "This function can be called ONLY by the Loans contract.It requires a ERC20.approve call before calling it.It throws a require error if borrower called ERC20.approve function before calling it.",
        "params": {
          "amount": "of tokens.",
          "borrower": "address that is repaying the loan."
        }
      },
      "withdraw(uint256)": {
        "params": {
          "amount": "of tokens to withdraw."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createLoan(uint256,address)": {
        "notice": "Once the loan is created, it transfers the amount of tokens to the borrower."
      },
      "deposit(uint256)": {
        "notice": "It allows users to deposit tokens into the pool."
      },
      "initialize(address,address,address,address)": {
        "notice": "It initializes the contract state variables."
      },
      "liquidationPayment(uint256,address)": {
        "notice": "Once a loan is liquidated, it transfers the amount in tokens to the liquidator address."
      },
      "repay(uint256,address)": {
        "notice": "It allows a borrower repaying their loan. "
      },
      "withdraw(uint256)": {
        "notice": "It allows any zToken holder to burn their zToken tokens and withdraw their tokens."
      }
    },
    "notice": "The LendingPool contract holds all of the tokens that lenders transfer into the protocol. It is the contract that lenders interact with to deposit and withdraw their tokens including interest. The LendingPool interacts with the Lenders contract to ensure token balances and interest owed is kept up to date."
  }
}