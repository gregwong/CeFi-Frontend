{
  "contractName": "UniswapMock",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sourceElement",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receivedElement",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "receivedAmount",
          "type": "uint256"
        }
      ],
      "name": "UniswapSwapped",
      "type": "event"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenAddress",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "findTokenIndex",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "canonicalWeth",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "routerAddress",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "sourceAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minDestination",
          "type": "uint256"
        }
      ],
      "name": "swap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bool",
          "name": "failTransaction",
          "type": "bool"
        }
      ],
      "name": "testFunction",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sourceElement\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receivedElement\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"UniswapSwapped\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenAddress\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"findTokenIndex\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"canonicalWeth\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"routerAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"sourceAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minDestination\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"failTransaction\",\"type\":\"bool\"}],\"name\":\"testFunction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"balanceOf(address)\":{\"params\":{\"cTokenAddress\":\"token address.\"},\"return\":\"this contract's balance.\"},\"initialize(address)\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"swap(address,address,address[],uint256,uint256)\":{\"details\":\"This function mainly invokes 3 Uniswap external functions: https://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens\",\"params\":{\"canonicalWeth\":\"address of the canonical WETH in the current network.\",\"minDestination\":\"The minimum amount of output tokens that must be received for the transaction not to revert.\",\"path\":\"An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.\",\"routerAddress\":\"address of the Uniswap Router v02.\",\"sourceAmount\":\"amount of source element (ETH or Tokens) to swap.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"balanceOf(address)\":{\"notice\":\"Returns this contract's balance for the specified token.\"},\"swap(address,address,address[],uint256,uint256)\":{\"notice\":\"Swaps ETH/Tokens for Tokens/ETH using different Uniswap v2 Router 02 methods.\"}},\"notice\":\"This mock is used to expose a payable fallback function on tests.f\"}},\"settings\":{\"compilationTarget\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol\":\"UniswapMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/BaseEscrowDapp.sol\":{\"keccak256\":\"0x91e7f3928c95a7179f22d37da7244feba5db759f4b547f1d104ada4e44358ead\",\"urls\":[\"bzz-raw://6dddf53af085e887451eb9d09636d03dcddb763d63f8ab53fb7a8481bc3ee2f5\",\"dweb:/ipfs/QmWzpQj667ZyiWA3Ey8dh4c37V9WJ829pgonCxqjmqk1b1\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/IUniswap.sol\":{\"keccak256\":\"0xc6028054a5cd60c87efd06457238bb48f8c958b04dcf9fe9d869a41323a7b5da\",\"urls\":[\"bzz-raw://a952975bd36ca7ef5655fdb2ed2e8ae108926dcc6b02e73facf789e1fbb05d17\",\"dweb:/ipfs/QmbxdpE6jiHUoosDvbjPNryasw2Faykeg3deRkgTJm6v6d\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/Uniswap.sol\":{\"keccak256\":\"0xd5d07b4f7249e50ffc1124aeea52549c65c9ac840013753ec248e818f9e807bb\",\"urls\":[\"bzz-raw://96b0ecd3d30a314d400d85cdb1b2c5b66a3d82d2055554bc17a656abda4d5ff5\",\"dweb:/ipfs/QmTjtrh5NCWqTfj8K859cm87X3edsfMbqhFh7mJdpCCnpn\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/DappMock.sol\":{\"keccak256\":\"0xe6d748be8820dfd9c4cbea4e663b947234b442e8f34f6b688dc33cfbe6a6843d\",\"urls\":[\"bzz-raw://c066ee188df4450c1753adc0141bb4a0fc7ece4173903c29b80ad35b48748443\",\"dweb:/ipfs/Qmd1npiVofhoPvqsuQo18FaXhonptx9aDHkQYGseCMag4d\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol\":{\"keccak256\":\"0x5b0180060b349d86865086834e7fb5d0031df817cec0e56f59406621179929b8\",\"urls\":[\"bzz-raw://0362bd5aedb1563b9750159b72159c961a81475af8f56541dd5978bdb5054ccb\",\"dweb:/ipfs/QmSB5zmUmknAfU8J58CAaxJprdfQXdTgcUL2KJ3vwtnDpo\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/providers/uniswap/IUniswapV2Router02.sol\":{\"keccak256\":\"0x538c2a7d631f21222cbf2d84896ccf435cf62052b3d56cdece620acea3ac643f\",\"urls\":[\"bzz-raw://a155fc2d1c3ed03053d29bdb8f726ece865bdf3b220ad444dbb8aa279054bffa\",\"dweb:/ipfs/QmNnZWKzXGQ2UpH2tjvmFmV1EQXoWRmnLVZxr86yxGfRAW\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressArrayLib.sol\":{\"keccak256\":\"0x5486df4c327e0de11b03451478ae59ae368a9266de9ea834cc04cf5f98c52cb2\",\"urls\":[\"bzz-raw://3d85a789bf71f24673c9cd058e904f4a9802e21c5acbd958a2371ee951329467\",\"dweb:/ipfs/QmddMKEJFssfhF7dxFK4r9RXB4aCzn4gLdGXyBvkv7k43y\"]},\"/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/util/AddressLib.sol\":{\"keccak256\":\"0x083fed047aac1bdf656da0bbfa6a9c655659ee953d808ebb0ef68c3dbf7bb806\",\"urls\":[\"bzz-raw://0a7c7f60dc65ae2aa25c6d9dfd728ea1c1ef3cdde3d102104fbb8406304d13a6\",\"dweb:/ipfs/QmRKAxNd7THDSujiYX3AqQh8jckewKt64To41fERUe8upB\"]},\"@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0x3491510fa4862af1a43f6c860d9cf7392240196540cd3c0eea79d374d419c5a1\",\"urls\":[\"bzz-raw://3e51386d74eb723d3acaaddafce1dd0b4082ad4c10ddba6b9fc154aad2930d02\",\"dweb:/ipfs/QmcA8Huap1c7YjdVjx5TGasxKNMLgsa3XyLvQUaMa1nMt8\"]},\"@openzeppelin/contracts-ethereum-package/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xd7e8ab76fa35c4d8d35a06a6ed538cadab8b75a1aa00594ced1568b2c0cadde3\",\"urls\":[\"bzz-raw://a3f816aa3e6161b4cf882ad34755673848d835f7fb964db49bcef9df14570cef\",\"dweb:/ipfs/QmQACSH1W7pKQnqTAqpuEP8ychp3PvosfnyondLaLE1nVq\"]},\"@openzeppelin/contracts-ethereum-package/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts-ethereum-package/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0x9bfec92e36234ecc99b5d37230acb6cd1f99560233753162204104a4897e8721\",\"urls\":[\"bzz-raw://5cf7c208583d4d046d75bd99f5507412ab01cce9dd9f802ce9768a416d93ea2f\",\"dweb:/ipfs/QmcQS1BBMPpVEkXP3qzwSjxHNrqDek8YeR7xbVWDC9ApC7\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80638da5cb5b116100595780638da5cb5b1461021a5780638f32d59b1461024b578063aa6ca80814610274578063c4d66de8146102d9578063f2fde38b1461030c57610091565b80630a11fd07146100935780630fe6d57c146100d857806370a08231146101a6578063715018a6146101d95780637216a096146101ee575b005b34801561009f57600080fd5b506100c6600480360360208110156100b657600080fd5b50356001600160a01b031661033f565b60408051918252519081900360200190f35b3480156100e457600080fd5b50610091600480360360a08110156100fb57600080fd5b6001600160a01b03823581169260208101359091169181019060608101604082013564010000000081111561012f57600080fd5b82018360208201111561014157600080fd5b8035906020019184602083028401116401000000008311171561016357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020013561036f565b3480156101b257600080fd5b506100c6600480360360208110156101c957600080fd5b50356001600160a01b0316610c4e565b3480156101e557600080fd5b50610091610c5f565b3480156101fa57600080fd5b506100916004803603602081101561021157600080fd5b50351515610d02565b34801561022657600080fd5b5061022f610d4f565b604080516001600160a01b039092168252519081900360200190f35b34801561025757600080fd5b50610260610d5f565b604080519115158252519081900360200190f35b34801561028057600080fd5b50610289610d85565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156102c55781810151838201526020016102ad565b505050509050019250505060405180910390f35b3480156102e557600080fd5b50610091600480360360208110156102fc57600080fd5b50356001600160a01b0316610de7565b34801561031857600080fd5b506100916004803603602081101561032f57600080fd5b50356001600160a01b0316610ed9565b6000808061035460668563ffffffff610f3b16565b915091508161036557600019610367565b805b949350505050565b610377610d5f565b6103c8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6103da856001600160a01b0316610f90565b61042b576040805162461bcd60e51b815260206004820152601f60248201527f43414e4f4e4943414c5f574554485f4d5553545f42455f434f4e545241435400604482015290519081900360640190fd5b61043d846001600160a01b0316610f90565b61048e576040805162461bcd60e51b815260206004820152601960248201527f524f555445525f4d5553545f42455f415f434f4e545241435400000000000000604482015290519081900360640190fd5b82518490600211156104e0576040805162461bcd60e51b815260206004820152601660248201527515539254d5d05417d410551217d513d3d7d4d213d49560521b604482015290519081900360640190fd5b6000846000815181106104ef57fe5b6020026020010151905060008560018751038151811061050b57fe5b60200260200101519050610549816040518060600160405280602381526020016115bc602391396001600160a01b038516919063ffffffff610fc916565b6000841161059e576040805162461bcd60e51b815260206004820152601c60248201527f554e49535741505f4d494e5f44455354494e4154494f4e5f5a45524f00000000604482015290519081900360640190fd5b606060006105ab83611063565b9050896001600160a01b0316846001600160a01b0316141561079b578647101561061c576040805162461bcd60e51b815260206004820152601860248201527f554e49535741505f494e53554646494349454e545f4554480000000000000000604482015290519081900360640190fd5b846001600160a01b0316637ff36ab588888b30426040518663ffffffff1660e01b81526004018085815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b838110156106a357818101518382015260200161068b565b50505050905001955050505050506000604051808303818588803b1580156106ca57600080fd5b505af11580156106de573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f19168201604052602081101561070857600080fd5b810190808051604051939291908464010000000082111561072857600080fd5b90830190602082018581111561073d57600080fd5b825186602082028301116401000000008211171561075a57600080fd5b82525081516020918201928201910280838360005b8381101561078757818101518382015260200161076f565b505050509050016040525050509150610b0d565b866107a585611063565b10156107f8576040805162461bcd60e51b815260206004820152601b60248201527f554e49535741505f494e53554646494349454e545f544f4b454e530000000000604482015290519081900360640190fd5b836001600160a01b031663095ea7b38a896040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561085857600080fd5b505af115801561086c573d6000803e3d6000fd5b505050506040513d602081101561088257600080fd5b50506001600160a01b03838116908b16141561098b57846001600160a01b03166318cbafe588888b30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b8381101561092557818101518382015260200161090d565b505050509050019650505050505050600060405180830381600087803b15801561094e57600080fd5b505af1158015610962573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052602081101561070857600080fd5b846001600160a01b03166338ed173988888b30426040518663ffffffff1660e01b81526004018086815260200185815260200180602001846001600160a01b03166001600160a01b03168152602001838152602001828103825285818151815260200191508051906020019060200280838360005b83811015610a18578181015183820152602001610a00565b505050509050019650505050505050600060405180830381600087803b158015610a4157600080fd5b505af1158015610a55573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015610a7e57600080fd5b8101908080516040519392919084640100000000821115610a9e57600080fd5b908301906020820185811115610ab357600080fd5b8251866020820283011164010000000082111715610ad057600080fd5b82525081516020918201928201910280838360005b83811015610afd578181015183820152602001610ae5565b5050505090500160405250505091505b6000610b1884611063565b9050868201811015610b71576040805162461bcd60e51b815260206004820152601d60248201527f554e49535741505f42414c414e43455f4e4f545f494e43524541534544000000604482015290519081900360640190fd5b8851835114610bc0576040805162461bcd60e51b8152602060048201526016602482015275554e49535741505f4552524f525f5357415050494e4760501b604482015290519081900360640190fd5b600083600185510381518110610bd257fe5b60200260200101519050610be5866110df565b610bee856110df565b604080516001600160a01b038781168252602082018c9052818301849052915191881691309133917fe583dc6e14f16809fc9c729fa4a864f989d693022d62e79275fc497251201c669181900360600190a4505050505050505050505050565b6000610c5982611063565b92915050565b610c67610d5f565b610cb8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6033546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3603380546001600160a01b0319169055565b8015610d4c576040805162461bcd60e51b8152602060048201526014602482015273151154d517d1955390d51253d397d1905253115160621b604482015290519081900360640190fd5b50565b6033546001600160a01b03165b90565b6033546000906001600160a01b0316610d76611141565b6001600160a01b031614905090565b60606066805480602002602001604051908101604052809291908181526020018280548015610ddd57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610dbf575b5050505050905090565b600054610100900460ff1680610e005750610e00611145565b80610e0e575060005460ff16155b610e495760405162461bcd60e51b815260040180806020018281038252602e8152602001806115df602e913960400191505060405180910390fd5b600054610100900460ff16158015610e74576000805460ff1961ff0019909116610100171660011790555b603380546001600160a01b0319166001600160a01b0384811691909117918290556040519116906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a38015610ed5576000805461ff00191690555b5050565b610ee1610d5f565b610f32576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b610d4c8161114b565b6000805b8354811015610f8957826001600160a01b0316848281548110610f5e57fe5b6000918252602090912001546001600160a01b03161491508115610f8157610f89565b600101610f3f565b9250929050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610367575050151592915050565b610fd383836111ec565b819061105d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561102257818101518382015260200161100a565b50505050905090810190601f16801561104f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050565b604080516370a0823160e01b815230600482015290516000916001600160a01b038416916370a0823191602480820192602092909190829003018186803b1580156110ad57600080fd5b505afa1580156110c1573d6000803e3d6000fd5b505050506040513d60208110156110d757600080fd5b505192915050565b6000806110f360668463ffffffff610f3b16565b91509150600061110284611063565b111561112557816111205761111e60668463ffffffff6111fe16565b505b61113c565b811561113c5761105d60668263ffffffff6112e716565b505050565b3390565b303b1590565b6001600160a01b0381166111905760405162461bcd60e51b81526004018080602001828103825260268152602001806115966026913960400191505060405180910390fd5b6033546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3603380546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b039081169116141590565b60606001600160a01b03821661125b576040805162461bcd60e51b815260206004820152601960248201527f454d5054595f414444524553535f4e4f545f414c4c4f57454400000000000000604482015290519081900360640190fd5b8254600181018455600084815260209081902090910180546001600160a01b0319166001600160a01b03851617905583546040805182840281018401909152818152918591908301828280156112da57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116112bc575b5050505050905092915050565b8154606090821061134f5782546040805160208084028201810190925282815291859183018282801561134357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611325575b50505050509050610c59565b8254600019018214156113f35782548390600019810190811061136e57fe5b600091825260209091200180546001600160a01b03191690558254611397846000198301611558565b50825460408051602080840282018101909252828152918591830182828015611343576020028201919060005260206000209081546001600160a01b031681526001909101906020018083116113255750505050509050610c59565b82546000908490600019810190811061140857fe5b60009182526020909120015484546001600160a01b03909116915084908490811061142f57fe5b60009182526020909120015484546001600160a01b03909116908590600019810190811061145957fe5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b031602179055508084848154811061149457fe5b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790558354849060001981019081106114cf57fe5b600091825260209091200180546001600160a01b031916905583546114f8856000198301611558565b5083546040805160208084028201810190925282815291869183018282801561154a57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161152c575b505050505091505092915050565b81548183558181111561113c5760008381526020902061113c918101908301610d5c91905b80821115611591576000815560010161157d565b509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373554e49535741505f534f555243455f414e445f44455354494e4154494f4e5f53414d45436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820fd78face9007d6e50df00f84e14a2fbc7b309a42b6cb80bb255990d3d5011c3c64736f6c63430005110032",
  "sourceMap": "190:154:75:-;;;238:68;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:68:75;269:30;288:10;269:18;;;;;:30;;:::i;:::-;190:154;;741:142:125;1024:12:134;;;;;;;;:31;;-1:-1:-1;1040:15:134;-1:-1:-1;;;;;1040:13:134;:15;:::i;:::-;1024:47;;;-1:-1:-1;1060:11:134;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:134;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:125;:15;;-1:-1:-1;;;;;;806:15:125;-1:-1:-1;;;;;806:15:125;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:125;;-1:-1:-1;;836:40:125;1268:14:134;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:134;;;1264:55;741:142:125;;:::o;1409:498:134:-;1820:4;1864:17;1895:7;1409:498;:::o;190:154:75:-;;;;;;;",
  "deployedSourceMap": "190:154:75:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;565:196:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;565:196:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;565:196:9;-1:-1:-1;;;;;565:196:9;;:::i;:::-;;;;;;;;;;;;;;;;2904:2502:37;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2904:2502:37;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;2904:2502:37;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2904:2502:37;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2904:2502:37;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;2904:2502:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;2904:2502:37;;-1:-1:-1;;2904:2502:37;;;-1:-1:-1;;;2904:2502:37;;;;:::i;941:121:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;941:121:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;941:121:9;-1:-1:-1;;;;;941:121:9;;:::i;1746:137:125:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1746:137:125;;;:::i;49:124:74:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:124:74;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;49:124:74;;;;:::i;959:77:125:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:77:125;;;:::i;:::-;;;;-1:-1:-1;;;;;959:77:125;;;;;;;;;;;;;;1310:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1310:92:125;;;:::i;:::-;;;;;;;;;;;;;;;;;;469:90:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;469:90:9;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;469:90:9;;;;;;;;;;;;;;;;;741:142:125;;8:9:-1;5:2;;;30:1;27;20:12;5:2;741:142:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;741:142:125;-1:-1:-1;;;;;741:142:125;;:::i;2032:107::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2032:107:125;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2032:107:125;-1:-1:-1;;;;;2032:107:125;;:::i;565:196:9:-;634:6;;;682:29;:6;698:12;682:29;:15;:29;:::i;:::-;652:59;;;;728:5;:26;;-1:-1:-1;;728:26:9;;;743:5;728:26;721:33;565:196;-1:-1:-1;;;;565:196:9:o;2904:2502:37:-;1163:9:125;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3116:26:37;:13;-1:-1:-1;;;;;3116:24:37;;:26::i;:::-;3108:70;;;;;-1:-1:-1;;;3108:70:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;3196:26;:13;-1:-1:-1;;;;;3196:24:37;;:26::i;:::-;3188:64;;;;;-1:-1:-1;;;3188:64:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;3342:11;;3309:13;;3357:1;-1:-1:-1;3342:16:37;3334:51;;;;;-1:-1:-1;;;3334:51:37;;;;;;;;;;;;-1:-1:-1;;;3334:51:37;;;;;;;;;;;;;;;3395:14;3412:4;3417:1;3412:7;;;;;;;;;;;;;;3395:24;;3429:19;3451:4;3470:1;3456:4;:11;:15;3451:21;;;;;;;;;;;;;;3429:43;;3483:76;3508:11;3483:76;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3483:24:37;;;:76;;:24;:76;:::i;:::-;3594:1;3577:14;:18;3569:59;;;;;-1:-1:-1;;;3569:59:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;3671:24;3705:25;3733:23;3744:11;3733:10;:23::i;:::-;3705:51;;3781:13;-1:-1:-1;;;;;3771:23:37;:6;-1:-1:-1;;;;;3771:23:37;;3767:1036;;;3843:12;3818:21;:37;;3810:74;;;;;-1:-1:-1;;;3810:74:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;3908:6;-1:-1:-1;;;;;3908:28:37;;3943:12;3974:14;4006:4;4036;4059:3;3908:168;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3908:168:37;-1:-1:-1;;;;;3908:168:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3908:168:37;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3908:168:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3908:168:37;;;;;;;39:16:-1;36:1;17:17;2:54;101:4;3908:168:37;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;3908:168:37;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;3908:168:37;;421:4:-1;412:14;;;;3908:168:37;;;;;412:14:-1;3908:168:37;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3908:168:37;;;;;;;;;;;3898:178;;3767:1036;;;4137:12;4115:18;4126:6;4115:10;:18::i;:::-;:34;;4107:74;;;;;-1:-1:-1;;;4107:74:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;4202:6;-1:-1:-1;;;;;4195:22:37;;4218:13;4233:12;4195:51;;;;;;;;;;;;;-1:-1:-1;;;;;4195:51:37;-1:-1:-1;;;;;4195:51:37;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4195:51:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4195:51:37;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;;4264:28:37;;;;;;;4260:533;;;4322:6;-1:-1:-1;;;;;4322:28:37;;4372:12;4406:14;4442:4;4476;4503:3;4322:202;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4322:202:37;-1:-1:-1;;;;;4322:202:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4322:202:37;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4322:202:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4322:202:37;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4322:202:37;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;4260:533:37;4573:6;-1:-1:-1;;;;;4573:31:37;;4626:12;4660:14;4696:4;4730;4757:3;4573:205;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4573:205:37;-1:-1:-1;;;;;4573:205:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4573:205:37;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4573:205:37;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4573:205:37;;;;;;39:16:-1;36:1;17:17;2:54;101:4;4573:205:37;80:15:-1;;;-1:-1;;76:31;65:43;;120:4;113:20;13:2;5:11;;2:2;;;29:1;26;19:12;2:2;4573:205:37;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;219:3;213:10;331:9;325:2;311:12;307:21;289:16;285:44;282:59;261:11;247:12;244:29;233:116;230:2;;;362:1;359;352:12;230:2;373:25;;-1:-1;4573:205:37;;421:4:-1;412:14;;;;4573:205:37;;;;;412:14:-1;4573:205:37;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;4573:205:37;;;;;;;;;;;4563:215;;4260:533;4813:24;4840:23;4851:11;4840:10;:23::i;:::-;4813:50;;4935:14;4915:17;:34;4894:16;:56;;4873:132;;;;;-1:-1:-1;;;4873:132:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;5041:4;:11;5023:7;:14;:29;5015:64;;;;;-1:-1:-1;;;5015:64:37;;;;;;;;;;;;-1:-1:-1;;;5015:64:37;;;;;;;;;;;;;;;5089:22;5114:7;5139:1;5122:7;:14;:18;5114:27;;;;;;;;;;;;;;5089:52;;5152:21;5166:6;5152:13;:21::i;:::-;5183:26;5197:11;5183:13;:26::i;:::-;5225:174;;;-1:-1:-1;;;;;5225:174:37;;;;;;;;;;;;;;;;;;;;;;;5285:4;;5253:10;;5225:174;;;;;;;;;1219:1:125;;;;;;;2904:2502:37;;;;;:::o;941:121:9:-;1004:7;1030:25;1041:13;1030:10;:25::i;:::-;1023:32;941:121;-1:-1:-1;;941:121:9:o;1746:137:125:-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1828:6;;1807:40;;1844:1;;-1:-1:-1;;;;;1828:6:125;;1807:40;;1844:1;;1807:40;1857:6;:19;;-1:-1:-1;;;;;;1857:19:125;;;1746:137::o;49:124:74:-;126:15;125:16;117:49;;;;;-1:-1:-1;;;117:49:74;;;;;;;;;;;;-1:-1:-1;;;117:49:74;;;;;;;;;;;;;;;49:124;:::o;959:77:125:-;1023:6;;-1:-1:-1;;;;;1023:6:125;959:77;;:::o;1310:92::-;1389:6;;1350:4;;-1:-1:-1;;;;;1389:6:125;1373:12;:10;:12::i;:::-;-1:-1:-1;;;;;1373:22:125;;1366:29;;1310:92;:::o;469:90:9:-;511:16;546:6;539:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;539:13:9;;;;;;;;;;;;;;;;;;;;;;;469:90;:::o;741:142:125:-;1024:12:134;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:134;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:134;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:134;;;;;1225:18;1213:4;1225:18;;;1170:80;806:6:125;:15;;-1:-1:-1;;;;;;806:15:125;-1:-1:-1;;;;;806:15:125;;;;;;;;;;;836:40;;869:6;;;-1:-1:-1;;836:40:125;;-1:-1:-1;;836:40:125;1268:14:134;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:134;;;1264:55;741:142:125;;:::o;2032:107::-;1163:9;:7;:9::i;:::-;1155:54;;;;;-1:-1:-1;;;1155:54:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2104:28;2123:8;2104:18;:28::i;1629:394:102:-;1732:10;;1798:186;1826:11;;1816:21;;1798:186;;;1889:4;-1:-1:-1;;;;;1872:21:102;:4;1877:7;1872:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1872:13:102;:21;;-1:-1:-1;1907:67:102;;;;1936:23;;1907:67;1839:9;;1798:186;;;1629:394;;;;;:::o;686:610:131:-;746:4;1207:20;;1052:66;1246:23;;;;;;:42;;-1:-1:-1;;1273:15:131;;;686:610;-1:-1:-1;;686:610:131:o;2749:183:103:-;2890:25;2903:4;2909:5;2890:12;:25::i;:::-;2917:7;2882:43;;;;;-1:-1:-1;;;2882:43:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2882:43:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2749:183;;;:::o;1068:143:9:-;1159:45;;;-1:-1:-1;;;1159:45:9;;1198:4;1159:45;;;;;;1133:7;;-1:-1:-1;;;;;1159:30:9;;;;;:45;;;;;;;;;;;;;;;:30;:45;;;5:2:-1;;;;30:1;27;20:12;5:2;1159:45:9;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1159:45:9;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1159:45:9;;1068:143;-1:-1:-1;;1068:143:9:o;1217:330::-;1282:10;;1311:29;:6;1327:12;1311:29;:15;:29;:::i;:::-;1281:59;;;;1381:1;1354:24;1365:12;1354:10;:24::i;:::-;:28;1350:191;;;1403:5;1398:69;;1428:24;:6;1439:12;1428:24;:10;:24;:::i;:::-;;1398:69;1350:191;;;1487:5;1483:58;;;1508:22;:6;1524:5;1508:22;:15;:22;:::i;1483:58::-;1217:330;;;:::o;867:96:115:-;946:10;867:96;:::o;1409:498:134:-;1820:4;1864:17;1895:7;1409:498;:::o;2240:225:125:-;-1:-1:-1;;;;;2313:22:125;;2305:73;;;;-1:-1:-1;;;2305:73:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:6;;2393:38;;-1:-1:-1;;;;;2393:38:125;;;;2414:6;;2393:38;;2414:6;;2393:38;2441:6;:17;;-1:-1:-1;;;;;;2441:17:125;-1:-1:-1;;;;;2441:17:125;;;;;;;;;;2240:225::o;1018:117:103:-;-1:-1:-1;;;;;1115:13:103;;;;;;;;1018:117::o;360:237:102:-;448:16;-1:-1:-1;;;;;488:23:102;;480:61;;;;;-1:-1:-1;;;480:61:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;39:1;23:18;;45:23;;-1:-1;551:18:102;;;;;;;;;;;;;-1:-1:-1;;;;;;551:18:102;-1:-1:-1;;;;;551:18:102;;;;;579:11;;;;;;;;;;;;;;;;;;;27:10:-1;;579:11:102;;;27:10:-1;579:11:102;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;579:11:102;;;;;;;;;;;;;;;;;;;;;;;360:237;;;;:::o;835:516::-;971:11;;926:16;;962:20;;958:37;;984:11;;;;;;;;;;;;;;;;;;;;991:4;;984:11;;991:4;984:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;984:11:102;;;;;;;;;;;;;;;;;;;;;;;;;958:37;1019:11;;-1:-1:-1;;1019:15:102;1010:24;;1006:135;;;1062:11;;1057:4;;-1:-1:-1;;1062:15:102;;;1057:21;;;;;;;;;;;;;;;1050:28;;-1:-1:-1;;;;;;1050:28:102;;;1092:13;;;:4;-1:-1:-1;;1092:13:102;;;:::i;:::-;-1:-1:-1;1119:11:102;;;;;;;;;;;;;;;;;;;;1126:4;;1119:11;;1126:4;1119:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1119:11:102;;;;;;;;;;;;;;;;;;;;;;;;1006:135;1171:11;;1151:12;;1166:4;;-1:-1:-1;;1171:15:102;;;1166:21;;;;;;;;;;;;;;;;1221:11;;-1:-1:-1;;;;;1166:21:102;;;;-1:-1:-1;1221:4:102;;1226:5;;1221:11;;;;;;;;;;;;;;;;1202;;-1:-1:-1;;;;;1221:11:102;;;;1197:4;;-1:-1:-1;;1202:15:102;;;1197:21;;;;;;;;;;;;;;:35;;;;;-1:-1:-1;;;;;1197:35:102;;;;;-1:-1:-1;;;;;1197:35:102;;;;;;1256:4;1242;1247:5;1242:11;;;;;;;;;;;;;;;;;:18;;-1:-1:-1;;;;;;1242:18:102;-1:-1:-1;;;;;1242:18:102;;;;;;;;;;1283:11;;;;-1:-1:-1;;1283:15:102;;;1278:21;;;;;;;;;;;;;;;1271:28;;-1:-1:-1;;;;;;1271:28:102;;;1309:13;;;:4;-1:-1:-1;;1309:13:102;;;:::i;:::-;-1:-1:-1;1333:11:102;;;;;;;;;;;;;;;;;;;;1340:4;;1333:11;;1340:4;1333:11;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1333:11:102;;;;;;;;;;;;;;;;;;;;;;;;835:516;;;;:::o;190:154:75:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.5.17;\n\nimport \"../../../../base/escrow/dapps/Uniswap.sol\";\nimport \"./DappMock.sol\";\n\n/**\n    @notice This mock is used to expose a payable fallback function on tests.f\n */\ncontract UniswapMock is DappMock, Uniswap {\n    constructor() public {\n        Ownable.initialize(msg.sender);\n    }\n\n    function() external payable {}\n}\n",
  "sourcePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol",
  "ast": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol",
    "exportedSymbols": {
      "UniswapMock": [
        13031
      ]
    },
    "id": 13032,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13009,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:75"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/Uniswap.sol",
        "file": "../../../../base/escrow/dapps/Uniswap.sol",
        "id": 13010,
        "nodeType": "ImportDirective",
        "scope": 13032,
        "sourceUnit": 9862,
        "src": "25:51:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/DappMock.sol",
        "file": "./DappMock.sol",
        "id": 13011,
        "nodeType": "ImportDirective",
        "scope": 13032,
        "sourceUnit": 13008,
        "src": "77:24:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13012,
              "name": "DappMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13007,
              "src": "214:8:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DappMock_$13007",
                "typeString": "contract DappMock"
              }
            },
            "id": 13013,
            "nodeType": "InheritanceSpecifier",
            "src": "214:8:75"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13014,
              "name": "Uniswap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9861,
              "src": "224:7:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uniswap_$9861",
                "typeString": "contract Uniswap"
              }
            },
            "id": 13015,
            "nodeType": "InheritanceSpecifier",
            "src": "224:7:75"
          }
        ],
        "contractDependencies": [
          2497,
          9624,
          9861,
          13007,
          18854,
          20046,
          20952
        ],
        "contractKind": "contract",
        "documentation": "@notice This mock is used to expose a payable fallback function on tests.f",
        "fullyImplemented": true,
        "id": 13031,
        "linearizedBaseContracts": [
          13031,
          9861,
          2497,
          20046,
          18854,
          20952,
          9624,
          13007
        ],
        "name": "UniswapMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13025,
              "nodeType": "Block",
              "src": "259:47:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13021,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21082,
                          "src": "288:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "288:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13018,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20046,
                        "src": "269:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$20046_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 13020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19957,
                      "src": "269:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:30:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13024,
                  "nodeType": "ExpressionStatement",
                  "src": "269:30:75"
                }
              ]
            },
            "documentation": null,
            "id": 13026,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:75"
            },
            "returnParameters": {
              "id": 13017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:75"
            },
            "scope": 13031,
            "src": "238:68:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13029,
              "nodeType": "Block",
              "src": "340:2:75",
              "statements": []
            },
            "documentation": null,
            "id": 13030,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:75"
            },
            "returnParameters": {
              "id": 13028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:0:75"
            },
            "scope": 13031,
            "src": "312:30:75",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13032,
        "src": "190:154:75"
      }
    ],
    "src": "0:345:75"
  },
  "legacyAST": {
    "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/UniswapMock.sol",
    "exportedSymbols": {
      "UniswapMock": [
        13031
      ]
    },
    "id": 13032,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13009,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:75"
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/base/escrow/dapps/Uniswap.sol",
        "file": "../../../../base/escrow/dapps/Uniswap.sol",
        "id": 13010,
        "nodeType": "ImportDirective",
        "scope": 13032,
        "sourceUnit": 9862,
        "src": "25:51:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/sy/Documents/GitHub/teller-protocol-v1/contracts/mock/base/escrow/dapps/DappMock.sol",
        "file": "./DappMock.sol",
        "id": 13011,
        "nodeType": "ImportDirective",
        "scope": 13032,
        "sourceUnit": 13008,
        "src": "77:24:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13012,
              "name": "DappMock",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 13007,
              "src": "214:8:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DappMock_$13007",
                "typeString": "contract DappMock"
              }
            },
            "id": 13013,
            "nodeType": "InheritanceSpecifier",
            "src": "214:8:75"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 13014,
              "name": "Uniswap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9861,
              "src": "224:7:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Uniswap_$9861",
                "typeString": "contract Uniswap"
              }
            },
            "id": 13015,
            "nodeType": "InheritanceSpecifier",
            "src": "224:7:75"
          }
        ],
        "contractDependencies": [
          2497,
          9624,
          9861,
          13007,
          18854,
          20046,
          20952
        ],
        "contractKind": "contract",
        "documentation": "@notice This mock is used to expose a payable fallback function on tests.f",
        "fullyImplemented": true,
        "id": 13031,
        "linearizedBaseContracts": [
          13031,
          9861,
          2497,
          20046,
          18854,
          20952,
          9624,
          13007
        ],
        "name": "UniswapMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13025,
              "nodeType": "Block",
              "src": "259:47:75",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 13021,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21082,
                          "src": "288:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 13022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "288:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13018,
                        "name": "Ownable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20046,
                        "src": "269:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Ownable_$20046_$",
                          "typeString": "type(contract Ownable)"
                        }
                      },
                      "id": 13020,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19957,
                      "src": "269:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 13023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "269:30:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13024,
                  "nodeType": "ExpressionStatement",
                  "src": "269:30:75"
                }
              ]
            },
            "documentation": null,
            "id": 13026,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:2:75"
            },
            "returnParameters": {
              "id": 13017,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:0:75"
            },
            "scope": 13031,
            "src": "238:68:75",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13029,
              "nodeType": "Block",
              "src": "340:2:75",
              "statements": []
            },
            "documentation": null,
            "id": 13030,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:75"
            },
            "returnParameters": {
              "id": 13028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:0:75"
            },
            "scope": 13031,
            "src": "312:30:75",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 13032,
        "src": "190:154:75"
      }
    ],
    "src": "0:345:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-15T21:09:31.440Z",
  "devdoc": {
    "methods": {
      "balanceOf(address)": {
        "params": {
          "cTokenAddress": "token address."
        },
        "return": "this contract's balance."
      },
      "initialize(address)": {
        "details": "Initializes the contract setting the deployer as the initial owner."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "swap(address,address,address[],uint256,uint256)": {
        "details": "This function mainly invokes 3 Uniswap external functions: https://uniswap.org/docs/v2/smart-contracts/router02/#swapexactethfortokens https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensforeth https://uniswap.org/docs/v2/smart-contracts/router02/#swapexacttokensfortokens",
        "params": {
          "canonicalWeth": "address of the canonical WETH in the current network.",
          "minDestination": "The minimum amount of output tokens that must be received for the transaction not to revert.",
          "path": "An array of token addresses. path.length must be >= 2. Pools for each consecutive pair of addresses must exist and have liquidity.",
          "routerAddress": "address of the Uniswap Router v02.",
          "sourceAmount": "amount of source element (ETH or Tokens) to swap."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "balanceOf(address)": {
        "notice": "Returns this contract's balance for the specified token."
      },
      "swap(address,address,address[],uint256,uint256)": {
        "notice": "Swaps ETH/Tokens for Tokens/ETH using different Uniswap v2 Router 02 methods."
      }
    },
    "notice": "This mock is used to expose a payable fallback function on tests.f"
  }
}