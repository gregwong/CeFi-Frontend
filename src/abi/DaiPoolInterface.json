{
  "contractName": "DAIPoolInterface",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DaiDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DaiRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "DaiWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PaymentLiquidated",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositDai",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawDai",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "repayDai",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        }
      ],
      "name": "liquidationPayment",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        }
      ],
      "name": "createLoan",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawInterest",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DaiDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DaiRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DaiWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PaymentLiquidated\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"createLoan\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositDai\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"}],\"name\":\"liquidationPayment\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"}],\"name\":\"repayDai\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawDai\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawInterest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"createLoan(uint256,address)\":{\"details\":\"This function only can be invoked by the LoansInterface implementation.It throws a require error if current DAI balance isn't enough to transfer the DAIs.\",\"params\":{\"amount\":\"of DAI tokens to transfer.\",\"borrower\":\"address which will receive the DAI tokens.\"}},\"depositDai(uint256)\":{\"details\":\"the user must call DAI.approve function previously.\",\"params\":{\"amount\":\"of DAIs to deposit in the pool.\"}},\"liquidationPayment(uint256,address)\":{\"details\":\"It throws a require error if this contract hasn't enough DAI balance.\",\"params\":{\"amount\":\"in DAI tokens to liquidate.\",\"liquidator\":\"address to receive the tokens.\"}},\"repayDai(uint256,address)\":{\"details\":\"This function can be called ONLY by the Loans contract.It requires a DAI.approve call before calling it.It throws a require error if borrower called DAI.approve function before calling it.\",\"params\":{\"amount\":\"in DAI tokens.\",\"borrower\":\"address that is repaying the loan.\"}},\"withdrawDai(uint256)\":{\"details\":\"It throws a require error if the contract hasn't enough DAI balance.It throws a require error if the holder hasn't enough zDAI balance.\",\"params\":{\"amount\":\"of DAI tokens to withdraw.\"}}}},\"userdoc\":{\"methods\":{\"createLoan(uint256,address)\":{\"notice\":\"\\u00d8nce the loan is created, it transfers the amount of DAIs to the borrower.\"},\"depositDai(uint256)\":{\"notice\":\"It allows users to deposit DAIs into the pool.\"},\"liquidationPayment(uint256,address)\":{\"notice\":\"Once a loan is liquidated, it transfers the amount in DAI tokens to the liquidator address.\"},\"repayDai(uint256,address)\":{\"notice\":\"It allows a borrower repaying their loan. \"},\"withdrawDai(uint256)\":{\"notice\":\"It allows any zDAI holder to burn their zDAI tokens and withdraw their DAIs.\"}},\"notice\":\"This interface defines the functions for a DAI pool that holds all of the DAI that lenders transfer into the protocol.\"}},\"settings\":{\"compilationTarget\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/DAIPoolInterface.sol\":\"DAIPoolInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/DAIPoolInterface.sol\":{\"keccak256\":\"0x2ee9149875c820c0d2ba36b1c547f9ecfc7b9f79eb5b8c8890c5785fb7865730\",\"urls\":[\"bzz-raw://9adb4de02e288f514526748b783f49a5cf5be0cec0bb364f0c68d828c572e184\",\"dweb:/ipfs/QmSVFd19SXoYigaqf9EZkVPUmxWfbw6d197n79bUgag6pN\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity 0.5.17;\n\n\n/**\n    @notice This interface defines the functions for a DAI pool that holds all of the DAI that lenders transfer into the protocol.\n */\ninterface DAIPoolInterface {\n    /**\n        @notice It allows users to deposit DAIs into the pool.\n        @dev the user must call DAI.approve function previously.\n        @param amount of DAIs to deposit in the pool.\n    */\n    function depositDai(uint256 amount) external;\n\n    /**\n        @notice It allows any zDAI holder to burn their zDAI tokens and withdraw their DAIs.\n        @param amount of DAI tokens to withdraw.\n        @dev It throws a require error if the contract hasn't enough DAI balance.\n        @dev It throws a require error if the holder hasn't enough zDAI balance.\n     */\n    function withdrawDai(uint256 amount) external;\n\n    /**\n        @notice It allows a borrower repaying their loan. \n        @dev This function can be called ONLY by the Loans contract.\n        @dev It requires a DAI.approve call before calling it.\n        @dev It throws a require error if borrower called DAI.approve function before calling it.\n        @param amount in DAI tokens.\n        @param borrower address that is repaying the loan.\n     */\n    function repayDai(uint256 amount, address borrower) external;\n\n    /**\n        @notice Once a loan is liquidated, it transfers the amount in DAI tokens to the liquidator address.\n        @param amount in DAI tokens to liquidate.\n        @param liquidator address to receive the tokens.\n        @dev It throws a require error if this contract hasn't enough DAI balance.\n     */\n    function liquidationPayment(uint256 amount, address liquidator) external;\n\n    /**\n        @notice Ønce the loan is created, it transfers the amount of DAIs to the borrower.\n        @param amount of DAI tokens to transfer.\n        @param borrower address which will receive the DAI tokens.\n        @dev This function only can be invoked by the LoansInterface implementation.\n        @dev It throws a require error if current DAI balance isn't enough to transfer the DAIs.\n     */\n    function createLoan(uint256 amount, address borrower) external;\n\n    function withdrawInterest(uint256 amount) external;\n\n    /**\n        @notice This event is emitted when an user deposits DAI tokens into the pool.\n        @param sender address.\n        @param amount of DAI tokens.\n     */\n    event DaiDeposited(address indexed sender, uint256 amount);\n\n    /**\n        @notice This event is emitted when an user withdraws DAI tokens from the pool.\n        @param sender address that withdrew the DAIs tokens.\n        @param amount of DAI tokens.\n     */\n    event DaiWithdrawn(address indexed sender, uint256 amount);\n\n    /**\n        @notice This event is emitted when an borrower repaid a loan.\n        @param borrower address.\n        @param amount in DAIs.\n     */\n    event DaiRepaid(address indexed borrower, uint256 amount);\n\n    /**\n        @notice This event is emitted when a liquidator liquidates a loan.\n        @param liquidator address.\n        @param amount of DAI tokens.\n     */\n    event PaymentLiquidated(address indexed liquidator, uint256 amount);\n}\n",
  "sourcePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/DAIPoolInterface.sol",
  "ast": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/DAIPoolInterface.sol",
    "exportedSymbols": {
      "DAIPoolInterface": [
        1668
      ]
    },
    "id": 1669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1607,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice This interface defines the functions for a DAI pool that holds all of the DAI that lenders transfer into the protocol.",
        "fullyImplemented": false,
        "id": 1668,
        "linearizedBaseContracts": [
          1668
        ],
        "name": "DAIPoolInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice It allows users to deposit DAIs into the pool.\n@dev the user must call DAI.approve function previously.\n@param amount of DAIs to deposit in the pool.",
            "id": 1612,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDai",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1609,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "415:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:16:6"
            },
            "returnParameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:0:6"
            },
            "scope": 1668,
            "src": "395:45:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows any zDAI holder to burn their zDAI tokens and withdraw their DAIs.\n@param amount of DAI tokens to withdraw.\n@dev It throws a require error if the contract hasn't enough DAI balance.\n@dev It throws a require error if the holder hasn't enough zDAI balance.",
            "id": 1617,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDai",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1614,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "788:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:16:6"
            },
            "returnParameters": {
              "id": 1616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:0:6"
            },
            "scope": 1668,
            "src": "767:46:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows a borrower repaying their loan. \n@dev This function can be called ONLY by the Loans contract.\n@dev It requires a DAI.approve call before calling it.\n@dev It throws a require error if borrower called DAI.approve function before calling it.\n@param amount in DAI tokens.\n@param borrower address that is repaying the loan.",
            "id": 1624,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "repayDai",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1619,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "1238:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1621,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "1254:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:34:6"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:6"
            },
            "scope": 1668,
            "src": "1220:61:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Once a loan is liquidated, it transfers the amount in DAI tokens to the liquidator address.\n@param amount in DAI tokens to liquidate.\n@param liquidator address to receive the tokens.\n@dev It throws a require error if this contract hasn't enough DAI balance.",
            "id": 1631,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidationPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1626,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "1629:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1628,
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "1645:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1628:36:6"
            },
            "returnParameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:6"
            },
            "scope": 1668,
            "src": "1601:73:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Ønce the loan is created, it transfers the amount of DAIs to the borrower.\n@param amount of DAI tokens to transfer.\n@param borrower address which will receive the DAI tokens.\n@dev This function only can be invoked by the LoansInterface implementation.\n@dev It throws a require error if current DAI balance isn't enough to transfer the DAIs.",
            "id": 1638,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "2106:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1635,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "2122:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2105:34:6"
            },
            "returnParameters": {
              "id": 1637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2148:0:6"
            },
            "scope": 1668,
            "src": "2086:63:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 1643,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1640,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "2181:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2180:16:6"
            },
            "returnParameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2205:0:6"
            },
            "scope": 1668,
            "src": "2155:51:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user deposits DAI tokens into the pool.\n@param sender address.\n@param amount of DAI tokens.",
            "id": 1649,
            "name": "DaiDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1645,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "2401:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1647,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "2425:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2400:40:6"
            },
            "src": "2382:59:6"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user withdraws DAI tokens from the pool.\n@param sender address that withdrew the DAIs tokens.\n@param amount of DAI tokens.",
            "id": 1655,
            "name": "DaiWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1655,
                  "src": "2667:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2667:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1655,
                  "src": "2691:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2666:40:6"
            },
            "src": "2648:59:6"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an borrower repaid a loan.\n@param borrower address.\n@param amount in DAIs.",
            "id": 1661,
            "name": "DaiRepaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1657,
                  "indexed": true,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "2879:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1659,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "2905:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2878:42:6"
            },
            "src": "2863:58:6"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when a liquidator liquidates a loan.\n@param liquidator address.\n@param amount of DAI tokens.",
            "id": 1667,
            "name": "PaymentLiquidated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "indexed": true,
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "3114:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3114:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "3142:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3113:44:6"
            },
            "src": "3090:68:6"
          }
        ],
        "scope": 1669,
        "src": "165:2995:6"
      }
    ],
    "src": "0:3161:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/guillesalazar/Repos/ZeroCollateral/smart-contracts-v1/contracts/interfaces/DAIPoolInterface.sol",
    "exportedSymbols": {
      "DAIPoolInterface": [
        1668
      ]
    },
    "id": 1669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1607,
        "literals": [
          "solidity",
          "0.5",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": "@notice This interface defines the functions for a DAI pool that holds all of the DAI that lenders transfer into the protocol.",
        "fullyImplemented": false,
        "id": 1668,
        "linearizedBaseContracts": [
          1668
        ],
        "name": "DAIPoolInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": "@notice It allows users to deposit DAIs into the pool.\n@dev the user must call DAI.approve function previously.\n@param amount of DAIs to deposit in the pool.",
            "id": 1612,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositDai",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1609,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1612,
                  "src": "415:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1608,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "414:16:6"
            },
            "returnParameters": {
              "id": 1611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "439:0:6"
            },
            "scope": 1668,
            "src": "395:45:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows any zDAI holder to burn their zDAI tokens and withdraw their DAIs.\n@param amount of DAI tokens to withdraw.\n@dev It throws a require error if the contract hasn't enough DAI balance.\n@dev It throws a require error if the holder hasn't enough zDAI balance.",
            "id": 1617,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawDai",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1614,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1617,
                  "src": "788:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1613,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "788:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "787:16:6"
            },
            "returnParameters": {
              "id": 1616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:0:6"
            },
            "scope": 1668,
            "src": "767:46:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice It allows a borrower repaying their loan. \n@dev This function can be called ONLY by the Loans contract.\n@dev It requires a DAI.approve call before calling it.\n@dev It throws a require error if borrower called DAI.approve function before calling it.\n@param amount in DAI tokens.\n@param borrower address that is repaying the loan.",
            "id": 1624,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "repayDai",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1619,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "1238:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1618,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1621,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1624,
                  "src": "1254:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1237:34:6"
            },
            "returnParameters": {
              "id": 1623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:6"
            },
            "scope": 1668,
            "src": "1220:61:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Once a loan is liquidated, it transfers the amount in DAI tokens to the liquidator address.\n@param amount in DAI tokens to liquidate.\n@param liquidator address to receive the tokens.\n@dev It throws a require error if this contract hasn't enough DAI balance.",
            "id": 1631,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "liquidationPayment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1626,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "1629:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1625,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1628,
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1631,
                  "src": "1645:18:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1645:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1628:36:6"
            },
            "returnParameters": {
              "id": 1630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1673:0:6"
            },
            "scope": 1668,
            "src": "1601:73:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": "@notice Ønce the loan is created, it transfers the amount of DAIs to the borrower.\n@param amount of DAI tokens to transfer.\n@param borrower address which will receive the DAI tokens.\n@dev This function only can be invoked by the LoansInterface implementation.\n@dev It throws a require error if current DAI balance isn't enough to transfer the DAIs.",
            "id": 1638,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createLoan",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1636,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "2106:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2106:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1635,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1638,
                  "src": "2122:16:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1634,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2122:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2105:34:6"
            },
            "returnParameters": {
              "id": 1637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2148:0:6"
            },
            "scope": 1668,
            "src": "2086:63:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": null,
            "id": 1643,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawInterest",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1640,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1643,
                  "src": "2181:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1639,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2181:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2180:16:6"
            },
            "returnParameters": {
              "id": 1642,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2205:0:6"
            },
            "scope": 1668,
            "src": "2155:51:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user deposits DAI tokens into the pool.\n@param sender address.\n@param amount of DAI tokens.",
            "id": 1649,
            "name": "DaiDeposited",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1645,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "2401:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2401:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1647,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1649,
                  "src": "2425:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1646,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2400:40:6"
            },
            "src": "2382:59:6"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an user withdraws DAI tokens from the pool.\n@param sender address that withdrew the DAIs tokens.\n@param amount of DAI tokens.",
            "id": 1655,
            "name": "DaiWithdrawn",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1654,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1655,
                  "src": "2667:22:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2667:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1653,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1655,
                  "src": "2691:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1652,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2691:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2666:40:6"
            },
            "src": "2648:59:6"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when an borrower repaid a loan.\n@param borrower address.\n@param amount in DAIs.",
            "id": 1661,
            "name": "DaiRepaid",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1657,
                  "indexed": true,
                  "name": "borrower",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "2879:24:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2879:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1659,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1661,
                  "src": "2905:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1658,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2905:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2878:42:6"
            },
            "src": "2863:58:6"
          },
          {
            "anonymous": false,
            "documentation": "@notice This event is emitted when a liquidator liquidates a loan.\n@param liquidator address.\n@param amount of DAI tokens.",
            "id": 1667,
            "name": "PaymentLiquidated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1663,
                  "indexed": true,
                  "name": "liquidator",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "3114:26:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3114:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1665,
                  "indexed": false,
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 1667,
                  "src": "3142:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3142:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3113:44:6"
            },
            "src": "3090:68:6"
          }
        ],
        "scope": 1669,
        "src": "165:2995:6"
      }
    ],
    "src": "0:3161:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.17+commit.d19bba13.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-09T18:46:55.659Z",
  "devdoc": {
    "methods": {
      "createLoan(uint256,address)": {
        "details": "This function only can be invoked by the LoansInterface implementation.It throws a require error if current DAI balance isn't enough to transfer the DAIs.",
        "params": {
          "amount": "of DAI tokens to transfer.",
          "borrower": "address which will receive the DAI tokens."
        }
      },
      "depositDai(uint256)": {
        "details": "the user must call DAI.approve function previously.",
        "params": {
          "amount": "of DAIs to deposit in the pool."
        }
      },
      "liquidationPayment(uint256,address)": {
        "details": "It throws a require error if this contract hasn't enough DAI balance.",
        "params": {
          "amount": "in DAI tokens to liquidate.",
          "liquidator": "address to receive the tokens."
        }
      },
      "repayDai(uint256,address)": {
        "details": "This function can be called ONLY by the Loans contract.It requires a DAI.approve call before calling it.It throws a require error if borrower called DAI.approve function before calling it.",
        "params": {
          "amount": "in DAI tokens.",
          "borrower": "address that is repaying the loan."
        }
      },
      "withdrawDai(uint256)": {
        "details": "It throws a require error if the contract hasn't enough DAI balance.It throws a require error if the holder hasn't enough zDAI balance.",
        "params": {
          "amount": "of DAI tokens to withdraw."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "createLoan(uint256,address)": {
        "notice": "Ønce the loan is created, it transfers the amount of DAIs to the borrower."
      },
      "depositDai(uint256)": {
        "notice": "It allows users to deposit DAIs into the pool."
      },
      "liquidationPayment(uint256,address)": {
        "notice": "Once a loan is liquidated, it transfers the amount in DAI tokens to the liquidator address."
      },
      "repayDai(uint256,address)": {
        "notice": "It allows a borrower repaying their loan. "
      },
      "withdrawDai(uint256)": {
        "notice": "It allows any zDAI holder to burn their zDAI tokens and withdraw their DAIs."
      }
    },
    "notice": "This interface defines the functions for a DAI pool that holds all of the DAI that lenders transfer into the protocol."
  }
}